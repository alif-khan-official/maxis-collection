{"version":3,"sources":["auth/AuthUtil.js","components/widgets/ButtonComponent.js","components/widgets/InputFieldComponent.js","constants/GeneralConstants.js","components/login/LoginForm.js","App.js","common/FooterComponent.js","common/HeaderComponent.js","common/MainComponent.js","components/password/UpdatePasswordComponent.js","components/password/OTPSubmitComponent.js","components/password/OTPGenerateComponent.js","components/collection-portal/home/HomeComponent.js","components/collection-portal/home/DetailPageComponent.js","components/collection-portal/account-head/wallet-management/ManageWalletComponent.js","components/collection-portal/account-head/wallet-management/WalletAddComponent.js","components/collection-portal/account/wallet-otp-reset/WalletOTPResetComponent.js","components/collection-portal/account-head/digital-money-acquisition/DigitalMoneyAcquisitionComponent.js","components/collection-portal/account-head/digital-money-acquisition/DigitalMoneyAcquisitionRequestComponent.js","components/collection-portal/account-head/encashment/ManageEncashComponent.js","components/collection-portal/account-head/collection/ManageCollectionComponent.js","components/collection-portal/account-head/lifting/ManageLiftingComponent.js","components/collection-portal/account-head/encashment/ApproverMyCash.js","components/collection-portal/account-head/encashment/ApproverMyCashHistory.js","components/Lab.js","index.js"],"names":["username","localStorage","setItem","currentDateTime","Date","date","getDate","month","getMonth","year","getFullYear","hour","getHours","minute","getMinutes","getItem","tokenDetail","id_token","refresh_token","expires_in","JSON","stringify","roleList","console","log","menu","e","roleNames","roleArray","parse","j","length","roleName","i","name","this","getIdToken","undefined","clear","ButtonComponent","className","disabled","props","onClick","text","React","Component","InputFieldComponent","readOnly","type","pattern","format","placeholder","value","onChange","target","onKeyDown","ROLE_NAME_ADMIN","ROLE_NAME_MERCHANT","DMA_RESPONSE_SUCCESS_CODE","DMA_RESPONSE_SUCCESS_RESULT","DMA_RESPONSE_SUCCESS_MESSAGE","DMA_RESPONSE_FAILURE_CODE","DMA_RESPONSE_FAILURE_RESULT","DMA_RESPONSE_FAILURE_MESSAGE","MW_RESPONSE_SUCCESS_CODE","MW_RESPONSE_SUCCESS_RESULT","MW_RESPONSE_SUCCESS_MESSAGE","MW_RESPONSE_FAILURE_CODE","MW_RESPONSE_FAILURE_RESULT","MW_RESPONSE_FAILURE_MESSAGE","LoginForm","state","password","enable","property","val","setState","thisEvent","keyCode","doLogin","a","gwUrl","process","AuthUtil","getRoleList","roleId","index","Constant","id","fetch","method","headers","body","userId","res","json","result","status","response","history","push","NotificationManager","info","setMenu","menuId","error","resetForm","warning","authResponse","setUsername","setTokenDetail","setRole","getMenu","message","alt","src","setInputValue","checkEnter","to","pathname","withRouter","App","FooterComponent","HeaderComponent","isTokenValid","map","displayName","resetTokenDetail","MainComponent","component","path","_owner","pendingProps","location","isforgetPasswordPage","getMainComponentDesign","getMainComponentDesign2","UpdatePasswordComponent","getUsername","newPassword","prevPassword","changePassword","componentDesign","getComponentDesign","OTPSubmitComponent","data","otpValidationId","otpValue","submitOTP","OTPGenerateComponent","generateOTP","HomeComponent","fieldSetLegendClassName","classNames","depositBanks","depositBanksDropdown","transferWallets","transferWalletsDropdown","motherMerchants","motherMerchantsDropdown","localMerchants","localMerchantsDropdown","collectionTypes","collectionTypesDropdown","walletTypes","currentLocalMerchantsDropdown","banksListRequest","responseBankList","bankList","banks","ele","bank","label","walletId","walletAccountId","replace","walletsListRequest","responseWalletList","walletListPrimary","walletList","wallets","wallet","walletType","collectionTypesListRequest","responseCollectionTypeList","collectionTypeList","collectionTypesUsable","collectionType","motherMerchantListRequest","responseMotherMerchantList","motherMerchantList","motherMerchant","localMerchantListRequest","responseLocalMerchantList","localMerchantList","localMerchant","currenctLocalMerchantsDropdown","options","property1","property2","setValue","p1","isNaN","clmd","lm","lmIndex","taggedMerchantIds","merchantId","payeeId","deposit","amount","currency","bankDetails","domainId","disableDepositButton","depositRequest","cashpointId","messagetype","toLowerCase","includes","openAlert","transfer","transferAmount","walletPin","transferWalletId","disableTransferButton","transferRequest","collection","cashPointId","disableCollectButton","collectionRequest","getRolePresence","style","legend","toggleable","collapsed","inputId","getCurrencies","optionLabel","optionValue","currencyType","getDepositBanks","reference","comments","getTransferWallets","getMotherMerchants","onSelect","getLocalMerchants","getCollectiontypes","getWalletTypes","invoiceNo","reference1","reference2","reference3","collectionPin","payeePin","collect","prepareHomePage","DetailPageComponent","row","_original","occupation","toString","fullDate","dateFormat","selected","handleDateChange","save","ManageWalletComponent","filterValue","address","Header","accessor","width","fixed","columns","Cell","handleClick","accountId","then","getColumns","tmpData","context","filter","data1","defaultPageSize","pageSizeOptions","WalletAddComponent","balance","ownerId","transactionAccountId","walletName","walletOTP","readOnlyFieldValue","encashableBalanceString","encashableBalance","parseInt","encashmentRequest","digitalMoney","encashmentAmount","encashmentFeeRateForMerchant","maxisVATRate","maxisAITRate","bankFeeRatio","maxisFeeRatio","decision","merchantName","feeAmount","bankAmount","maxisAmount","maxisVATAmount","maxisAmountAfterVAT","maxisAITAmount","maxisAmountAfterAIT","resEncash","responseEncash","align","getAuthCurrentDateTime","balanceCheck","paddingLeft","otpReset","enCash","code","WalletOTPResetComponent","selectedData","item","walletInfo","DigitalMoneyAcquisitionComponent","localDateTime","substring","DigitalMoneyAcquisitionRequestComponent","b64Image","bankName","bankBranch","bankAccountType","bankAccountName","bankAccountNumber","rerenceDetails","mdWallet","pushed","referenceDetails","tmpWallet","d","w","refenceDetails","ManageEncashComponent","handleFromDateChange","bind","handleToDateChange","getSearchResult","downloadData","prepareDownload","source","currentRecords","dataToDownload","headerArray","dataArray","generateTime","fromDate","toDate","updateApproval","approverId","encashmentId","comment","csvLink","link","click","filename","ref","r","filterable","defaultFilterMethod","column","pivotId","String","startsWith","ManageCollectionComponent","dateTime","merchantWallet","payeeName","payeeWallet","cpName","cashpointWallet","collectionTypeName","columnsMerchant","ManageLiftingComponent","createDateTime","cashpoint","teritory","approvalDetails","approvalDecision","accountUserId","requestId","commentOne","commentTwo","componentDidMount","ApproverMyCash","ApproverMyCashHistory","LabComponent","routing","exact","DetailComponent","ManageWallet","AddWallet","DigitalMoneyAcquisition","AddDigitalMoneyAcquisitionRequest","UpdatePassword","SubmitOTP","GenerateOTP","Lab","ReactDOM","render","document","getElementById"],"mappings":"8RAuIe,G,MAAA,I,2FAtIX,SAAYA,GACRC,aAAaC,QAAQ,WAAYF,K,oCAGrC,WACC,IACOG,EAAkB,IAAIC,KACtBC,EAAOF,EAAgBG,UACvBC,EAAQJ,EAAgBK,WAAa,EACrCC,EAAON,EAAgBO,cACvBC,EAAOR,EAAgBS,WACvBC,EAASV,EAAgBW,aAAe,EAG5C,OAAOL,EAAO,KAAOF,EAAQ,GAAI,IAAM,IAAMA,EAAQ,IAAMF,EAAO,KAAQM,EAAO,IAAOA,EAAO,IAAMA,EAAO,GAAM,IAAM,KAAQA,EAAO,GAAOA,EAAO,GAAKA,GAAQ,KAAQE,EAAS,GAAK,IAAI,IAAMA,EAAS,KAAQF,EAAO,GAAM,KAAM,Q,yBAE1O,WAEI,OADeV,aAAac,QAAQ,c,4BAIxC,SAAeC,GACXf,aAAaC,QAAQ,WAAYc,EAAYC,UAC7ChB,aAAaC,QAAQ,gBAAiBc,EAAYE,eAClDjB,aAAaC,QAAQ,aAAcc,EAAYG,YAC/ClB,aAAaC,QAAQ,YAAakB,KAAKC,UAAUL,EAAYM,a,qBAEjE,SAAQA,GACJC,QAAQC,IAAI,oBACZD,QAAQC,IAAIF,GACZrB,aAAaC,QAAQ,YAAakB,KAAKC,UAAUC,M,qBAErD,SAAQG,GACJxB,aAAaC,QAAQ,OAAQkB,KAAKC,UAAUI,M,wBAGhD,WACI,IAAIR,EAAW,GACf,IAEI,OADAA,EAAWhB,aAAac,QAAQ,YAGlC,MAAOW,GAEL,OADAzB,aAAaC,QAAQ,WAAY,IAC1Be,K,6BAIf,SAAgBU,GAEZJ,QAAQC,IAAI,kCACZ,IAAIF,EAAW,KAEf,IAEIA,EAAWrB,aAAac,QAAQ,aAEhC,IADA,IAAIa,EAAYR,KAAKS,MAAMP,GAClBQ,EAAI,EAAGA,EAAIH,EAAUI,OAAQD,IACtC,CACI,IAAIE,EAAWL,EAAUG,GACzBP,QAAQC,IAAI,iCACZD,QAAQC,IAAIQ,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAUG,OAAQE,IACtC,CAEI,GADkBL,EAAUK,GACZC,OAASF,EAIrB,OAFAT,QAAQC,IAAI,iCACZD,QAAQC,IAAI,SACL,GAOnB,OAFAD,QAAQC,IAAI,kCACZD,QAAQC,IAAI,SAvBH,KA0Bb,MAAOE,GAEH,MA5BS,Q,yBAgCjB,WACI,IAAIJ,EAAW,KACf,IAII,OAHAA,EAAWrB,aAAac,QAAQ,aAChCQ,QAAQC,IAAI,oBACZD,QAAQC,IAAIF,GACLF,KAAKS,MAAMP,GAEpB,MAAOI,GAEL,OADAzB,aAAaC,QAAQ,YAAa,IAC3BoB,K,6BAIf,WAEI,OADoBrB,aAAac,QAAQ,mB,2BAI7C,WAEI,OADiBd,aAAac,QAAQ,gB,qBAI1C,WACI,IAAIU,EAAO,GACX,IAEI,OADAA,EAAOxB,aAAac,QAAQ,QACrBK,KAAKS,MAAMJ,GAEpB,MAAOC,GAEL,OADAzB,aAAaC,QAAQ,OAAQ,IACtBuB,K,0BAGf,WACI,IAAIR,EAAWkB,KAAKC,aAEpB,OAAiB,OAAbnB,QAAkCoB,IAAbpB,I,8BAO7B,WACIhB,aAAaqC,Y,cC/GNC,E,4JAjBb,WACE,OACE,qBAAKC,UAAU,kBAAf,SAEE,wBACEA,UAAU,MACVC,SAAUN,KAAKO,MAAMD,SACrBE,QAASR,KAAKO,MAAMC,QAHtB,SAKGR,KAAKO,MAAME,a,GAVQC,IAAMC,WCiCrBC,E,4JAhCX,WAAU,IAAD,OACL,OACI,qBAAKP,UAAU,aAAf,UACgC,IAAxBL,KAAKO,MAAMM,SACP,uBACAR,UAAWL,KAAKO,MAAMF,UACtBQ,UAAQ,EACRC,KAAMd,KAAKO,MAAMO,KACjBC,QAASf,KAAKO,MAAMS,OACpBC,YAAajB,KAAKO,MAAMU,YACxBC,MAAOlB,KAAKO,MAAMW,MAClBC,SAAU,SAAC5B,GAAD,OAAO,EAAKgB,MAAMY,SAAS5B,EAAE6B,OAAOF,UAIlD,uBACIb,UAAWL,KAAKO,MAAMF,UACtBS,KAAMd,KAAKO,MAAMO,KACjBC,QAASf,KAAKO,MAAMS,OACpBC,YAAajB,KAAKO,MAAMU,YACxBC,MAAOlB,KAAKO,MAAMW,MAClBC,SAAU,SAAC5B,GAAD,OAAO,EAAKgB,MAAMY,SAAU,EAAKZ,MAAMY,SAAS5B,EAAE6B,OAAOF,OAAS,IAC5EG,UAAW,SAAC9B,GAAD,OAAO,EAAKgB,MAAMc,UAAW,EAAKd,MAAMc,UAAU9B,GAAI,Y,GAvBvDmB,IAAMC,WCoBzB,M,sCApBXW,gBAAkB,Q,KAClBC,mBAAqB,W,KAErBC,0BAA4B,M,KAC5BC,4BAA8B,U,KAC9BC,6BAA+B,gC,KAE/BC,0BAA4B,G,KAC5BC,4BAA8B,U,KAC9BC,6BAA+B,iC,KAE/BC,yBAA2B,M,KAC3BC,2BAA6B,U,KAC7BC,4BAA8B,sB,KAE9BC,yBAA2B,G,KAC3BC,2BAA6B,U,KAC7BC,4BAA8B,wBCT5BC,E,kDAEF,WAAY7B,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACTxE,SAAU,GACVyE,SAAU,GACVC,OAAO,IALI,E,iDASnB,SAAcC,EAAUC,GACpBzC,KAAK0C,SAAL,eACKF,EAAWC,M,wBAIpB,SAAWE,GACmB,KAAtBA,EAAUC,SAEV5C,KAAK6C,Y,uBAIb,WACI7C,KAAK0C,SAAS,CACV7E,SAAU,GACVyE,SAAU,O,4DAGlB,sCAAAQ,EAAA,sDACUC,EAAQC,mCAEV7D,EAAW8D,EAASC,cACpBC,EAAS,GAEJC,EAAQ,EANrB,YAMwBA,EAAQjE,EAASS,QANzC,oBAQYT,EAASiE,GAAOrD,OAASsD,EAAS/B,gBAR9C,wBASY6B,EAAShE,EAASiE,GAAOE,GATrC,oCAYYH,EAAShE,EAASiE,GAAOE,GAZrC,6BAMiDF,IANjD,kDAkBwBG,MAAMR,EAAQ,iDAAkD,CAC5ES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjByE,OAAQ,GACRR,OAAQA,MA1BxB,eAkBYS,EAlBZ,iBA8B2BA,EAAIC,OA9B/B,QAgCqC,aAFzBC,EA9BZ,QAgCmBA,OAAOC,SACoB,OAA9BD,EAAOA,OAAOE,SAAS,IACvBhE,KAAKO,MAAM0D,QAAQC,KAAK,SACxBC,sBAAoBC,KAAK,yCAA2CpE,KAAKqC,MAAMxE,YAE/EoF,EAASoB,QAAQP,EAAOA,OAAOE,SAAS,GAAGM,QAC3CtE,KAAKO,MAAM0D,QAAQC,KAAK,WAKhC9E,QAAQC,IAAIyE,GA3CpB,mDA8CQK,sBAAoBI,MAAM,gBAAiB,yBAC3CvE,KAAKwE,YA/Cb,2D,kHAkDA,8BAAA1B,EAAA,yDACI9C,KAAK0C,SAAS,CACVH,OAAO,YAENvC,KAAKqC,MAAMxE,SAJpB,uBAKQmC,KAAK0C,SAAS,CACVH,OAAQ,KAEZ4B,sBAAoBM,QAAQ,UAAW,2BAR/C,6BAYSzE,KAAKqC,MAAMC,SAZpB,uBAaQtC,KAAK0C,SAAS,CACVH,OAAO,KAEX4B,sBAAoBM,QAAQ,UAAW,2BAhB/C,gCAmBkBzB,mCAnBlB,oBAqBwBO,MAAMR,8EAAuD,CACzES,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMzE,KAAKC,UAAU,CACjBrB,SAAUmC,KAAKqC,MAAMxE,SACrByE,SAAUtC,KAAKqC,MAAMC,aA5BrC,eAqBYsB,EArBZ,iBAgC2BA,EAAIC,OAhC/B,QAgCYC,EAhCZ,OAkCQ9D,KAAK0C,SAAS,CACVH,OAAO,KAEPuB,EAAOA,OAAOY,aAAa5F,UAE3BmE,EAAS0B,YAAY3E,KAAKqC,MAAMxE,UAChCoF,EAAS2B,eAAed,EAAOA,OAAOY,cACtCzB,EAAS4B,QAAQf,EAAOA,OAAO3E,UAE/Ba,KAAK8E,WAGLX,sBAAoBM,QAAQX,EAAOA,OAAOiB,QAASjB,EAAOA,OAAOA,QA9C7E,mDAkDQ9D,KAAK0C,SAAS,CACVH,OAAO,KAEX4B,sBAAoBI,MAAM,gBAAiB,yBAC3CvE,KAAKwE,YAtDb,2D,0EA2DA,WAAU,IAAD,OACL,OAEI,sBAAKnE,UAAU,aAAf,UACI,qBAAKA,UAAU,gCAAf,SACI,qBAAK2E,IAAI,GAAGC,IAAI,oBAEpB,oBAAI5E,UAAU,gCAAd,+BACI,sBAAKA,UAAU,YAAf,UACI,6CACA,cAAC,EAAD,CACIA,UAAU,QACVS,KAAK,OACLG,YAAY,WACZC,MAAOlB,KAAKqC,MAAMxE,SAAWmC,KAAKqC,MAAMxE,SAAW,GACnDsD,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,WAAYzC,IAClDpB,UAAW,SAAC9B,GAAD,OAAO,EAAK4F,WAAW5F,MAGtC,6CACA,cAAC,EAAD,CACIc,UAAU,QACVS,KAAK,WACLG,YAAY,WACZC,MAAOlB,KAAKqC,MAAMC,SAAWtC,KAAKqC,MAAMC,SAAW,GACnDnB,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,WAAYzC,IAClDpB,UAAW,SAAC9B,GAAD,OAAO,EAAK4F,WAAW5F,MAEtC,qBAAKc,UAAU,gCAAf,SAA+C,cAAC,IAAD,CAC3C+E,GAAI,CACAC,SAAU,iBAF6B,iCAQ/C,cAAC,EAAD,CACI5E,KAAK,QACLH,SAAUN,KAAKqC,MAAME,OACrB/B,QAAS,kBAAM,EAAKqC,uB,GAlLxBnC,IAAMC,WA2Lf2E,cAAWlD,GCpLXmD,E,4JAXb,WACE,OACE,gCACE,cAAC,EAAD,IACA,cAAC,wBAAD,W,GANU7E,IAAMC,WCcT6E,E,4JAfX,WACI,OACI,gCACI,qBAAKnF,UAAU,6BAAf,SACI,6DAEJ,sBAAKA,UAAU,6BAAf,UACI,wCADJ,iB,GAPcK,IAAMC,WCE9B8E,E,4JAiFF,WAEI,IAAInG,EAAO2D,EAAS6B,UAEpB,OACI,sBAAKzE,UAAU,oCAAf,UAEI,qBAAKA,UAAU,iBAAf,SACI,qBAAKA,UAAU,QAAf,SACK4C,EAASyC,gBACN,cAAC,IAAD,CACIN,GAAI,CACAC,SAAU,SAFlB,sBAWX/F,GAAQA,EAAKqG,KAAI,SAACzE,EAAOkC,GACtB,OACI,qBAAK/C,UAAU,iBAAf,SACoB,SAAfa,EAAMnB,MACH,qBAAKM,UAAU,QAAf,SACI,cAAC,IAAD,CACI+E,GAAI,CACAC,SAAUnE,EAAMnB,MAFxB,SAKKmB,EAAM0E,eANaxC,IAFCA,MAmB7C,qBAAK/C,UAAU,iBAAf,SACI,qBAAKA,UAAU,QAAf,SACK4C,EAASyC,gBACN,cAAC,IAAD,CACIN,GAAI,CACAC,SAAU,oBAFlB,iCAWZ,qBAAKhF,UAAU,iBAAf,SACI,qBAAKA,UAAU,QAAf,SACK4C,EAASyC,gBACN,cAAC,IAAD,CACIN,GAAI,CACAC,SAAU,KAEd7E,QAAS,kBAAMyC,EAAS4C,oBAJ5B,wBAYZ,qBAAKxF,UAAU,iBAAf,SACI,qBAAKA,UAAU,QAAf,UACM4C,EAASyC,gBACP,cAAC,IAAD,CACIN,GAAI,CACAC,SAAU,KAFlB,sC,GA3JE3E,IAAMC,WA6KrB2E,cAAWG,GCtGXK,E,4KAlEX,WAgBI,OAda,gCACT,cAAC,EAAD,IAEA,sBAAKzF,UAAU,OAAf,UACKL,KAAKO,MAAMwF,UACZ,cAAC,wBAAD,OAGJ,qBAAK1F,UAAU,SAAf,SACI,cAAC,EAAD,W,qCAQZ,WAmBI,OAlBa,gCACT,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,QAIR,qBAAKA,UAAU,OAAf,gC,kCAcR,WACI,IAAI2F,EAAOhG,KAAKO,MAAMwF,UAAUE,OAAOC,aAAaC,SAASd,SAC7D,MAAa,gBAATW,GAIS,kBAATA,I,oBAKR,WAEI,OAAIhG,KAAKoG,wBAILnD,EAASyC,eAHF1F,KAAKqG,yBAMTrG,KAAKsG,8B,GAhEQ5F,IAAMC,WCE5B4F,E,kDAEJ,WAAYhG,GAAQ,IAAD,6BACjB,cAAMA,GACNnB,QAAQC,IAAIkB,GACZ,EAAK8B,MAAQ,CACXsB,OAAQV,EAASuD,cACjBC,YAAa,IALE,E,iDASnB,SAAcjE,EAAUC,GACtBzC,KAAK0C,SAAL,eACGF,EAAWC,M,uBAIhB,WACEzC,KAAK0C,SAAS,CACZiB,OAAQ,GACR8C,YAAa,O,mEAIjB,8BAAA3D,EAAA,yDACO9C,KAAKqC,MAAMsB,OADlB,oDAKO3D,KAAKqC,MAAMoE,YALlB,uDAUgBzD,mCAVhB,kBAYoBO,MAAMR,sFAA+D,CACnFS,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAEhCyD,KAAMzE,KAAKC,UAAU,CACnByE,OAAQ3D,KAAKqC,MAAMsB,OACnB8C,YAAazG,KAAKqC,MAAMoE,gBApBhC,cAYQ7C,EAZR,iBAwBuBA,EAAIC,OAxB3B,QA0BiC,aAFzBC,EAxBR,QA0BeA,OAAOC,QAChB3E,QAAQC,IAAIyE,GACZ9D,KAAKO,MAAM0D,QAAQC,KAAK,OAExBC,sBAAoBM,QAAQ,UAAW,6BACvCrF,QAAQC,IAAIyE,IA/BlB,kDAoCI9D,KAAKwE,YACLpF,QAAQC,IAAR,MArCJ,0D,sFA0CA,WAAsB,IAAD,OA6BnB,OA5Ba,qBAAKgB,UAAU,WAAf,SACX,sBAAKA,UAAU,YAAf,UACE,iDACA,6CACA,cAAC,EAAD,CACEA,UAAU,QACVQ,SAAU,WACVC,KAAK,OACLG,YAAY,WACZC,MAAOlB,KAAKqC,MAAMqE,aAAe1G,KAAKqC,MAAMqE,aAAezD,EAASuD,cACpErF,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,eAAgBzC,MAExD,iDACA,cAAC,EAAD,CACEpC,UAAU,QACVS,KAAK,WACLG,YAAY,0BACZC,MAAOlB,KAAKqC,MAAMoE,YAAczG,KAAKqC,MAAMoE,YAAc,GACzDtF,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,cAAezC,MAGvD,cAAC,EAAD,CACEhC,KAAK,SACLD,QAAS,kBAAM,EAAKmG,2B,oBAQ5B,WACE,IAAIC,EAAkB5G,KAAK6G,qBAC3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GApGClG,IAAMC,WAyG7B2E,cAAWiB,GC1GpBO,E,kDAEF,WAAYvG,GAAQ,IAAD,sBACf,cAAMA,GACNnB,QAAQC,IAAIkB,GACZ,IAAIwG,EAAO,EAAKxG,MAAM4F,SAAS9D,MAHhB,OAIfjD,QAAQC,IAAI,QAAS0H,GAGjB,EAAK1E,WADInC,IAAT6G,EACa,CACTC,gBAAiB,GACjBC,SAAU,IAGD,CACTD,gBAAiBD,EAAKC,gBACtBC,SAAU,IAdH,E,iDAoBnB,SAAczE,EAAUC,GACpBzC,KAAK0C,SAAL,eACKF,EAAWC,M,uBAIpB,WACIzC,KAAK0C,SAAS,CACVsE,gBAAiB,GACjBC,SAAU,O,8DAIlB,8BAAAnE,EAAA,yDACS9C,KAAKqC,MAAM4E,SADpB,uBAEQ9C,sBAAoBM,QAAQ,UAAW,4BAF/C,6BAMSzE,KAAKqC,MAAM2E,gBANpB,uBAOQ7C,sBAAoBM,QAAQ,UAAW,+BAP/C,gCAWkBzB,mCAXlB,mBAawBO,MAAMR,4EAAqD,CACvES,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMzE,KAAKC,UAAU,CACjB8H,gBAAiBhH,KAAKqC,MAAM2E,gBAC5BC,SAAUjH,KAAKqC,MAAM4E,aApBrC,eAaYrD,EAbZ,iBAyB2BA,EAAIC,OAzB/B,SAyBYC,EAzBZ,SA4BY1E,QAAQC,IAAIyE,GACZK,sBAAoBM,QAAQ,UAAW,wDACvCzE,KAAKO,MAAM0D,QAAQC,KAAK,MAExB9E,QAAQC,IAAIyE,GAhCxB,kDAoCQK,sBAAoBM,QAAQ,UAAW,sBACvCzE,KAAKwE,YACLxE,KAAKO,MAAM0D,QAAQC,KAAK,iBACxB9E,QAAQC,IAAR,MAvCR,0D,sFA4CA,WAAsB,IAAD,OAwBjB,OAtBa,qBAAKgB,UAAU,WAAf,SACT,sBAAKA,UAAU,YAAf,UACI,4CACA,4EACA,mEAEA,cAAC,EAAD,CACIA,UAAU,QACVS,KAAK,SACLG,YAAY,qBACZC,MAAOlB,KAAKqC,MAAM4E,SAAWjH,KAAKqC,MAAM4E,SAAW,GACnD9F,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,WAAYzC,MAGtD,cAAC,EAAD,CACIhC,KAAK,OACLD,QAAS,kBAAM,EAAK0G,sB,oBASpC,WACI,IAAIN,EAAkB5G,KAAK6G,qBAC3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GA5GRlG,IAAMC,WAiHxB2E,cAAWwB,GC/GpBK,E,kDAEF,WAAY5G,GAAQ,IAAD,6BACf,cAAMA,GACNnB,QAAQC,IAAIkB,GACZ,EAAK8B,MAAQ,CACTsB,OAAQ,IAJG,E,iDAQnB,SAAcnB,EAAUC,GACpBzC,KAAK0C,SAAL,eACKF,EAAWC,M,uBAIpB,WACIzC,KAAK0C,SAAS,CACViB,OAAQ,O,gEAIhB,8BAAAb,EAAA,yDACS9C,KAAKqC,MAAMsB,OADpB,uBAEQQ,sBAAoBM,QAAQ,UAAW,yBAF/C,gCAMkBzB,mCANlB,kBAQwBO,MAAMR,8EAAuD,CACzES,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMzE,KAAKC,UAAU,CACjByE,OAAQ3D,KAAKqC,MAAMsB,WAdnC,cAQYC,EARZ,iBAkB2BA,EAAIC,OAlB/B,SAkBYC,EAlBZ,QAqBY9D,KAAKO,MAAM0D,QAAQC,KAAK,CACpBmB,SAAU,cACVhD,MAAO,CAAE2E,gBAAiBlD,EAAOA,OAAOkD,oBAG5C7C,sBAAoBM,QAAQX,EAAOA,OAAOA,OAAQA,EAAOA,OAAOiB,SAChE3F,QAAQC,IAAIyE,IA3BxB,kDAgCQK,sBAAoBM,QAAQ,UAAW,sBACvCzE,KAAKwE,YACLpF,QAAQC,IAAR,MAlCR,0D,sFAuCA,WAAsB,IAAD,OAwBjB,OArBa,qBAAKgB,UAAU,WAAf,SACT,sBAAKA,UAAU,YAAf,UACI,6CAEA,iFACA,gEACA,cAAC,EAAD,CACIA,UAAU,QACVS,KAAK,OACLG,YAAY,2BACZC,MAAOlB,KAAKqC,MAAMsB,OAAS3D,KAAKqC,MAAMsB,OAAS,GAC/CxC,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,SAAUzC,MAGpD,cAAC,EAAD,CACIhC,KAAK,OACLD,QAAS,kBAAM,EAAK4G,wB,oBAQpC,WACI,IAAIR,EAAkB5G,KAAK6G,qBAC3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GA1FNlG,IAAMC,WA+F1B2E,cAAW6B,G,6FCvFpBE,E,kDAobF,WAAY9G,GACX,IAAD,8BACI,cAAMA,IACD+G,wBAAyBC,IAAW,iCACzC,EAAKC,aAAyB,GAC9B,EAAKC,qBAAyB,GAC9B,EAAKC,gBAAyB,GAC9B,EAAKC,wBAAyB,GAC9B,EAAKC,gBAAyB,GAC9B,EAAKC,wBAAyB,GAC9B,EAAKC,eAAyB,GAC9B,EAAKC,uBAAyB,GAC9B,EAAKC,gBAAyB,GAC9B,EAAKC,wBAAyB,GAC9B,EAAKC,YAAc,CAAC,CAAC,MAAQ,SAAU,MAAQ,UAAW,CAAC,MAAQ,UAAW,MAAQ,YAEtF,EAAKC,8BAAgC,GAErC,EAAK9F,MAAO,CACI,QAAgB,CAAI,OAAsB,EACtB,aAAsB,MACtB,SAAsB,GACtB,YAAsB,GACtB,YAAwB,CAAI,SAA0B,GAC1B,SAA0B,GAC1B,WAA0B,GAC1B,gBAA0B,GAC1B,QAA0B,GAC1B,UAA0B,GAC1B,UAA0B,GAC1B,QAA0B,EAC1B,qBAA0B,GAC1B,WAA0B,GAC1B,OAA0B,IAGtD,kBAAsB,GACtB,UAAsB,GACtB,SAAsB,GACtB,gBAAwB,CAAI,iBAA0B,GAC1B,aAA0B,KAC1B,sBAA0B,GAC1B,iBAA0B,GAC1B,gBAA0B,KAI1E,SAAgB,CACI,eAAsB,EACtB,UAAsB,GACtB,iBAAsB,GACtB,OAAsB,IAG1C,WAAgB,CACI,YAAkBY,EAASuD,cAC3B,WAAkB,GAClB,QAAkB,GAClB,OAAkB,GAClB,eAAkB,GAClB,SAAkB,GAClB,cAAkB,GAClB,SAAkB,GAClB,UAAc,GACd,WAAc,GACd,WAAc,GACd,WAAc,GACd,SAAc,MACd,SAA0B,UAC1B,oBAA0B,GAC1B,uBAA0B,IAI9C,uBAA0B,EAC1B,sBAA0B,EAC1B,sBAA0B,GA3E9C,E,0FApbA,sGAAA1D,EAAA,2DAEQ9C,KAAKwH,aAAa5H,OAAS,GAFnC,wDAIUmD,EAAQC,mCAJlB,SAOiCO,MAAMR,EAAQ,2CAA4C,CACnFS,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,gBAX1C,cAOQmI,EAPR,gBAeiCA,EAAiBvE,OAflD,OAqBI,IANIwE,EAfR,OAgBIjJ,QAAQC,IAAI,oBACZD,QAAQC,IAAIgJ,GACRC,EAAWD,EAAiBvE,OAAOiD,KAEnCwB,EAAQ,GACHnF,EAAQ,OAAgBlD,IAAboI,GAAuC,OAAbA,GAAqBlF,EAAQkF,EAAS1I,OAAQwD,IAEpFoF,EAAMF,EAASlF,GAEfqF,EAAO,CACPC,MAAOF,EAAIG,SAAW,KAAOH,EAAII,gBAAgBC,QAAQ,oBAAqB,IAAIA,QAAQL,EAAIG,SAAU,IAAIE,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAAO,IAClJ3H,MAAOkC,GAGXmF,EAAMrE,KAAKuE,GA9BnB,OAiCIzI,KAAKwH,aAAec,EACpBtI,KAAKyH,qBAAuBc,EAlChC,UAqCmChF,MAASR,EAAQ,+CACR,CACI,OAAgB,OAChB,QAAgB,CACI,eAAgB,mBAChB,MAAS,UAAYE,EAAShD,cAElD,KAAgB,kBAAuBgD,EAASuD,cAAgB,OA5ChH,eAqCQsC,EArCR,iBAiDmCA,EAAmBjF,OAjDtD,QAwDI,IAPIkF,EAjDR,OAkDI3J,QAAQC,IAAI,sBACZD,QAAQC,IAAI0J,GACRC,EAAoBD,EAAmBjF,OAAOiD,KAC9CkC,EAAa,GAEbC,EAAU,GACL9F,EAAQ,OAAyBlD,IAAtB8I,GAAyD,OAAtBA,GAA8B5F,EAAQ4F,EAAkBpJ,OAAQwD,IAE/GoF,EAAMQ,EAAkB5F,GAExB+F,EAAS,CAACT,MAAOF,EAAIG,SAAUzH,MAAOsH,EAAIG,UAEvB,QAAnBH,EAAIY,aAEJH,EAAW/E,KAAKsE,GAChBU,EAAQhF,KAAKiF,IAjEzB,OAqEI/J,QAAQC,IAAI,cACZD,QAAQC,IAAI4J,GACZ7J,QAAQC,IAAI,WACZD,QAAQC,IAAI6J,GAEZlJ,KAAK0H,gBAAkBuB,EACvBjJ,KAAK2H,wBAA0BuB,EA3EnC,UA8E2C3F,MAAUR,EAAQ,8CACT,CACI,OAAgB,MAChB,QAAgB,CACI,eAAgB,mBAChB,MAAS,UAAYE,EAAShD,gBAnF1G,eA8EQoJ,EA9ER,iBAyF2CA,EAA2BxF,OAzFtE,QAgGI,IAPIyF,EAzFR,OA0FIlK,QAAQC,IAAI,8BACZD,QAAQC,IAAIiK,GACRC,EAAqBD,EAA2BxF,OAAOiD,KAEvDiB,EAAkB,GAClBwB,EAAwB,GACnBpG,EAAQ,OAA0BlD,IAAvBqJ,GAA2D,OAAvBA,GAA+BnG,EAAQmG,EAAmB3J,OAAQwD,SAG3FlD,KADvBsI,EAAMe,EAAmBnG,IACrBqG,gBAAuD,KAAvBjB,EAAIiB,gBAA+C,MAAtBjB,EAAIiB,iBAEjEA,EAAiB,CACjBf,MAAOF,EAAIiB,eACXvI,MAAOsH,EAAIlF,IAEfkG,EAAsBtF,KAAKsE,GAC3BR,EAAgB9D,KAAKuF,IA1GjC,OA8GIzJ,KAAKgI,gBAAyBwB,EAC9BxJ,KAAKiI,wBAAyBD,EA/GlC,UAkH0CzE,MAAUR,EAAQ,+CACR,CACI,OAAgB,OAChB,QAAgB,CACI,eAAgB,mBAChB,MAAS,UAAYE,EAAShD,cAElD,KAAgB,kBAAuBgD,EAASuD,cAAgB,OAzHxH,eAkHQkD,EAlHR,iBA8H2CA,EAA0B7F,OA9HrE,QAoII,IANI8F,EA9HR,OA+HIvK,QAAQC,IAAI,8BACZD,QAAQC,IAAIsK,GACRC,EAAqBD,EAA2B7F,OAAOE,SAAS,GAEhE4D,EAAkB,GACbxE,EAAQ,OAA0BlD,IAAvB0J,GAA2D,OAAvBA,GAA+BxG,EAAQwG,EAAmBhK,OAAQwD,IAElHoF,EAAMoB,EAAmBxG,GAEzByG,EAAiB,CACjBnB,MAAOF,EAAIzI,KAAO,KAAOyI,EAAI7E,OAAS,IACtCzC,MAAOsH,EAAI7E,QAGfiE,EAAgB1D,KAAK2F,GA7I7B,OAgJI7J,KAAK4H,gBAAyBgC,EAC9B5J,KAAK6H,wBAAyBD,EAjJlC,UAoJyCrE,MAAUR,EAAQ,4CACP,CACI,OAAgB,OAChB,QAAgB,CACI,eAAgB,mBAChB,MAAS,UAAYE,EAAShD,cAElD,KAAgB,kBAAuBgD,EAASuD,cAAgB,OA3JxH,eAoJQsD,EApJR,iBAgK0CA,EAAyBjG,OAhKnE,QAsKI,IANIkG,EAhKR,OAiKI3K,QAAQC,IAAI,6BACZD,QAAQC,IAAI0K,GACRC,EAAoBD,EAA0BjG,OAAOE,SAAS,GAE9D8D,EAAiB,GACZ1E,EAAQ,OAAyBlD,IAAtB8J,GAAyD,OAAtBA,GAA8B5G,EAAQ4G,EAAkBpK,OAAQwD,IAE/GoF,EAAMwB,EAAkB5G,GAExB6G,EAAgB,CAChBvB,MAAOF,EAAIzI,KAAO,KAAOyI,EAAI7E,OAAS,IACtCzC,MAAOsH,EAAI7E,QAGfmE,EAAe5D,KAAK+F,GAGxBjK,KAAK8H,eAAwBkC,EAC7BhK,KAAK+H,uBAAwBD,EAC7B9H,KAAKkK,+BAAwC,GApLjD,iD,iFAuLA,WAEI,IAAIC,EAAU,CAAC,CAAC,KAAO,SAAU,KAAO,SAAU,MAAQ,SAAU,MAAQ,UAAW,CAAC,KAAO,UAAW,KAAO,UAAW,MAAQ,UAAW,MAAQ,YAEvJ,OADA/K,QAAQC,IAAI8K,GACLA,I,6BAGX,WAGI,OADA/K,QAAQC,IAAIW,KAAKyH,sBACVzH,KAAKyH,uB,gCAGhB,WAGI,OADArI,QAAQC,IAAIW,KAAK2H,yBACV3H,KAAK2H,0B,4BAGhB,WAGI,OADAvI,QAAQC,IAAIW,KAAKkI,aACVlI,KAAKkI,c,gCAGhB,WAGI,OADA9I,QAAQC,IAAIW,KAAK6H,yBACV7H,KAAK6H,0B,gCAGhB,WAGI,OADAzI,QAAQC,IAAIW,KAAKiI,yBACVjI,KAAKiI,0B,+BAGhB,WAII,OAFA7I,QAAQC,IAAI,sCACZD,QAAQC,IAAIW,KAAKmI,+BACVnI,KAAKmI,gC,2BAGhB,SAAciC,EAAWC,EAAW5H,GAEhC,IAAI6H,EAAW7H,EAEf,GAAI4H,EACJ,CACI,IAAIE,EAAKvK,KAAKqC,MAAM+H,GAEpB,GAAmB,eAAdA,GAA4C,WAAdC,GAA0C,YAAdD,GAAyC,WAAdC,GAA0C,aAAdD,GAA0C,mBAAdC,GAAkD,aAAdD,GAA0C,cAAdC,GAE9M,GAAIG,MAAM/H,GACN,YAEH,GAAkB,YAAd2H,GAAyC,gBAAdC,EAEhCC,EAAWtK,KAAKwH,aAAa/E,QAE5B,GAAkB,eAAd2H,GAA4C,eAAdC,EACvC,CAGI,IAFA,IAAII,EAAO,GAEFrH,EAAQ,EAAGA,EAAQpD,KAAK+H,uBAAuBnI,OAAQwD,IAG5D,IADA,IAAIsH,EAAK1K,KAAK8H,eAAe1E,GACpBuH,EAAU,EAAGA,EAAUD,EAAGE,kBAAkBhL,OAAQ+K,IAEzD,GAAID,EAAGE,kBAAkBD,GAASE,aAAeP,EACjD,CACIG,EAAKvG,KAAKlE,KAAK+H,uBAAuB3E,IACtC,MAIZpD,KAAKmI,8BAAgCsC,EACrCrL,QAAQC,IAAIW,KAAKmI,+BACjBoC,EAAGO,QAAU,GAGjBP,EAAGF,GAAaC,EAChBtK,KAAK0C,SAAL,eAAgB0H,EAAYG,SAG5BvK,KAAK0C,SAAL,eAAgB0H,EAAYE,M,4DAGpC,oCAAAxH,EAAA,2DAEQ9C,KAAKqC,MAAM0I,QAAQC,OAAS,GAAqC,KAAhChL,KAAKqC,MAAM0I,QAAQE,eAA+D/K,IAA5CF,KAAKqC,MAAM0I,QAAQG,YAAYC,UAF9G,uBAIQ/L,QAAQC,IAAI,8BACZW,KAAK0C,SAAS,CAAC,sBAAwB,IAL/C,8BASQ1C,KAAKqC,MAAM+I,qBATnB,wDAcQC,EAAiBrL,KAAKqC,MAAM0I,SACjBO,YAAcrI,EAASuD,cAEtCpH,QAAQC,IAAI,0BACZD,QAAQC,IAAIgM,GAlBhB,UAmBoB9H,MAAMP,sEAA2E,CAC7FQ,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAUmM,KAzB7B,eAmBQzH,EAnBR,iBA4ByBA,EAAIC,OA5B7B,QA4BQG,EA5BR,OA6BI5E,QAAQC,IAAI2E,GACZhE,KAAK0C,SAAS,CAAC,sBAAwB,IAEnC6I,EAAc,UACdxG,EAAU,6BACW7E,IAApB8D,EAASF,aAAoD5D,IAA5B8D,EAASF,OAAOiB,SAAyBf,EAASF,OAAOiB,QAAQyG,cAAcC,SAAS,SAE1HF,EAAc,SACdxG,EAAUf,EAASF,OAAOiB,cAEA7E,IAApB8D,EAASF,aAAoD5D,IAA5B8D,EAASF,OAAOiB,SAAyBf,EAASF,OAAOiB,QAAQyG,cAAcC,SAAS,YAE/HF,EAAc,UACdxG,EAAUf,EAASF,OAAOiB,cAED7E,IAApB8D,EAASF,SAEdyH,EAAc,SACdxG,EAAUf,EAASe,SAEvB2G,YAAU,CAAC,QAAW3G,EAAS,KAAQwG,EAAa,SAAW,SAjDnE,iD,mHAoDA,oCAAAzI,EAAA,2DAEQ9C,KAAKqC,MAAMsJ,SAASC,eAAiB,GAAuC,KAAlC5L,KAAKqC,MAAMsJ,SAASE,WAA6D,KAAzC7L,KAAKqC,MAAMsJ,SAASG,kBAF9G,uBAIQ1M,QAAQC,IAAI,iCACZW,KAAK0C,SAAS,CAAC,uBAAyB,IALhD,8BASQ1C,KAAKqC,MAAM0J,sBATnB,wDAcQC,EAAkBhM,KAAKqC,MAAMsJ,UACjBhI,OAASV,EAASuD,cAElCpH,QAAQC,IAAI,6BACZD,QAAQC,IAAI2M,GAlBhB,UAmBoBzI,MAAMP,uFAA4F,CAC9GQ,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU8M,KAzB7B,eAmBQpI,EAnBR,iBA4ByBA,EAAIC,OA5B7B,QA4BQG,EA5BR,OA6BI5E,QAAQC,IAAI2E,GAEZhE,KAAK0C,SAAS,CAAC,uBAAyB,IACpC6I,EAAc,UACdxG,EAAU,6BACW7E,IAApB8D,EAASF,aAAoD5D,IAA5B8D,EAASF,OAAOiB,SAAyBf,EAASF,OAAOiB,QAAQyG,cAAcC,SAAS,SAE1HF,EAAc,SACdxG,EAAUf,EAASF,OAAOiB,cAEA7E,IAApB8D,EAASF,aAAoD5D,IAA5B8D,EAASF,OAAOiB,SAAyBf,EAASF,OAAOiB,QAAQyG,cAAcC,SAAS,YAE/HF,EAAc,UACdxG,EAAUf,EAASF,OAAOiB,cAED7E,IAApB8D,EAASF,SAEdyH,EAAc,SACdxG,EAAUf,EAASe,SAEvB2G,YAAU,CAAC,QAAW3G,EAAS,KAAQwG,EAAa,SAAW,SAjDnE,iD,kHAoDA,kCAAAzI,EAAA,yDAEI1D,QAAQC,IAAI,kBACZD,QAAQC,IAAIW,KAAKqC,MAAM4J,mBAGyB/L,IAAxCF,KAAKqC,MAAM4J,WAAWjB,QAA0E,KAA3ChL,KAAKqC,MAAM4J,WAAWjB,QAA2BhL,KAAKqC,MAAM4J,WAAWjB,OAAS,SAC7F9K,IAAxCF,KAAKqC,MAAM4J,WAAWhB,UAA0E,KAA3CjL,KAAKqC,MAAM4J,WAAWhB,eACnC/K,IAAxCF,KAAKqC,MAAM4J,WAAWxC,gBAA0E,KAA3CzJ,KAAKqC,MAAM4J,WAAWxC,qBACnCvJ,IAAxCF,KAAKqC,MAAM4J,WAAWnB,SAA0E,KAA3C9K,KAAKqC,MAAM4J,WAAWnB,cACnC5K,IAAxCF,KAAKqC,MAAM4J,WAAWC,aAA0E,KAA3ClM,KAAKqC,MAAM4J,WAAWC,kBACnChM,IAAxCF,KAAKqC,MAAM4J,WAAWpB,YAA0E,KAA3C7K,KAAKqC,MAAM4J,WAAWpB,YAXvF,uBAcQzL,QAAQC,IAAI,8BACZW,KAAK0C,SAAS,CAAC,sBAAwB,IAf/C,8BAmBQ1C,KAAKqC,MAAM8J,qBAnBnB,uDAuBkBnJ,mCAvBlB,UAwBkCO,MAAUR,yEACQ,CACI,OAAgB,OAChB,QAAgB,CACI,eAAgB,mBAChB,MAAS,UAAYE,EAAShD,cAElD,KAAgBhB,KAAKC,UAAUc,KAAKqC,MAAM4J,cA/BlG,eAwBQG,EAxBR,iBAmCyBA,EAAkBvI,OAnC3C,QAmCQG,EAnCR,OAoCI5E,QAAQC,IAAI,uBACZD,QAAQC,IAAI2E,GACZhE,KAAK0C,SAAS,CAAC,sBAAwB,IACnC6I,EAAc,UACdxG,EAAU,6BACW7E,IAApB8D,EAASF,aAAoD5D,IAA5B8D,EAASF,OAAOiB,SAAyBf,EAASF,OAAOiB,QAAQyG,cAAcC,SAAS,SAE1HF,EAAc,SACdxG,EAAUf,EAASF,OAAOiB,cAEA7E,IAApB8D,EAASF,aAAoD5D,IAA5B8D,EAASF,OAAOiB,SAAyBf,EAASF,OAAOiB,QAAQyG,cAAcC,SAAS,YAE/HF,EAAc,UACdxG,EAAUf,EAASF,OAAOiB,cAED7E,IAApB8D,EAASF,SAEdyH,EAAc,SACdxG,EAAUf,EAASe,SAEvB2G,YAAU,CAAC,QAAW3G,EAAS,KAAQwG,EAAa,SAAW,SAxDnE,iD,sFA4IA,WAAsB,IAAD,OA0VjB,OAzVsB,sBAAKlL,UAAU,OAAf,UACF,cAAC,IAAD,KAEyC,IAA5C4C,EAASoJ,gBAAgB,CAAC,cACvB,sBAAKhM,UAAU,iBAAf,UACI,qBAAKA,UAAU,MAAMiM,MAAO,CAAC,YAAe,QAAS,OAAU,OAA/D,SACI,qBAAKjM,UAAU,YAAf,SACI,eAAC,WAAD,CAAUkM,OAAO,UAAUC,YAAU,EAACC,WAAW,EAAMpM,UAAWL,KAAKsH,wBAAvE,UACI,sBAAKjH,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,2CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,iBACZC,MAAOlB,KAAKqC,MAAM0I,QAAQC,OAC1B7J,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,UAAW,SAAUzC,WAIvE,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,6CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CACIqM,QAAQ,kBACRvC,QAASnK,KAAK2M,gBACdC,YAAY,OACZC,YAAY,OACZ1L,SAAU,SAAC5B,GAAQ,EAAK2F,cAAc,UAAW,WAAY3F,EAAE2B,eAI3E,sBAAKb,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,kDAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,gBACZJ,UAAU,EACVK,MAAOlB,KAAKqC,MAAM0I,QAAQ+B,aAC1B3L,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,UAAW,eAAgBzC,WAI7E,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,yCAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CACIqM,QAAQ,OACRvC,QAASnK,KAAK+M,kBACdH,YAAY,QACZC,YAAY,QACZ1L,SAAU,SAAC5B,GAAQ,EAAK2F,cAAc,UAAW,cAAe3F,EAAE2B,eAI9E,sBAAKb,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,uDAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,aACZC,MAAOlB,KAAKqC,MAAM0I,QAAQiC,UAC1B7L,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,UAAW,YAAazC,WAI1E,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,6CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,aACZC,MAAOlB,KAAKqC,MAAM0I,QAAQkC,SAC1B9L,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,UAAW,WAAYzC,WAIzE,qBAAKpC,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CACII,KAAK,UACLD,QAAS,WAAO,EAAKkC,SAAS,CAAC,sBAAwB,IAAQ,EAAKqI,wBAQ5F,qBAAK1K,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,qBAIJ,qBAAKA,UAAU,MAAMiM,MAAO,CAAC,YAAe,QAAS,OAAU,OAA/D,SACI,qBAAKjM,UAAU,YAAf,SACI,eAAC,WAAD,CAAUkM,OAAO,WAAWC,YAAU,EAACC,WAAW,EAAMpM,UAAWL,KAAKsH,wBAAxE,UACI,sBAAKjH,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,2CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,kBACZC,MAAOlB,KAAKqC,MAAMsJ,SAASC,eAC3BzK,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,WAAY,iBAAkBzC,WAIhF,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,2CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CACIqM,QAAQ,mBACRvC,QAASnK,KAAKkN,qBACdN,YAAY,QACZC,YAAY,QACZ1L,SAAU,SAAC5B,GAAQ,EAAK2F,cAAc,WAAY,mBAAoB3F,EAAE2B,eAIpF,sBAAKb,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,wCAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,MACZC,MAAOlB,KAAKqC,MAAMsJ,SAASE,UAC3B1K,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,WAAY,YAAazC,WAI3E,qBAAKpC,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CACII,KAAK,WACLD,QAAS,WAAO,EAAKkC,SAAS,CAAC,uBAAyB,IAAQ,EAAKiJ,YACrErL,SAAUN,KAAKqC,MAAM0J,mCAQ7C,qBAAK1L,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,qBAIJ,qBAAKA,UAAU,MAAMiM,MAAO,CAAC,YAAe,QAAS,OAAU,OAA/D,SACI,qBAAKjM,UAAU,YAAf,SACI,eAAC,WAAD,CAAUkM,OAAO,aAAaC,YAAU,EAACC,WAAW,EAAMpM,UAAWL,KAAKsH,wBAA1E,UACI,sBAAKjH,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,2CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,oBACZC,MAAOlB,KAAKqC,MAAM4J,WAAWjB,OAC7B7J,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAc,SAAUzC,WAI1E,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,6CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CACIa,MAAM,GACND,YAAY,SACZkJ,QAASnK,KAAKmN,qBACdC,SAAU,SAAClM,GAAY,EAAKgE,cAAc,aAAc,aAAchE,WAIlF,sBAAKb,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,0CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CACIqM,QAAQ,SACRvC,QAASnK,KAAKqN,oBACdT,YAAY,QACZC,YAAY,QACZ1L,SAAU,SAAC5B,GAAQ,EAAK2F,cAAc,aAAc,UAAW3F,EAAE2B,eAI7E,sBAAKb,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,oDAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CACIqM,QAAQ,iBACRvC,QAASnK,KAAKsN,qBACdV,YAAY,QACZC,YAAY,QACZ1L,SAAU,SAAC5B,GAAQ,EAAK2F,cAAc,aAAc,iBAAkB3F,EAAE2B,eAIpF,sBAAKb,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,2CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,IAAD,CACIqM,QAAQ,WACRvC,QAASnK,KAAKuN,iBACdX,YAAY,QACZC,YAAY,QACZ1L,SAAU,SAAC5B,GAAQ,EAAK2F,cAAc,aAAc,WAAY3F,EAAE2B,eAI9E,sBAAKb,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,4CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,UACZC,MAAOlB,KAAKqC,MAAM4J,WAAWuB,UAC7BrM,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAc,YAAazC,WAI7E,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,gDAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,cACZC,MAAOlB,KAAKqC,MAAM4J,WAAWwB,WAC7BtM,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAc,aAAczC,WAI9E,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,gDAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,cACZC,MAAOlB,KAAKqC,MAAM4J,WAAWyB,WAC7BvM,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAc,aAAczC,WAI9E,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,gDAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,cACZC,MAAOlB,KAAKqC,MAAM4J,WAAW0B,WAC7BxM,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAc,aAAczC,WAI9E,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,mDAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,WACLG,YAAY,iBACZC,MAAOlB,KAAKqC,MAAM4J,WAAW2B,cAC7BzM,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAc,gBAAiBzC,WAIjF,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,mBAAf,SAAkC,8CAEtC,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,WACLG,YAAY,YACZC,MAAOlB,KAAKqC,MAAM4J,WAAW4B,SAC7B1M,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAc,WAAYzC,WAI5E,qBAAKpC,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,cAAC,EAAD,CACII,KAAK,UACLD,QAAS,WAAO,EAAKkC,SAAS,CAAC,sBAAwB,IAAQ,EAAKoL,2BAShG,+C,oBAMxB,WACI9N,KAAK+N,kBAGL,IAAInH,EAAkB5G,KAAK6G,qBAG3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GAz2BblG,IAAMC,WA82BnB2E,cAAW+B,G,iBC3uBX2G,G,wDA1IX,WAAYzN,GAAQ,IAAD,sBAEf,IAAIwG,GADJ,cAAMxG,IACUA,MAAM4F,SAAS9D,MAFhB,YAIFnC,IAAT6G,GACA,EAAKxG,MAAM0D,QAAQC,KAAK,SAI5B,EAAK7B,MAAQ,CACTiB,GAAIyD,EAAKkH,IAAIC,UAAU5K,GACvBvD,KAAMgH,EAAKkH,IAAIC,UAAUnO,KACzBoO,WAAYpH,EAAKkH,IAAIC,UAAUC,WAC/BjQ,KAAM,IAAID,KAAK,eAGnBmB,QAAQC,IAAI,aAAc0H,EAAKkH,IAAIC,WAhBpB,E,oDAkBnB,SAAiBhN,GACb9B,QAAQC,IAAI,oBAAqB6B,EAAMkN,YACvCpO,KAAK0C,SAAS,CACVxE,KAAMgD,M,8BAGd,SAAiBA,GAEb,IAIImN,EAJOnN,EAAM/C,UAIK,KAHV+C,EAAM7C,WAAa,GAGK,IAFzB6C,EAAM3C,cAIjBa,QAAQC,IAAIgP,GAEZrO,KAAK0C,SAAS,CACVxE,KAAMgD,M,gCAKd,WAAsB,IAAD,OA8EjB,OA5Ea,qBAAKb,UAAU,SAAf,SACT,qBAAKA,UAAU,OAAf,SACI,sBAAKA,UAAU,YAAf,UACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,gBAGA,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAMiB,GAAKtD,KAAKqC,MAAMiB,GAAK,GACvCnC,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,KAAMzC,WAKxD,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,kBAGA,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAMtC,KAAOC,KAAKqC,MAAMtC,KAAO,GAC3CoB,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,OAAQzC,WAK1D,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,wBAGA,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAM8L,WAAanO,KAAKqC,MAAM8L,WAAa,GACvDhN,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAczC,WAKhE,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,kBAGA,qBAAKA,UAAU,WAAf,SAEI,cAAC,IAAD,CACIiO,WAAW,aACXC,SAAUvO,KAAKqC,MAAMnE,KACrBiD,SAAU,SAAA5B,GAAC,OAAI,EAAKiP,iBAAiBjP,WAMjD,sBAAKc,UAAU,MAAf,UACI,qBAAKA,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACII,KAAK,OACLD,QAAS,kBAAM,EAAKiO,wB,2BAahD,SAAcjM,EAAUC,GACpBzC,KAAK0C,SAAL,eACKF,EAAWC,M,kBAIpB,WACIrD,QAAQC,IAAIW,KAAKqC,S,oBAGrB,WACI,IAAIuE,EAAkB5G,KAAK6G,qBAC3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GAvIPlG,IAAMC,Y,QCGlC+N,G,wDACF,WAAYnO,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACT0E,KAAM,GACN4H,YAAa,IAJF,E,+CAQnB,WA0BI,MAzBe,CAAC,CACZrL,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,OACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,Y,wBAMjB,WAAc,IAAD,OA0CT,MAzCc,CACV,CACIC,OAAQ,YACRC,SAAU,WACVC,MAAO,KACR,CACCF,OAAQ,cACRC,SAAU,aACVC,MAAO,KAEX,CACIF,OAAQ,oBACRC,SAAU,kBACVC,MAAO,KAEX,CACIF,OAAQ,cACRC,SAAU,aACVC,MAAO,KAEX,CACIC,MAAO,QACPC,QAAS,CAAC,CACNJ,OAAQ,SACRC,SAAU,OACVC,MAAO,IACPG,KAAM,YAAc,IAAXjB,EAAU,EAAVA,IACL,OACI,8BACI,cAAC,EAAD,CACIxN,KAAK,OACLD,QAAS,SAACjB,GAAQ,EAAK4P,YAAYlB,e,yBAanE,SAAYA,GACRjO,KAAKO,MAAM0D,QAAQC,KAAK,CACpBmB,SAAU,cACVhD,MAAO,CAAE4L,W,2BAIjB,SAAczL,EAAUC,GACpBzC,KAAK0C,SAAL,eACKF,EAAWC,M,+BAIpB,WAAqB,IAAD,OAGhB,IACIc,MAAMR,+EAAwD,CAC1DS,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBkQ,UAAWnM,EAASuD,kBAGvB6I,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAK,SAAAvL,GACF,IACI,EAAKpB,SAAS,CACV,KAAQoB,EAAOiD,OAErB,MAAOxC,GACLnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CACV,KAAQ,SAO5B,MAAOnD,GACHH,QAAQC,IAAIE,M,gCAKpB,WAAsB,IAAD,OACb0P,EAAUjP,KAAKsP,aACfvI,EAAO/G,KAAKqC,MAAM0E,KAClBwI,EAAUxI,EACVyI,EAAUxP,KA6Dd,YA3D+BE,IAA3BF,KAAKqC,MAAMsM,aAAwD,OAA3B3O,KAAKqC,MAAMsM,aAAmD,KAA3B3O,KAAKqC,MAAMsM,kBAIxEzO,IAAT6G,GAA+B,OAATA,GAAiC,IAAhBA,EAAKnH,SAKjD2P,EAAUxI,EAAK0I,QAAO,SAAUC,GAC5B,OAAOA,EAAM9G,gBAAgB6C,SAAS+D,EAAQnN,MAAMsM,iBAItC,sBAAKtO,UAAU,OAAf,UAClB,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,uDAIR,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,8BACI,cAAC,EAAD,CACII,KAAK,aACLD,QAAS,kBAAM,EAAKD,MAAM0D,QAAQC,KAAK,CACnCmB,SAAU,uBAK1B,qBAAKhF,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,cACZC,MAAOlB,KAAKqC,MAAMsM,YAAc3O,KAAKqC,MAAMsM,YAAc,GACzDxN,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,cAAezC,WAIjE,sBAAKpC,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CACI0G,KAAMwI,EACNN,QAASA,EACTU,gBAAiB,GACjBC,gBACI,CAAC,GAAI,GAAI,QAIrB,qBAAKvP,UAAU,qB,oBAQ3B,WAEI,IAAIuG,EAAkB5G,KAAK6G,qBAE3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GA7MLlG,IAAMC,YAiN3B2E,cAAWoJ,GCnNpBmB,E,kDACF,WAAYtP,GAAQ,IAAD,sBAEf,IAAIwG,GADJ,cAAMxG,IACUA,MAAM4F,SAAS9D,MAFhB,OAIX,EAAKA,WADInC,IAAT6G,EACa,CACT+I,QAAS,EACTC,QAAS,GACT5E,SAAU,KACVpH,OAAQ,GACRiM,qBAAsB,GACtBpH,gBAAiB,GACjBD,SAAU,GACVsH,WAAY,GACZpE,UAAW,GACXqE,UAAW,GACX9G,WAAY,GACZ+G,mBAAoB,GACpB5N,OAAQ,IAKC,CACTuN,QAAS/I,EAAKkH,IAAIC,UAAU4B,QAC5B3E,SAAUpE,EAAKkH,IAAIC,UAAU/C,SAC7B4E,QAAShJ,EAAKkH,IAAIC,UAAU6B,QAC5BhM,OAAQgD,EAAKkH,IAAIC,UAAUnK,OAC3BiM,qBAAsBjJ,EAAKkH,IAAIC,UAAU8B,qBACzCpH,gBAAiB7B,EAAKkH,IAAIC,UAAUtF,gBACpCD,SAAU5B,EAAKkH,IAAIC,UAAUvF,SAC7BsH,WAAYlJ,EAAKkH,IAAIC,UAAU+B,WAC/BpE,UAAW9E,EAAKkH,IAAIC,UAAUrC,UAC9BqE,UAAWnJ,EAAKkH,IAAIC,UAAUgC,UAC9B9G,WAAYrC,EAAKkH,IAAIC,UAAU9E,WAC/B7G,OAAQ,WAlCD,E,uFAuCnB,8BAAAO,EAAA,4DACkBE,mCADlB,kBAGwBO,MAAMR,6EAAsD,CACxES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjB8Q,qBAAsBhQ,KAAKqC,MAAM2N,qBACjCnE,UAAW7L,KAAKqC,MAAMwJ,cAXtC,cAGYjI,EAHZ,gBAe6BA,EAAIC,OAfjC,OAeYG,EAfZ,OAiBQhE,KAAKkF,cAAc,qBAAsBlB,EAASF,OAAOiB,SAGzD3F,QAAQC,IAAI2E,GApBpB,kDAuBQ5E,QAAQC,IAAR,MAvBR,0D,iHA2BA,0CAAAyD,EAAA,6DACUC,EAAQC,mCADlB,kBAGwBO,MAAMR,EAAQ,6CAA8C,CACxES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjB8Q,qBAAsBhQ,KAAKqC,MAAM2N,qBACjCnE,UAAW7L,KAAKqC,MAAMwJ,cAXtC,cAGYjI,EAHZ,gBAe6BA,EAAIC,OAfjC,UAeYG,EAfZ,OAiBQhE,KAAKkF,cAAc,qBAAsBlB,EAASF,OAAOiB,SAEzD3F,QAAQC,IAAI2E,GAERoM,EAA0B,EACzBpM,EAASF,OAAOiB,QAAQ0G,SAAS,mBAtB9C,sDA2BQ2E,EAA0BpM,EAASF,OAAOiB,QAAQ8D,QAAQ,kBAAmB,SAInD3I,KAFtBmQ,EAAoBC,SAASF,EAAyB,MAEG,OAAtBC,IAA8B7F,MAAM6F,GA/BnF,0DAoCYE,EAAoB,IACN3H,gBAAkB5I,KAAKqC,MAAMsG,SAC/C4H,EAAkB1F,WAAc7K,KAAKqC,MAAM0N,QAC3CQ,EAAkBC,aAAgBxQ,KAAKqC,MAAM4N,WAC7CM,EAAkBE,iBAAoBJ,EAEtCE,EAAkBG,6BAA+B,EACjDH,EAAkBI,aAAe,EACjCJ,EAAkBK,aAAe,EACjCL,EAAkBM,aAAe,EACjCN,EAAkBO,cAAgB,EAClCP,EAAkBQ,SAAY,UAC9BR,EAAkBS,aAAe,GACjCT,EAAkBU,UAAkB,EACpCV,EAAkBW,WAAkB,EACpCX,EAAkBY,YAAmB,EACrCZ,EAAkBa,eAAkB,EACpCb,EAAkBc,oBAAsB,EACxCd,EAAkBe,eAAkB,EACpCf,EAAkBgB,oBAAsB,EAvDhD,UAyD8BhO,MAAMR,EAAQ,yCAA0C,CAC1ES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAUqR,KA/DjC,eAyDYiB,EAzDZ,iBAkEmCA,EAAU3N,OAlE7C,QAkEY4N,EAlEZ,OAoEQzR,KAAKkF,cAAc,qBAAsBuM,EAAe3N,OAAOiB,SAE/D3F,QAAQC,IAAI2E,GAtEpB,kDAyEQ5E,QAAQC,IAAR,MAzER,0D,kHA6EA,0CAAAyD,EAAA,6DACUC,EAAQC,mCADlB,kBAGwBO,MAAMR,EAAQ,6CAA8C,CACxES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjB8Q,qBAAsBhQ,KAAKqC,MAAM2N,qBACjCnE,UAAW7L,KAAKqC,MAAMwJ,cAXtC,cAGYjI,EAHZ,gBAe6BA,EAAIC,OAfjC,UAeYG,EAfZ,OAiBQhE,KAAKkF,cAAc,qBAAsBlB,EAASF,OAAOiB,SAEzD3F,QAAQC,IAAI2E,GAERoM,EAA0B,EACzBpM,EAASF,OAAOiB,QAAQ0G,SAAS,mBAtB9C,sDA2BQ2E,EAA0BpM,EAASF,OAAOiB,QAAQ8D,QAAQ,kBAAmB,SAInD3I,KAFtBmQ,EAAoBC,SAASF,EAAyB,MAEG,OAAtBC,IAA8B7F,MAAM6F,GA/BnF,0DAoCYE,EAAoB,IACN3H,gBAAkB5I,KAAKqC,MAAMsG,SAC/C4H,EAAkB1F,WAAc7K,KAAKqC,MAAM0N,QAC3CQ,EAAkBC,aAAgBxQ,KAAKqC,MAAM4N,WAC7CM,EAAkBE,iBAAoBJ,EAEtCE,EAAkBG,6BAA+B,EACjDH,EAAkBI,aAAe,EACjCJ,EAAkBK,aAAe,EACjCL,EAAkBM,aAAe,EACjCN,EAAkBO,cAAgB,EAClCP,EAAkBQ,SAAY,UAC9BR,EAAkBS,aAAe,GACjCT,EAAkBU,UAAkB,EACpCV,EAAkBW,WAAkB,EACpCX,EAAkBY,YAAmB,EACrCZ,EAAkBa,eAAkB,EACpCb,EAAkBc,oBAAsB,EACxCd,EAAkBe,eAAkB,EACpCf,EAAkBgB,oBAAsB,EAvDhD,UAyD8BhO,MAAMR,EAAQ,yCAA0C,CAC1ES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAUqR,KA/DjC,eAyDYiB,EAzDZ,iBAkEmCA,EAAU3N,OAlE7C,QAkEY4N,EAlEZ,OAoEQzR,KAAKkF,cAAc,qBAAsBuM,EAAe3N,OAAOiB,SAE/D3F,QAAQC,IAAI2E,GAtEpB,kDAyEQ5E,QAAQC,IAAR,MAzER,0D,mHA6EA,8BAAAyD,EAAA,4DACkBE,mCADlB,kBAGwBO,MAAMR,+EAAwD,CAC1ES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjByJ,SAAU3I,KAAKqC,MAAMsG,SACrBC,gBAAiB5I,KAAKqC,MAAMuG,gBAC5BoH,qBAAsBhQ,KAAKqC,MAAM2N,qBACjCnE,UAAW7L,KAAKqC,MAAMwJ,cAbtC,cAGYjI,EAHZ,gBAiB6BA,EAAIC,OAjBjC,OAiBYG,EAjBZ,OAmBQhE,KAAKkF,cAAc,qBAAsBlB,EAASF,OAAOiD,MAnBjE,kDAsBQ3H,QAAQC,IAAR,MAtBR,0D,sFA0BA,WACC,IAAD,OAkNI,OAjNa,sBAAKgB,UAAU,iBAAf,UACT,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKqR,MAAM,SAAX,SAAoB,uDAI5B,sBAAKrR,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACQ,qBAAKA,UAAU,mBAAf,yBAER,qBAAKA,UAAU,WAAf,SACQ,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAMsG,SAAW3I,KAAKqC,MAAMsG,SAAW,GACnDxH,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,WAAYzC,IAClD5B,SAAUoC,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,iBAI7E,sBAAKhM,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACQ,qBAAKA,UAAU,mBAAf,2BAER,qBAAKA,UAAU,WAAf,SACQ,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAM4N,WAAajQ,KAAKqC,MAAM4N,WAAa,GACvD9O,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAczC,IACpD5B,SAAUoC,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,iBAI7E,sBAAKhM,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACQ,qBAAKA,UAAU,mBAAf,+BAER,qBAAKA,UAAU,WAAf,SACQ,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAM0N,QAAU/P,KAAKqC,MAAM0N,QAAU,GACjD5O,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,UAAWzC,IACjD5B,SAAUoC,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,kBAIP,IAAjEpJ,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,UAChD,wBAEA,sBAAKhM,UAAU,MAAf,UACI,qBAAKA,UAAU,2BAAf,SACI,qBAAKA,UAAU,IAAf,iCAEJ,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAMuG,gBAAkB5I,KAAKqC,MAAMuG,gBAAkB,GACjEzH,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,kBAAmBzC,YAKP,IAAjEQ,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,UAChD,wBAEA,sBAAKhM,UAAU,MAAf,UACA,qBAAKA,UAAU,4BAAf,SACQ,qBAAKA,UAAU,GAAf,sCAER,qBAAKA,UAAU,WAAf,SACQ,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAM2N,qBAAuBhQ,KAAKqC,MAAM2N,qBAAuB,GAC3E7O,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,uBAAwBzC,WAKlF,sBAAKpC,UAAU,MAAf,UACY,qBAAKA,UAAU,4BAAf,wBACA,qBAAKA,UAAU,WAAf,SACI,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAMwJ,UAAY7L,KAAKqC,MAAMwJ,UAAY,GACrD1K,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,YAAazC,IACnD5B,SAAUoC,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,iBAIjF,sBAAKhM,UAAU,MAAf,UACI,qBAAKA,UAAU,4BAAf,wBACA,qBAAKA,UAAU,WAAf,SACQ,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAM6N,UAAYlQ,KAAKqC,MAAM6N,UAAY,GACrD/O,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,YAAazC,IACnD5B,SAAUoC,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,kBAIP,IAAjEpJ,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,UAChD,wBAEA,sBAAKhM,UAAU,MAAf,UACI,qBAAKA,UAAU,4BAAf,yBACA,qBAAKA,UAAU,WAAf,SACQ,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAM+G,WAAapJ,KAAKqC,MAAM+G,WAAa,GACvDjI,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,aAAczC,WAK5E,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,4BAAf,2BACA,qBAAKA,UAAU,WAAf,SACQ,cAAC,EAAD,CACIA,UAAU,aACVQ,SAAUoC,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,UAC7DvL,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAM0B,OAAS/D,KAAKqC,MAAM0B,OAAS,GAC/C5C,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,SAAUzC,YAIM,IAAjEQ,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,UAChD,wBAEA,sBAAKhM,UAAU,MAAf,UACI,qBAAKA,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,6BAAf,SACI,cAAC,EAAD,CACII,KAAK,OACLD,QAAS,kBAAM,EAAKiO,iBAM5C,sBAAKpO,UAAU,MAAf,UACI,sBAAKA,UAAU,4BAAf,kBAAiD4C,EAAS0O,4BAC1D,qBAAKtR,UAAU,WAAf,SACQ,cAAC,EAAD,CACIA,UAAU,aACVQ,SAAS,WACTC,KAAK,OACLG,YAAY,GACZC,MAAOlB,KAAKqC,MAAM8N,mBAAqBnQ,KAAKqC,MAAM8N,mBAAqB,GACvEhP,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,qBAAsBzC,WAI5E,sBAAKpC,UAAU,MAAf,UACI,qBAAKA,UAAU,aAEf,qBAAKA,UAAU,WAAf,SACI,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,sBAAf,SACI,cAAC,EAAD,CACII,KAAK,gBACLD,QAAS,kBAAM,EAAKoR,qBAI0C,IAAjE3O,EAASoJ,gBAAgB,CAAC,WAAY,YAAa,UACpD,wBAEI,qBAAKhM,UAAU,wBAAwBiM,MAAO,CAAEuF,YAAa,QAA7D,SACI,cAAC,EAAD,CACIpR,KAAK,YACLD,QAAS,kBAAM,EAAKsR,iBAKiB,IAA/C7O,EAASoJ,gBAAgB,CAAC,kBAAuD,oBAA1BrM,KAAKqC,MAAM+G,aAAgF,IAA3CnG,EAASoJ,gBAAgB,CAAC,aAC/H,qBAAKhM,UAAU,wBAAwBiM,MAAO,CAAEuF,YAAa,QAA7D,SACI,cAAC,EAAD,CACIpR,KAAK,SACLD,QAAS,kBAAM,EAAKuR,cAIhC,qC,2BASxB,SAAcvP,EAAUC,GACpBzC,KAAK0C,SAAL,eACKF,EAAWC,M,yDAIpB,8BAAAK,EAAA,6DACI9C,KAAK0C,SAAS,CACVH,OAAQ,YAEES,mCAJlB,kBAMwBO,MAAMR,qEAA8C,CAChES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBoE,GAAItD,KAAKqC,MAAM8I,SACfxC,SAAU3I,KAAKqC,MAAMsG,SACrBsH,WAAYjQ,KAAKqC,MAAM4N,WACvBrH,gBAAiB5I,KAAKqC,MAAMuG,gBAC5BmH,QAAS/P,KAAKqC,MAAM0N,QACpBlE,UAAW7L,KAAKqC,MAAMwJ,UACtBqE,UAAWlQ,KAAKqC,MAAM6N,UACtBJ,QAAS9P,KAAKqC,MAAMyN,QACpBE,qBAAsBhQ,KAAKqC,MAAM2N,qBACjC5G,WAAYpJ,KAAKqC,MAAM+G,WACvBrF,OAAQ/D,KAAKqC,MAAM0B,WAvBnC,cAMYH,EANZ,gBA2B6BA,EAAIC,OA3BjC,OA2BYG,EA3BZ,OA4BQhE,KAAK0C,SAAS,CACVH,OAAQ,KAERyB,EAASF,OAAOkO,OAAS3O,EAASvB,0BAClC9B,KAAKO,MAAM0D,QAAQC,KAAK,CACpBmB,SAAU,mBAjC1B,kDAsCQrF,KAAK0C,SAAS,CACVH,OAAQ,KAEZnD,QAAQC,IAAR,MAzCR,0D,0EA6CA,WACI,IAAIuH,EAAkB5G,KAAK6G,qBAC3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GAlgBRlG,IAAMC,WAugBxB2E,cAAWuK,GCvgBpBoC,G,kDAEF,WAAY1R,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACT6P,aAAc,GACdnL,KAAM,IAJK,E,qDAUnB,WAAqB,IAAD,OAGhB,IACIxD,MAAMR,qEAA8C,CAChDS,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,gBAGjCoP,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAK,SAAAvL,GACF,IACI,EAAKpB,SAAS,CACV,KAAQ,KAEd,MAAO6B,GACLnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CACV,KAAQ,SAO5B,MAAOnD,GACHH,QAAQC,IAAIE,M,gCAIpB,WAAsB,IAAD,OAmCjB,OAjCa,sBAAKc,UAAU,iBAAf,UACT,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,6BAAf,SAA4C,wDAIpD,sBAAKA,UAAU,MAAf,UAEI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,mBAAf,2BACA,qBAAKA,UAAU,gBAAf,SACI,yBAAQA,UAAU,uBAAuBa,MAAOlB,KAAKkB,MAAOC,SAAU,SAAC5B,GAAQ,EAAK2F,cAAc,eAAgB3F,EAAE6B,OAAOF,QAA3H,UACI,wBAAkBA,MAAO,SAAzB,SAAoC,gCAAvB,KADjB,IAEKlB,KAAKqC,MAAM0E,KAAKpB,KAAI,SAACwM,GAAD,OAAU,wBAA4BjR,MAAOjC,KAAKC,UAAUiT,GAAlD,SAA0DA,EAAKvJ,iBAAlDuJ,EAAKhH,qBAK7D,qBAAK9K,UAAU,6BAAf,SACI,cAAC,EAAD,CACII,KAAK,QACLD,QAAS,kBAAM,EAAKiO,eAKhC,qBAAKpO,UAAU,qB,2BAQ3B,SAAcmC,EAAUC,GACpBzC,KAAK0C,SAAL,eACKF,EAAWC,M,yDAIpB,8BAAAK,EAAA,4DACkBE,mCACVoP,EAAanT,KAAKS,MAAMM,KAAKqC,MAAM6P,cAF3C,kBAIwB3O,MAAMR,+EAAwD,CAC1ES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjByJ,SAAUyJ,EAAWzJ,SACrBqH,qBAAsBoC,EAAWpC,qBACjCnE,UAAWuG,EAAWvG,cAbtC,cAIYjI,EAJZ,gBAiB6BA,EAAIC,OAjBjC,cAkBqBC,OAAOkO,OAAS3O,EAASvB,0BAClC9B,KAAKO,MAAM0D,QAAQC,KAAK,CACpBmB,SAAU,UApB1B,kDAyBQjG,QAAQC,IAAR,MAzBR,QA2BID,QAAQC,IAAIW,KAAKqC,OA3BrB,0D,0EA8BA,WACI,IAAIuE,EAAkB5G,KAAK6G,qBAC3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GAzHHlG,IAAMC,WA8H7B2E,eAAW2M,IC9HpBI,G,kDAEF,WAAY9R,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACT0E,KAAM,IAHK,E,+CAOnB,WA0BI,MAzBe,CAAC,CACZzD,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,OACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,Y,wBAMjB,WAwBI,MAvBc,CACV,CACIC,OAAQ,OACRvL,GAAI,gBACJyL,MAAM,IACND,SAAU,SAAA/H,GAAS,OAAOA,EAAKuL,cAAevL,EAAKuL,cAAczJ,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IAAK,KAEzG,CACI1D,OAAQ,SACRvL,GAAI,SACJwL,SAAU,SAAA/H,GAAS,MAAuB,yCAAhBA,EAAKoC,OAAmD,SAA2B,yCAAhBpC,EAAKoC,OAAmD,OAAyB,yCAAhBpC,EAAKoC,OAAmD,UAAW,SACjO4F,MAAO,KAEX,CACIF,OAAQ,SACRC,SAAU,UAEd,CACID,OAAQ,YACRC,SAAU,uB,yBAOtB,SAAYb,GACRjO,KAAKO,MAAM0D,QAAQC,KAAK,CACpBmB,SAAU,yCACVhD,MAAO,CAAE4L,W,+BAKjB,WAAqB,IAAD,OAGhB,IACI1K,MAAMR,wFAAiE,CACnES,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,gBAGjCoP,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAK,SAAAvL,GACF,IACI,EAAKpB,SAAS,CACV,KAAQoB,EAAOiD,OAErB,MAAOxC,GACLnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CACV,KAAQ,SAO5B,MAAOnD,GACHH,QAAQC,IAAIE,M,gCAKpB,WAAsB,IAAD,OACb0P,EAAUjP,KAAKsP,aAsCnB,OArCsB,sBAAKjP,UAAU,OAAf,UAClB,uBACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,0EAGR,uBACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,8BACI,cAAC,EAAD,CACII,KAAK,cACLD,QAAS,kBAAM,EAAKD,MAAM0D,QAAQC,KAAK,CACnCmB,SAAU,oDAM9B,sBAAKhF,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CACI0G,KAAM/G,KAAKqC,MAAM0E,KACjBkI,QAASA,EACTU,gBAAiB,GACjBC,gBACI,CAAC,GAAI,GAAI,QAIrB,qBAAKvP,UAAU,qB,oBAQ3B,WAEI,IAAIuG,EAAkB5G,KAAK6G,qBAE3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GAzJMlG,IAAMC,WA6JtC2E,eAAW+M,IC7JpBG,G,kDAEF,WAAYjS,GAAQ,IAAD,sBAGf,IAAIwG,GAFJ,cAAMxG,IAEUA,MAAM4F,SAAS9D,MAHhB,OAMX,EAAKA,WADInC,IAAT6G,EACa,CACToC,OAAQ,GACR6B,OAAQ,GACRyH,SAAU,GACVC,SAAU,GACVC,WAAY,GACZC,gBAAiB,GACjBC,gBAAiB,GACjBC,kBAAmB,GACnBC,eAAgB,GAChBtK,KAAM,GACNQ,WAAY,GACZ+J,SAAU,GACVzQ,OAAQ,GACR0Q,OAAQ,MAGC,CACT9J,OAAQpC,EAAKkH,IAAIC,UAAU/E,OAC3B6B,OAAQjE,EAAKkH,IAAIC,UAAUlD,OAC3ByH,SAAU1L,EAAKkH,IAAIC,UAAUuE,SAC7BC,SAAU3L,EAAKkH,IAAIC,UAAUlB,UAAU0F,SACvCC,WAAY5L,EAAKkH,IAAIC,UAAUlB,UAAU2F,WACzCC,gBAAiB7L,EAAKkH,IAAIC,UAAUlB,UAAU4F,gBAC9CC,gBAAiB9L,EAAKkH,IAAIC,UAAUlB,UAAU6F,gBAC9CC,kBAAmB/L,EAAKkH,IAAIC,UAAUlB,UAAU8F,kBAChDC,eAAgBhM,EAAKkH,IAAIC,UAAUgF,iBACnCzK,KAAM1B,EAAKkH,IAAIC,UAAUzF,KACzBQ,WAAY,GACZ+J,SAAU,GACVzQ,OAAQ,UACR0Q,OAAQ,OArCD,E,+CA2CnB,WAcI,MAbe,CACX,CACI3P,GAAI,EACJvD,KAAM,gBACNiG,KAAM,KAEV,CACI1C,GAAI,EACJvD,KAAM,UACNiG,KAAM,e,+BAMlB,WAAqB,IAAD,OAEZmN,EAAY,GAChB,IACI5P,MAAMR,qEAA8C,CAChDS,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,gBAGjCoP,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAK,SAAAvL,GACFqP,EAAYrP,EAAOiD,KAAK0I,QAAO,SAAU2D,GACrC,MAAwB,uBAAjBA,EAAEhK,cAEbhK,QAAQC,IAAI8T,GACZ,EAAKzQ,SAAS,CAAE,SAAYyQ,IAC5B,EAAKzQ,SAAS,CAAE,WAAcoB,EAAOiD,UAIjD,MAAOxH,GACHH,QAAQC,IAAIE,M,gCAKpB,WAAsB,IAAD,OAwEjB,OAvEAS,KAAKqC,MAAM4G,WAAWwG,QAAO,SAAU4D,GAEnC,MAAmB,uBAAfA,EAAE1K,UAAoD,kBAAf0K,EAAE1K,UAA+C,uBAAf0K,EAAE1K,UAAoD,iBAAf0K,EAAE1K,UAA8C,kBAAf0K,EAAE1K,UAA+C,eAAf0K,EAAE1K,UAA4C,oBAAf0K,EAAE1K,SAC7M0K,EAGJ,QAGE,sBAAKhT,UAAU,iBAAf,UAET,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,6BAAf,SAA4C,iEAKpD,sBAAKA,UAAU,MAAf,UACI,sBAAKA,UAAU,YAAf,UAEI,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,mBAAf,2BACA,qBAAKA,UAAU,gBAAf,SACI,yBAAQA,UAAU,uBAAuBa,MAAOlB,KAAKkB,MAAOC,SAAU,SAAC5B,GAAQ,EAAK2F,cAAc,SAAUjG,KAAKS,MAAMH,EAAE6B,OAAOF,OAAO8O,sBAAuB5Q,QAAQC,IAAIE,EAAE6B,OAAOF,QAAnL,UACI,wBAAQA,MAAM,IAAd,2BACClB,KAAKqC,MAAM2Q,SAASrN,KAAI,SAACwM,GAAD,OAAU,wBAA4BjR,MAAOjC,KAAKC,UAAUiT,GAAlD,SAA0DA,EAAKlC,YAAlDkC,EAAKhH,qBAKjE,sBAAK9K,UAAU,+BAAf,UACI,qBAAKA,UAAU,mBAAf,oBAEA,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,SACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAM2I,OAAShL,KAAKqC,MAAM2I,OAAS,GAC/C7J,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,SAAUzC,SAKxD,sBAAKpC,UAAU,+BAAf,UACI,qBAAKA,UAAU,mBAAf,+BAEA,cAAC,EAAD,CACIA,UAAU,aACVS,KAAK,OACLG,YAAY,mBACZC,MAAOlB,KAAKqC,MAAM0Q,eAAiB/S,KAAKqC,MAAM0Q,eAAiB,GAC/D5R,SAAU,SAACsB,GAAD,OAAS,EAAKyC,cAAc,iBAAkBzC,SAIhE,qBAAKpC,UAAU,6BAAf,SACI,cAAC,EAAD,CACII,KAAK,OACLH,SAAUN,KAAKqC,MAAME,OACrB/B,QAAS,kBAAM,EAAKiO,eAMhC,qBAAKpO,UAAU,sB,2BAQ3B,SAAcmC,EAAUC,GACpBzC,KAAK0C,SAAL,eACKF,EAAWC,M,yDAIpB,8BAAAK,EAAA,6DACI9C,KAAK0C,SAAS,CACVH,OAAQ,YAEES,mCAJlB,kBAMwBO,MAAMR,wFAAiE,CACnFS,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBiK,OAAQnJ,KAAKqC,MAAM8G,OACnB6B,OAAQhL,KAAKqC,MAAM2I,OACnByH,SAAUzS,KAAKqC,MAAMoQ,SACrBzF,UAAW,CACP0F,SAAU1S,KAAKqC,MAAMqQ,SACrBC,WAAY3S,KAAKqC,MAAMsQ,WACvBC,gBAAiB5S,KAAKqC,MAAMuQ,gBAC5BC,gBAAiB7S,KAAKqC,MAAMwQ,gBAC5BC,kBAAmB9S,KAAKqC,MAAMyQ,kBAC9BQ,eAAgBtT,KAAKqC,MAAM0Q,gBAE/BO,eAAgBtT,KAAKqC,MAAM0Q,eAC3BtK,KAAMzI,KAAKqC,MAAMoG,SAzBjC,cAMY7E,EANZ,gBA8B6BA,EAAIC,OA9BjC,OA8BYG,EA9BZ,OAgCQhE,KAAK0C,SAAS,CACVH,OAAQ,KAGRyB,EAASF,OAAOkO,OAAS3O,EAAS7B,2BAClCxB,KAAKO,MAAM0D,QAAQC,KAAK,CACpBmB,SAAU,2BAtC1B,kDA2CQrF,KAAK0C,SAAS,CACVH,OAAQ,KAEZnD,QAAQC,IAAR,MA9CR,0D,0EAkDA,WACI,IAAIuH,EAAkB5G,KAAK6G,qBAC3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GA/NalG,IAAMC,WAoO7C2E,eAAWkN,I,kBChOpBe,G,kDAEF,WAAYhT,GACX,IAAD,8BACI,cAAMA,IAED8B,MAAQ,CACT,KAAkB,GAClB,SAAkB,IAAIpE,KACtB,OAAkB,IAAIA,KACtB,eAAkB,IAGtB,EAAKuV,qBAAyB,EAAKA,qBAAqBC,KAA1B,iBAC9B,EAAKC,mBAAyB,EAAKA,mBAAmBD,KAAxB,iBAC9B,EAAKE,gBAAyB,EAAKA,gBAAgBF,KAArB,iBAC9B,EAAKG,aAAyB,EAAKA,aAAaH,KAAlB,iBAC9B,EAAKI,gBAAyB,EAAKA,gBAAgBJ,KAArB,iBAdlC,E,mDAiBA,SAAgBK,GAEZ1U,QAAQC,IAAI,mBACZD,QAAQC,IAAIyU,GAOZ,IANA,IAAM7E,EAAUjP,KAAKsP,aACfyE,EAAiB/T,KAAKqC,MAAM0E,KAE9BiN,EAAiB,GAEjBC,EAAc,GACTnU,EAAI,EAAGA,EAAImP,EAAQrP,OAAQE,IAEhCmU,EAAYnU,GAAKmP,EAAQnP,GAAG+O,OAEhCmF,EAAe,GAAKC,EAEpB7U,QAAQC,IAAI,0BACZD,QAAQC,IAAI0U,GACZ,IAAI,IAAIpU,EAAI,EAAGA,EAAIoU,EAAenU,OAAQD,IAC1C,CACIP,QAAQC,IAAI,qBACZD,QAAQC,IAAI0U,EAAepU,IAC3B,IAAIuU,EAAY,GAEhBA,EAAU,GAAKH,EAAepU,GAAGwU,aAAatL,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IAC7E2B,EAAU,GAAKH,EAAepU,GAAGkL,WACjCqJ,EAAU,GAAKH,EAAepU,GAAGqR,aACjCkD,EAAU,GAAKH,EAAepU,GAAGiJ,gBACjCsL,EAAU,GAAKH,EAAepU,GAAG8Q,iBACjCyD,EAAU,GAAKH,EAAepU,GAAGoR,SAEjCiD,EAAerU,EAAI,GAAKuU,EAG5BlU,KAAK0C,SAAS,CAAC,eAAkBsR,M,kCAGrC,SAAqB9V,GAEjB8B,KAAK0C,SAAS,CAAC0R,SAAUlW,M,gCAG7B,SAAmBA,GAEf8B,KAAK0C,SAAS,CAAC2R,OAAQnW,M,yBAG3B,WAGI,MADe,CAAC,CAACoF,GAAI,EAAGvD,KAAM,QAASoO,WAAY,KAAMS,QAAS,Y,wBAItE,WAsCI,MApCgB,CACI,CACI,OAAc,OACd,GAAc,eACd,MAAc,IACd,SAAc,SAAA7H,GAAS,OAAOA,EAAKoN,aAAcpN,EAAKoN,aAAatL,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IAAK,KAE3G,CACI,OAAc,cACd,MAAc,IACd,SAAc,cAElB,CACI,OAAc,gBACd,MAAc,IACd,SAAc,gBAElB,CACI,OAAc,kBACd,MAAc,IACd,SAAc,mBAElB,CACI,OAAc,SACd,MAAc,IACd,SAAc,mBACd,KAAc,YAAc,IAAXtE,EAAU,EAAVA,IAAW,OAAQ,qBAAKyD,MAAM,QAAX,SAAoBzD,EAAIwC,qBAEhE,CACI,OAAc,WACd,MAAc,IACd,SAAc,e,yBAQ1C,SAAYxC,EAAK8C,GAEb,IAAIhK,EAAQ,CACI,WAAkB9D,EAASuD,cAC3B,aAAkByH,EAAI9C,SACtB,QAAkB,KAClB,SAAkB4F,GAGlC/Q,KAAKsU,eAAevN,GACpB3H,QAAQC,IAAI,aAAc0R,EAAU,aAAc9C,EAAIC,a,mEAG1D,WAAqBnH,GAArB,iBAAAjE,EAAA,4DAEkBE,mCAFlB,kBAMwBO,MAAYR,yFACA,CAAI,OAAgB,OAChB,QAAgB,CACI,eAAkB,mBAClB,MAAkB,UAAYE,EAAShD,cAG3D,KAAgBhB,KAAKC,UAAe,CAAI,WAAkB6H,EAAKwN,WACvB,aAAkBxN,EAAKyN,aACvB,QAAkBzN,EAAK0N,QACvB,SAAkB1N,EAAKgK,aAhBvG,cAMYnN,EANZ,gBAuB2BA,EAAIC,OAvB/B,OAuBYC,EAvBZ,OAyBQ1E,QAAQC,IAAIyE,GAzBpB,kDA6BQ1E,QAAQC,IAAR,MA7BR,0D,sFAiCA,WACC,IAAD,OAGI,IAEIkE,MAAYR,mFACA,CAAI,OAAgB,OAChB,QAAgB,CAAI,eAAkB,mBAClB,MAAkB,UAAYE,EAAShD,cAG3D,KAAchB,KAAKC,UAAa,CAAI,UAAc+D,EAASuD,cACvB,SAAcxG,KAAKqC,MAAM+R,SACzB,OAAcpU,KAAKqC,MAAMgS,WAKpEhF,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAQ,SAAAvL,GACe,IAEI,EAAKpB,SAAS,CAAC,KAAQoB,EAAOiD,OAC9B,EAAK8M,gBAAgB,qBAEzB,MAAOtP,GAEHnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CAAC,KAAQ,SAM/D,MAAOnD,GAEHH,QAAQC,IAAIE,M,6BAIpB,WACC,IAAD,OAGI,IAEIgE,MAAYR,mFACA,CAAI,OAAgB,OAChB,QAAgB,CAAI,eAAkB,mBAClB,MAAkB,UAAYE,EAAShD,cAG3D,KAAchB,KAAKC,UAAa,CAAI,UAAc+D,EAASuD,cACvB,SAAcxG,KAAKqC,MAAM+R,SACzB,OAAcpU,KAAKqC,MAAMgS,WAKpEhF,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAQ,SAAAvL,GACe,IAEI,EAAKpB,SAAS,CAAC,KAAQoB,EAAOiD,OAC9B,EAAK8M,gBAAgB,mBAEzB,MAAOtP,GAEHnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CAAC,KAAQ,SAM/D,MAAOnD,GAEHH,QAAQC,IAAIE,M,0BAIpB,WAEI,IACIS,KAAK0U,QAAQC,KAAKC,QAEtB,MAAOrV,GAEHH,QAAQC,IAAIE,M,gCAIpB,WAAsB,IAAD,OACb0P,EAAUjP,KAAKsP,aACfvI,EAAO/G,KAAKqC,MAAM0E,KA4DtB,OAtDsB,sBAAK1G,UAAU,OAAf,UAClB,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,2DAIR,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SAA0B,6CAC1B,sBAAKA,UAAU,WAAf,uBACI,cAAC,IAAD,CAAYiO,WAAW,cAAcC,SAAUvO,KAAKqC,MAAM+R,SAAUjT,SAAUnB,KAAKwT,uBADvF,eAGA,cAAC,IAAD,CAAYlF,WAAW,cAAcC,SAAUvO,KAAKqC,MAAMgS,OAAQlT,SAAUnB,KAAK0T,wBAEjF,qBAAKrT,UAAU,WAAf,SACI,cAAC,EAAD,CACII,KAAK,SACLD,QAAS,kBAAM,EAAKmT,uBAG5B,sBAAKtT,UAAU,WAAf,UACI,cAAC,EAAD,CACII,KAAK,WACLD,QAAS,kBAAM,EAAKoT,kBAExB,8BACI,cAAC,WAAD,CACI7M,KAAM/G,KAAKqC,MAAM2R,eACjBa,SAAS,iBACTxU,UAAU,SACVyU,IAAK,SAACC,GAAD,OAAO,EAAKL,QAAUK,GAC3B3T,OAAO,mBAIvB,uBAEA,sBAAKf,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CACI0G,KAAMA,EACNkI,QAASA,EACTU,gBAAiB,GACjBC,gBAAiB,CAAC,GAAI,GAAI,IAC1BoF,YAAY,EACZC,oBAnDY,SAACxF,EAAQxB,EAAKiH,GACkB,IAAM5R,EAAKmM,EAAO0F,SAAW1F,EAAOnM,GACpC,YAAmBpD,IAAZ+N,EAAI3K,IAAoB8R,OAAOnH,EAAI3K,GAAIkI,eAAe6J,WAAW5F,EAAOvO,MAAMsK,oBAoDzI,qBAAKnL,UAAU,qB,oBAQ3B,WAEI,IAAIuG,EAAkB5G,KAAK6G,qBAE3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GApULlG,IAAMC,WAwU3B2E,eAAWiO,ICvUpB+B,G,kDAEF,WAAY/U,GACX,IAAD,8BACI,cAAMA,IAED8B,MAAW,CAAI,KAAoB,GACpB,SAAoB,IAAIpE,KACxB,OAAoB,IAAIA,KACxB,eAAoB,IAIxC,EAAKuV,qBAAyB,EAAKA,qBAAqBC,KAA1B,iBAC9B,EAAKC,mBAAyB,EAAKA,mBAAmBD,KAAxB,iBAC9B,EAAKE,gBAAyB,EAAKA,gBAAgBF,KAArB,iBAC9B,EAAKG,aAAyB,EAAKA,aAAaH,KAAlB,iBAC9B,EAAKI,gBAAyB,EAAKA,gBAAgBJ,KAArB,iBAdlC,E,mDAiBA,SAAgBK,GAEZ1U,QAAQC,IAAI,mBACZD,QAAQC,IAAIyU,GAOZ,IANA,IAAM7E,EAAUjP,KAAKsP,aACfyE,EAAiB/T,KAAKqC,MAAM0E,KAE9BiN,EAAiB,GAEjBC,EAAc,GACTnU,EAAI,EAAGA,EAAImP,EAAQrP,OAAQE,IAEhCmU,EAAYnU,GAAKmP,EAAQnP,GAAG+O,OAEhCmF,EAAe,GAAKC,EAEpB,IAAI,IAAItU,EAAI,EAAGA,EAAIoU,EAAenU,OAAQD,IAC1C,CACIP,QAAQC,IAAI,qBACZD,QAAQC,IAAI0U,EAAepU,IAC3B,IAAIuU,EAAY,GAEhBA,EAAU,GAAKH,EAAepU,GAAG4V,SAAS1M,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IACzE2B,EAAU,GAAKH,EAAepU,GAAGqL,OACjCkJ,EAAU,GAAKH,EAAepU,GAAGoR,SAEjCmD,EAAU,GAAKH,EAAepU,GAAGkL,WACjCqJ,EAAU,GAAKH,EAAepU,GAAGqR,aACjCkD,EAAU,GAAKH,EAAepU,GAAG6V,eAAezB,EAAepU,GAAG6V,eAAe7M,SAAS,GAE1FuL,EAAU,GAAKH,EAAepU,GAAGmL,QACjCoJ,EAAU,GAAKH,EAAepU,GAAG8V,UACjCvB,EAAU,GAAKH,EAAepU,GAAG+V,YAAY3B,EAAepU,GAAG+V,YAAY/M,SAAS,GAEpFuL,EAAU,GAAKH,EAAepU,GAAGuM,YACjCgI,EAAU,IAAMH,EAAepU,GAAGgW,OAClCzB,EAAU,IAAMH,EAAepU,GAAGiW,gBAAgB7B,EAAepU,GAAGiW,gBAAgBjN,SAAS,GAE7FuL,EAAU,IAAMH,EAAepU,GAAGkW,mBAClC3B,EAAU,IAAMH,EAAepU,GAAG6N,UAClC0G,EAAU,IAAMH,EAAepU,GAAG8N,WAClCyG,EAAU,IAAMH,EAAepU,GAAG+N,WAClCwG,EAAU,IAAMH,EAAepU,GAAGgO,WAElCqG,EAAerU,EAAI,GAAKuU,EAG5BlU,KAAK0C,SAAS,CAACsR,eAAgBA,M,kCAGnC,SAAqB9V,GAEjB8B,KAAK0C,SAAS,CAAC0R,SAAUlW,M,gCAG7B,SAAmBA,GAEf8B,KAAK0C,SAAS,CAAC2R,OAAQnW,M,yBAG3B,WASI,MAPe,CAAC,CACZoF,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,Y,wBAMjB,WAEI,IAGIK,EAAU,CACV,CACI3L,GAAI,WACJuL,OAAQ,OACRE,MAAM,IACND,SAAU,SAAA/H,GAAS,OAAOA,EAAKwO,SAAUxO,EAAKwO,SAAS1M,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IAAK,KAE/F,CACIjP,GAAI,SACJuL,OAAQ,SACRC,SAAU,SACVI,KAAM,YAAc,IAAXjB,EAAU,EAAVA,IAAW,OAAQ,qBAAKyD,MAAM,QAAX,SAAoBzD,EAAIjD,WAExD,CACI6D,OAAQ,SACRC,SAAU,YAEd,CACID,OAAQ,cACRE,MAAO,IACPD,SAAU,cAEd,CACID,OAAQ,gBACRE,MAAO,IACPD,SAAU,gBAEd,CACID,OAAQ,kBACRE,MAAO,IACPD,SAAU,2BAEd,CACID,OAAQ,aACRE,MAAO,IACPD,SAAU,aAEd,CACID,OAAQ,eACRE,MAAO,IACPD,SAAU,wBAEd,CACID,OAAQ,eACRE,MAAO,IACPD,SAAU,eAEd,CACID,OAAQ,iBACRE,MAAO,IACPD,SAAU,UAEd,CACID,OAAQ,mBACRE,MAAO,IACPD,SAAU,4BAEd,CACID,OAAQ,kBACRE,MAAO,IACPD,SAAU,sBAEd,CACID,OAAQ,UACRE,MAAO,IACPD,SAAU,aAEd,CACID,OAAQ,OACRE,MAAO,IACPD,SAAU,cAEd,CACID,OAAQ,OACRE,MAAO,IACPD,SAAU,cAEd,CACID,OAAQ,OACRE,MAAO,IACPD,SAAU,eAIdgH,EAAkB,CAClB,CACIxS,GAAI,WACJuL,OAAQ,OACRE,MAAM,IACND,SAAU,SAAA/H,GAAS,OAAOA,EAAKwO,SAAUxO,EAAKwO,SAAS1M,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IAAK,KAE/F,CACIjP,GAAI,SACJuL,OAAQ,SACRC,SAAU,SACVI,KAAM,YAAc,IAAXjB,EAAU,EAAVA,IAAW,OAAQ,qBAAKyD,MAAM,QAAX,SAAoBzD,EAAIjD,WAExD,CACI6D,OAAQ,SACRC,SAAU,YAEd,CACID,OAAQ,aACRE,MAAO,IACPD,SAAU,aAEd,CACID,OAAQ,eACRE,MAAO,IACPD,SAAU,wBAEd,CACID,OAAQ,YACRE,MAAO,IACPD,SAAU,4BAEd,CACID,OAAQ,kBACRE,MAAO,IACPD,SAAU,sBAEd,CACID,OAAQ,UACRE,MAAO,IACPD,SAAU,cAIlB,OAnIe7L,EAASC,cACF,GAAGnD,OAkIVsD,EAAS9B,mBACbuU,EAEA7G,I,yBAGf,SAAYhB,GACR7O,QAAQC,IAAI,WAAY4O,EAAIC,a,+BAGhC,WAAqB,IAAD,OAGhB,IACI3K,MAAMR,mFAA4D,CAC9DS,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBkQ,UAAWnM,EAASuD,cACpB4N,SAAU,IAAInW,KACdoW,OAAQ,IAAIpW,SAGfoR,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAK,SAAAvL,GACF,IAEI,EAAKpB,SAAS,CAAC,KAAQoB,EAAOiD,OAC9B,EAAK8M,gBAAgB,qBACvB,MAAOtP,GACLnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CACV,KAAQ,SAK5B,MAAOnD,GACHH,QAAQC,IAAIE,M,6BAIpB,WAAmB,IAAD,OAEd,IACIgE,MAAMR,mFAA4D,CAC9DS,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBkQ,UAAWnM,EAASuD,cACpB4N,SAAUpU,KAAKqC,MAAM+R,SACrBC,OAAQrU,KAAKqC,MAAMgS,WAGtBhF,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAK,SAAAvL,GACF,IAEI,EAAKpB,SAAS,CAAC,KAAQoB,EAAOiD,OAC9B,EAAK8M,gBAAgB,mBACvB,MAAOtP,GACLnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CACV,KAAQ,SAK5B,MAAOnD,GACHH,QAAQC,IAAIE,M,0BAIpB,WAEI,IACIS,KAAK0U,QAAQC,KAAKC,QAEtB,MAAOrV,GAEHH,QAAQC,IAAIE,M,gCAIpB,WAAsB,IAAD,OACb0P,EAAUjP,KAAKsP,aACfvI,EAAO/G,KAAKqC,MAAM0E,KA4DtB,OAtDsB,sBAAK1G,UAAU,OAAf,UAClB,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,2DAGR,uBAEA,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SAA0B,6CAC1B,sBAAKA,UAAU,WAAf,uBACI,cAAC,IAAD,CAAYiO,WAAW,cAAcC,SAAUvO,KAAKqC,MAAM+R,SAAUjT,SAAUnB,KAAKwT,uBADvF,eAGA,cAAC,IAAD,CAAYlF,WAAW,cAAcC,SAAUvO,KAAKqC,MAAMgS,OAAQlT,SAAUnB,KAAK0T,wBAEjF,qBAAKrT,UAAU,WAAf,SACI,cAAC,EAAD,CACII,KAAK,SACLD,QAAS,kBAAM,EAAKmT,uBAG5B,sBAAKtT,UAAU,WAAf,UACI,cAAC,EAAD,CACII,KAAK,WACLD,QAAS,kBAAM,EAAKoT,kBAExB,8BACI,cAAC,WAAD,CACI7M,KAAM/G,KAAKqC,MAAM2R,eACjBa,SAAS,iBACTxU,UAAU,SACVyU,IAAK,SAACC,GAAD,OAAO,EAAKL,QAAUK,GAC3B3T,OAAO,mBAIvB,uBAEA,sBAAKf,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CACI0G,KAAMA,EACNkI,QAASA,EACTU,gBAAiB,GACjBC,gBAAiB,CAAC,GAAI,GAAI,IAC1BoF,YAAY,EACZC,oBApDY,SAACxF,EAAQxB,EAAKiH,GACtC,IAAM5R,EAAKmM,EAAO0F,SAAW1F,EAAOnM,GACpC,YAAmBpD,IAAZ+N,EAAI3K,IAAoB8R,OAAOnH,EAAI3K,GAAIkI,eAAe6J,WAAW5F,EAAOvO,MAAMsK,oBAqDjF,qBAAKnL,UAAU,qB,oBAO3B,WACI,IAAIuG,EAAkB5G,KAAK6G,qBAC3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GAhYDlG,IAAMC,WAoY/B2E,eAAWgQ,ICrYpBS,G,kDACF,WAAYxV,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACT,KAAkB,GAClB,SAAkB,IAAIpE,KACtB,OAAkB,IAAIA,KACtB,eAAkB,IAGtB,EAAKuV,qBAAyB,EAAKA,qBAAqBC,KAA1B,iBAC9B,EAAKC,mBAAyB,EAAKA,mBAAmBD,KAAxB,iBAC9B,EAAKE,gBAAyB,EAAKA,gBAAgBF,KAArB,iBAC9B,EAAKG,aAAyB,EAAKA,aAAaH,KAAlB,iBAC9B,EAAKI,gBAAyB,EAAKA,gBAAgBJ,KAArB,iBAbf,E,mDAgBnB,SAAgBK,GAEZ1U,QAAQC,IAAI,mBACZD,QAAQC,IAAIyU,GAOZ,IANA,IAAM7E,EAAUjP,KAAKsP,aACfyE,EAAiB/T,KAAKqC,MAAM0E,KAE9BiN,EAAiB,GAEjBC,EAAc,GACTnU,EAAI,EAAGA,EAAImP,EAAQrP,OAAS,EAAGE,IAEpCmU,EAAYnU,GAAKmP,EAAQnP,GAAG+O,OAEhCmF,EAAe,GAAKC,EAEpB7U,QAAQC,IAAI,0BACZD,QAAQC,IAAI0U,GACZ,IAAI,IAAIpU,EAAI,EAAGA,EAAIoU,EAAenU,OAAQD,IAC1C,CACIP,QAAQC,IAAI,qBACZD,QAAQC,IAAI0U,EAAepU,IAC3B,IAAIuU,EAAY,GAEhBA,EAAU,GAAKH,EAAepU,GAAGqW,eAAenN,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IAC/E2B,EAAU,GAAKH,EAAepU,GAAG2L,YACjC4I,EAAU,GAAKH,EAAepU,GAAGsW,UAAUlC,EAAepU,GAAGsW,UAAUlW,KAAM,GAC7EmU,EAAU,GAAKH,EAAepU,GAAGwJ,OAAO4K,EAAepU,GAAGwJ,OAAOR,SAAU,GAC3EuL,EAAU,GAAoC,MAA/BH,EAAepU,GAAGsW,UAAmB,GAAMlC,EAAepU,GAAGsW,UAAUC,SAAUnC,EAAepU,GAAGsW,UAAUC,SAASrN,QAAQ,YAAa,IAAK,GAC/JqL,EAAU,GAAKH,EAAepU,GAAGsL,SACjCiJ,EAAU,GAAKH,EAAepU,GAAGqL,OACjCkJ,EAAU,GAAKH,EAAepU,GAAGwW,gBAAgBpC,EAAepU,GAAGwW,gBAAgBC,iBAAkB,GAErGpC,EAAerU,EAAI,GAAKuU,EAG5BlU,KAAK0C,SAAS,CAAC,eAAkBsR,M,kCAGrC,SAAqB9V,GAEjB8B,KAAK0C,SAAS,CAAC,SAAYxE,M,gCAG/B,SAAmBA,GAEf8B,KAAK0C,SAAS,CAAC,OAAUxE,M,yBAG7B,WAQI,MAPe,CAAC,CACZoF,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,Y,wBAMjB,WAAc,IAAD,OAqET,MApEc,CAAC,CACXC,OAAQ,OACRvL,GAAI,iBACJyL,MAAM,IACND,SAAU,SAAA/H,GAAS,OAAOA,EAAKiP,eAAgBjP,EAAKiP,eAAenN,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IAAK,KAE3G,CACI1D,OAAQ,eACRE,MAAM,IACND,SAAU,eAEd,CACID,OAAQ,OACRE,MAAM,IACND,SAAU,kBAEd,CACID,OAAQ,SACRE,MAAM,IACND,SAAU,mBAEd,CACID,OAAQ,WACRvL,GAAI,YACJyL,MAAM,IACND,SAAU,SAAA/H,GAAS,OAAwB,MAAjBA,EAAKkP,UAAkB,GAAMlP,EAAKkP,UAAUC,SAAUnP,EAAKkP,UAAUC,SAASrN,QAAQ,YAAa,IAAK,KAEtI,CACIgG,OAAQ,WACRE,MAAM,IACND,SAAU,YAEd,CACID,OAAQ,SACRE,MAAM,IACND,SAAU,SACVI,KAAM,YAAc,IAAXjB,EAAU,EAAVA,IAAW,OAAQ,qBAAKyD,MAAM,QAAX,SAAoBzD,EAAIjD,WAExD,CACI6D,OAAQ,SACRE,MAAM,IACND,SAAU,oCAEd,CACID,OAAQ,SACRC,SAAU,OACVC,MAAO,IACPG,KAAM,YAAc,IAAXjB,EAAU,EAAVA,IAEL,GAAuD,KAAnDA,EAAIC,UAAUiI,gBAAgBC,kBAA8E,YAAnDnI,EAAIC,UAAUiI,gBAAgBC,kBAAqF,YAAnDnI,EAAIC,UAAUiI,gBAAgBC,kBAAqF,YAAnDnI,EAAIC,UAAUiI,gBAAgBC,iBACvN,OACI,uBAAO1E,MAAM,SAAb,SAAsB,gCAAO,+BAAI,6BAC7B,cAAC,EAAD,CACIjR,KAAK,WACLD,QAAS,SAACjB,GAAQ,EAAK4P,YAAYlB,EAAK,eACrC,6BACP,cAAC,EAAD,CACIxN,KAAK,UACLD,QAAS,SAACjB,GAAQ,EAAK4P,YAAYlB,EAAK,4B,yBAapE,SAAYA,EAAK8C,GACb,IAAIhK,EAAO,CACPsP,cAAepT,EAASuD,cACxB8P,UAAWrI,EAAIC,UAAU/C,SACzB4F,SAAUA,EACVwF,WAAY,IACZC,WAAY,KAEhBxW,KAAKsU,eAAevN,GACpB3H,QAAQC,IAAI,aAAc0R,EAAU,aAAc9C,EAAIC,a,mEAG1D,WAAqBnH,GAArB,iBAAAjE,EAAA,4DACkBE,mCADlB,kBAIwBO,MAAMR,sFAA+D,CACjFS,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBmX,cAAetP,EAAKsP,cACpBC,UAAWvP,EAAKuP,UAChBvF,SAAUhK,EAAKgK,SACfwF,WAAYxP,EAAKwP,WACjBC,WAAYzP,EAAKyP,eAfjC,cAIY5S,EAJZ,gBAmB2BA,EAAIC,OAnB/B,OAqBqC,aAFzBC,EAnBZ,QAqBmBA,OAAOA,QACd9D,KAAKyW,oBAGTrX,QAAQC,IAAIyE,GAzBpB,kDA4BQ1E,QAAQC,IAAR,MA5BR,0D,sFAgCA,WACC,IAAD,OAGI,IAEIkE,MAAYR,gFACA,CAAI,OAAgB,OAChB,QAAgB,CAAI,eAAkB,mBAClB,MAAkB,UAAYE,EAAShD,cAG3D,KAAchB,KAAKC,UAAa,CAAI,UAAc+D,EAASuD,cACvB,SAAcxG,KAAKqC,MAAM+R,SACzB,OAAcpU,KAAKqC,MAAMgS,WAKpEhF,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAQ,SAAAvL,GACe,IAEI,EAAKpB,SAAS,CAAC,KAAQoB,EAAOiD,OAC9B,EAAK8M,gBAAgB,qBAEzB,MAAOtP,GAEHnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CAAC,KAAQ,SAM/D,MAAOnD,GAEHH,QAAQC,IAAIE,M,0BAIpB,WAEI,IACIS,KAAK0U,QAAQC,KAAKC,QAEtB,MAAOrV,GAEHH,QAAQC,IAAIE,M,6BAIpB,WACC,IAAD,OAGI,IAEIgE,MAAYR,gFACA,CAAI,OAAgB,OAChB,QAAgB,CAAI,eAAkB,mBAClB,MAAkB,UAAYE,EAAShD,cAG3D,KAAchB,KAAKC,UAAa,CAAI,UAAc+D,EAASuD,cACvB,SAAcxG,KAAKqC,MAAM+R,SACzB,OAAcpU,KAAKqC,MAAMgS,WAKpEhF,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAQ,SAAAvL,GACe,IAEI,EAAKpB,SAAS,CAAC,KAAQoB,EAAOiD,OAC9B,EAAK8M,gBAAgB,qBAEzB,MAAOtP,GAEHnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CAAC,KAAQ,SAM/D,MAAOnD,GAEHH,QAAQC,IAAIE,M,gCAIpB,WAAsB,IAAD,OACb0P,EAAUjP,KAAKsP,aACfvI,EAAO/G,KAAKqC,MAAM0E,KA2DtB,OArDsB,sBAAK1G,UAAU,OAAf,UAClB,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,wDAIR,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SAA0B,6CAC1B,sBAAKA,UAAU,WAAf,uBACI,cAAC,IAAD,CAAYiO,WAAW,cAAcC,SAAUvO,KAAKqC,MAAM+R,SAAUjT,SAAUnB,KAAKwT,uBADvF,eAGA,cAAC,IAAD,CAAYlF,WAAW,cAAcC,SAAUvO,KAAKqC,MAAMgS,OAAQlT,SAAUnB,KAAK0T,wBAEjF,qBAAKrT,UAAU,WAAf,SACI,cAAC,EAAD,CACII,KAAK,SACLD,QAAS,kBAAM,EAAKmT,uBAG5B,sBAAKtT,UAAU,WAAf,UACI,cAAC,EAAD,CACII,KAAK,WACLD,QAAS,kBAAM,EAAKoT,kBAExB,8BACI,cAAC,WAAD,CACI7M,KAAM/G,KAAKqC,MAAM2R,eACjBa,SAAS,cACTxU,UAAU,SACVyU,IAAK,SAACC,GAAD,OAAO,EAAKL,QAAUK,GAC3B3T,OAAO,mBAIvB,uBACA,sBAAKf,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CACI0G,KAAMA,EACNkI,QAASA,EACTU,gBAAiB,GACjBC,gBAAiB,CAAC,GAAI,GAAI,IAC1BoF,YAAY,EACZC,oBAlDY,SAACxF,EAAQxB,EAAKiH,GACkB,IAAM5R,EAAKmM,EAAO0F,SAAW1F,EAAOnM,GACpC,YAAmBpD,IAAZ+N,EAAI3K,IAAoB8R,OAAOnH,EAAI3K,GAAIkI,eAAe6J,WAAW5F,EAAOvO,MAAMsK,oBAmDzI,qBAAKnL,UAAU,qB,oBAQ3B,WAEI,IAAIuG,EAAkB5G,KAAK6G,qBAE3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GApWJlG,IAAMC,WAwW5B2E,eAAWyQ,IC3WpBW,G,kDACF,WAAYnW,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACT0E,KAAM,IAHK,E,+CAOnB,WA0BI,MAzBe,CAAC,CACZzD,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,OACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,Y,wBAMjB,WACC,IAAD,OAsDI,MArDgB,CACI,CACI,OAAc,OACd,GAAc,eACd,MAAc,IACd,SAAc,SAAA7H,GAAS,OAAOA,EAAKoN,aAAcpN,EAAKoN,aAAatL,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IAAK,KAE3G,CACI,OAAc,cACd,MAAc,IACd,SAAc,cAElB,CACI,OAAc,gBACd,MAAc,IACd,SAAc,gBAElB,CACI,OAAc,kBACd,MAAc,IACd,SAAc,mBAElB,CACI,OAAc,SACd,MAAc,IACd,SAAc,mBACd,KAAc,YAAc,IAAXtE,EAAU,EAAVA,IAAW,OAAQ,qBAAKyD,MAAM,QAAX,SAAoBzD,EAAIwC,qBAEhE,CACI,OAAc,WACd,MAAc,IACd,SAAc,YAElB,CACI,OAAc,SACd,SAAc,OACd,MAAc,IACd,KAAc,YAAe,IAAZxC,EAAW,EAAXA,IACe,OAAY,uBAAOyD,MAAM,SAAb,SAAsB,gCAAO,+BAAI,6BAC7B,cAAC,EAAD,CACIjR,KAAK,SACLD,QAAS,SAACjB,GAAQ,EAAK4P,YAAYlB,EAAK,eACrC,6BACP,cAAC,EAAD,CACIxN,KAAK,UACLD,QAAS,SAACjB,GAAQ,EAAK4P,YAAYlB,EAAK,4B,yBAWxH,SAAYA,EAAK8C,GACb3R,QAAQC,IAAI,OAAQ4O,GACpB,IAAIlH,EAAO,CACPwN,WAAYtR,EAASuD,cACrBgO,aAAcvG,EAAIC,UAAU/C,SAC5BsJ,QAAS,KACT1D,SAAUA,GAEd3R,QAAQC,IAAI,QAAS0H,GACrB/G,KAAKsU,eAAevN,GACpB3H,QAAQC,IAAI,aAAc0R,EAAU,aAAc9C,EAAIC,a,mEAG1D,WAAqBnH,GAArB,iBAAAjE,EAAA,4DACkBE,mCADlB,kBAIwBO,MAAMR,yFAAkE,CACpFS,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBqV,WAAYxN,EAAKwN,WACjBC,aAAczN,EAAKyN,aACnBC,QAAS1N,EAAK0N,QACd1D,SAAUhK,EAAKgK,aAd/B,cAIYnN,EAJZ,gBAkB2BA,EAAIC,OAlB/B,OAkBYC,EAlBZ,OAwBQ9D,KAAKyW,oBAELrX,QAAQC,IAAIyE,GA1BpB,kDA6BQ1E,QAAQC,IAAR,MA7BR,0D,sFAiCA,WAAqB,IAAD,OAGhB,IACIkE,MAAMR,iFAA0D,CAC5DS,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBkQ,UAAWnM,EAASuD,kBAGvB6I,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAK,SAAAvL,GACF,IACI,EAAKpB,SAAS,CACV,KAAQoB,EAAOiD,OAErB,MAAOxC,GACLnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CACV,KAAQ,SAO5B,MAAOnD,GACHH,QAAQC,IAAIE,M,gCAKpB,WACI,IAAI0P,EAAUjP,KAAKsP,aACfvI,EAAO/G,KAAKqC,MAAM0E,KAiCtB,OA3BsB,sBAAK1G,UAAU,OAAf,UAClB,uBACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,4DAGR,uBACA,qBAAKA,UAAU,QAEf,sBAAKA,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CACI0G,KAAMA,EACNkI,QAASA,EACTU,gBAAiB,GACjBC,gBAAiB,CAAC,GAAI,GAAI,IAC1BoF,YAAY,EACZC,oBAxBY,SAACxF,EAAQxB,EAAKiH,GACkB,IAAM5R,EAAKmM,EAAO0F,SAAW1F,EAAOnM,GACpC,YAAmBpD,IAAZ+N,EAAI3K,IAAoB8R,OAAOnH,EAAI3K,GAAIkI,eAAe6J,WAAW5F,EAAOvO,MAAMsK,oBAyBzI,qBAAKnL,UAAU,qB,oBAQ3B,WAEI,IAAIuG,EAAkB5G,KAAK6G,qBAE3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GA5NZlG,IAAMC,WAgOpB2E,eAAWoR,ICjOpBC,G,kDACF,WAAYpW,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACT0E,KAAM,IAHK,E,+CAOnB,WA0BI,MAzBe,CAAC,CACZzD,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,OACNoO,WAAY,KACZS,QAAS,SAEb,CACItL,GAAI,EACJvD,KAAM,QACNoO,WAAY,KACZS,QAAS,Y,wBAMjB,WAsCI,MApCgB,CACI,CACI,OAAc,OACd,GAAc,eACd,MAAc,IACd,SAAc,SAAA7H,GAAS,OAAOA,EAAKoN,aAAcpN,EAAKoN,aAAatL,QAAQ,IAAK,KAAK0J,UAAU,EAAG,IAAK,KAE3G,CACI,OAAc,cACd,MAAc,IACd,SAAc,cAElB,CACI,OAAc,gBACd,MAAc,IACd,SAAc,gBAElB,CACI,OAAc,kBACd,MAAc,IACd,SAAc,mBAElB,CACI,OAAc,SACd,MAAc,IACd,SAAc,mBACd,KAAc,YAAc,IAAXtE,EAAU,EAAVA,IAAW,OAAQ,qBAAKyD,MAAM,QAAX,SAAoBzD,EAAIwC,qBAEhE,CACI,OAAc,WACd,MAAc,IACd,SAAc,e,yBAQ1C,SAAYxC,EAAK8C,GACb,IAAIhK,EAAO,CACPwN,WAAYtR,EAASuD,cACrBgO,aAAcvG,EAAI9C,SAClBsJ,QAAS,KACT1D,SAAUA,GAEd/Q,KAAKsU,eAAevN,GACpB3H,QAAQC,IAAI,aAAc0R,EAAU,aAAc9C,EAAIC,a,mEAG1D,WAAqBnH,GAArB,iBAAAjE,EAAA,4DACkBE,mCADlB,kBAIwBO,MAAMR,yFAAkE,CACpFS,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBqV,WAAYxN,EAAKwN,WACjBC,aAAczN,EAAKyN,aACnBC,QAAS1N,EAAK0N,QACd1D,SAAUhK,EAAKgK,aAd/B,cAIYnN,EAJZ,gBAkB2BA,EAAIC,OAlB/B,OAkBYC,EAlBZ,OAyBQ1E,QAAQC,IAAIyE,GAzBpB,kDA4BQ1E,QAAQC,IAAR,MA5BR,0D,sFAgCA,WAAqB,IAAD,OAGhB,IACIkE,MAAMR,mFAA4D,CAC9DS,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjBkQ,UAAWnM,EAASuD,kBAGvB6I,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAK,SAAAvL,GACF,IACI,EAAKpB,SAAS,CACV,KAAQoB,EAAOiD,OAErB,MAAOxC,GACLnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CACV,KAAQ,SAO5B,MAAOnD,GACHH,QAAQC,IAAIE,M,gCAKpB,WACI,IAAI0P,EAAUjP,KAAKsP,aACfvI,EAAO/G,KAAKqC,MAAM0E,KAiCtB,OA3BsB,sBAAK1G,UAAU,OAAf,UAClB,uBACA,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,oEAGR,uBACA,qBAAKA,UAAU,QAEf,sBAAKA,UAAU,MAAf,UACI,uBACA,qBAAKA,UAAU,YAAf,SACI,cAAC,IAAD,CACI0G,KAAMA,EACNkI,QAASA,EACTU,gBAAiB,GACjBC,gBAAiB,CAAC,GAAI,GAAI,IAC1BoF,YAAY,EACZC,oBAxBY,SAACxF,EAAQxB,EAAKiH,GACkB,IAAM5R,EAAKmM,EAAO0F,SAAW1F,EAAOnM,GACpC,YAAmBpD,IAAZ+N,EAAI3K,IAAoB8R,OAAOnH,EAAI3K,GAAIkI,eAAe6J,WAAW5F,EAAOvO,MAAMsK,oBAyBzI,qBAAKnL,UAAU,qB,oBAQ3B,WAEI,IAAIuG,EAAkB5G,KAAK6G,qBAE3B,OAAO,cAAC,EAAD,CAAed,UAAWa,Q,GAxMLlG,IAAMC,WA4M3B2E,eAAWqR,ICjFXC,G,kDA7HX,WAAYrW,GAAQ,IAAD,8BACf,cAAMA,IACD8B,MAAQ,CACT6P,aAAc,GACdnL,KAAM,IAJK,E,qDAUnB,WAAqB,IAAD,OAGhB,IACIxD,MAAMR,qEAA8C,CAChDS,OAAQ,MACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,gBAGjCoP,MAAK,SAAAzL,GAAG,OAAIA,EAAIC,UAChBwL,MAAK,SAAAxL,GAAI,OAAIA,EAAKC,UAClBuL,MAAK,SAAAvL,GACF,IACI,EAAKpB,SAAS,CACV,KAAQ,KAEd,MAAO6B,GACLnF,QAAQC,IAAIkF,GACZ,EAAK7B,SAAS,CACV,KAAQ,SAO5B,MAAOnD,GACHH,QAAQC,IAAIE,M,gCAIpB,WAAsB,IAAD,OAmCjB,OAjCa,sBAAKc,UAAU,iBAAf,UACT,qBAAKA,UAAU,MAAf,SACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,6BAAf,SAA4C,uDAIpD,sBAAKA,UAAU,MAAf,UAEI,sBAAKA,UAAU,WAAf,UACI,sBAAKA,UAAU,+BAAf,UACI,qBAAKA,UAAU,mBAAf,2BACA,qBAAKA,UAAU,gBAAf,SACI,yBAAQA,UAAU,uBAAuBa,MAAOlB,KAAKkB,MAAOC,SAAU,SAAC5B,GAAQ,EAAK2F,cAAc,eAAgB3F,EAAE6B,OAAOF,QAA3H,UACI,wBAAkBA,MAAO,SAAzB,SAAoC,gCAAvB,KADjB,IAEKlB,KAAKqC,MAAM0E,KAAKpB,KAAI,SAACwM,GAAD,OAAU,wBAA4BjR,MAAOjC,KAAKC,UAAUiT,GAAlD,SAA0DA,EAAKvJ,iBAAlDuJ,EAAKhH,qBAK7D,qBAAK9K,UAAU,6BAAf,SACI,cAAC,EAAD,CACII,KAAK,QACLD,QAAS,kBAAM,EAAKiO,eAKhC,qBAAKpO,UAAU,qB,2BAQ3B,SAAcmC,EAAUC,GACpBzC,KAAK0C,SAAL,eACKF,EAAWC,M,yDAIpB,8BAAAK,EAAA,4DACkBE,mCACVoP,EAAanT,KAAKS,MAAMM,KAAKqC,MAAM6P,cAF3C,kBAIwB3O,MAAMR,+EAAwD,CAC1ES,OAAQ,OACRC,QAAS,CACL,eAAgB,mBAChB,MAAS,UAAYR,EAAShD,cAElCyD,KAAMzE,KAAKC,UAAU,CACjByJ,SAAUyJ,EAAWzJ,SACrBqH,qBAAsBoC,EAAWpC,qBACjCnE,UAAWuG,EAAWvG,cAbtC,cAIYjI,EAJZ,gBAiB6BA,EAAIC,OAjBjC,cAkBqBC,OAAOkO,OAAS3O,EAASvB,0BAClC9B,KAAKO,MAAM0D,QAAQC,KAAK,CACpBmB,SAAU,UApB1B,kDAyBQjG,QAAQC,IAAR,MAzBR,QA2BID,QAAQC,IAAIW,KAAKqC,OA3BrB,0D,0EA8BA,WAGI,OAFsBrC,KAAK6G,yB,GAxHRnG,IAAMC,WCuB3BkW,I,OACJ,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAC9Q,KAAK,IAAID,UAAWR,IACjC,cAAC,IAAD,CAAOuR,OAAK,EAAC9Q,KAAK,QAAQD,UAAWsB,IACrC,cAAC,IAAD,CAAOyP,OAAK,EAAC9Q,KAAK,eAAeD,UAAWgR,IAC5C,cAAC,IAAD,CAAOD,OAAK,EAAC9Q,KAAK,iBAAiBD,UAAWiR,IAC9C,cAAC,IAAD,CAAOF,OAAK,EAAC9Q,KAAK,cAAcD,UAAWkR,IAC3C,cAAC,IAAD,CAAOH,OAAK,EAAC9Q,KAAK,oBAAoBD,UAAWkM,KACjD,cAAC,IAAD,CAAO6E,OAAK,EAAC9Q,KAAK,yBAAyBD,UAAWmR,KACtD,cAAC,IAAD,CAAOJ,OAAK,EAAC9Q,KAAK,yCAAyCD,UAAWoR,KAEtE,cAAC,IAAD,CAAOL,OAAK,EAAC9Q,KAAK,qBAAqBD,UAAWwN,KAClD,cAAC,IAAD,CAAOuD,OAAK,EAAC9Q,KAAK,4BAA4BD,UAAW2Q,KACzD,cAAC,IAAD,CAAOI,OAAK,EAAC9Q,KAAK,oCAAoCD,UAAW4Q,KAGjE,cAAC,IAAD,CAAOG,OAAK,EAAC9Q,KAAK,qBAAqBD,UAAWuP,KAClD,cAAC,IAAD,CAAOwB,OAAK,EAAC9Q,KAAK,kBAAkBD,UAAWgQ,KAE/C,cAAC,IAAD,CAAOe,OAAK,EAAC9Q,KAAK,mBAAmBD,UAAWqR,IAChD,cAAC,IAAD,CAAON,OAAK,EAAC9Q,KAAK,cAAcD,UAAWsR,IAC3C,cAAC,IAAD,CAAOP,OAAK,EAAC9Q,KAAK,gBAAgBD,UAAWuR,IAC7C,cAAC,IAAD,CAAOR,OAAK,EAAC9Q,KAAK,OAAOD,UAAWwR,WAI1CC,IAASC,OAAOZ,GAASa,SAASC,eAAe,W","file":"static/js/main.31c6c7ce.chunk.js","sourcesContent":["class AuthUtil {\r\n    setUsername(username) {\r\n        localStorage.setItem(\"username\", username);\r\n    }\r\n\r\n    getAuthCurrentDateTime(separatorDate='-', separatorDateTime=' ', separatorTime=':') \r\n    {\r\n        let currentDateTime = new Date();\r\n        let date = currentDateTime.getDate();\r\n        let month = currentDateTime.getMonth() + 1;\r\n        let year = currentDateTime.getFullYear();\r\n        let hour = currentDateTime.getHours();\r\n        let minute = currentDateTime.getMinutes() + 1;\r\n    //    let second = currentDateTime.getSeconds();\r\n        //return `${year}``${separatorDate}``${month<10?`0${month}`:`${month}`}``${separatorDate}``${date}``${separatorDateTime}``${hour}``${separatorTime}``${minute}``${separatorTime}``${second}`;\r\n        return year + '-' + (month < 10? '0' : '') + month + '-' + date + ' ' + ((hour < 10 || (hour > 12 && hour < 22))? '0' : '') + ((hour > 12) ? (hour - 12): hour) + ':' + ((minute < 10)? '0':'') + minute + ' ' + ((hour > 11) ? 'PM': 'AM');\r\n    }\r\n    getUsername() {\r\n        let username = localStorage.getItem(\"username\");\r\n        return username;\r\n    }\r\n\r\n    setTokenDetail(tokenDetail) {\r\n        localStorage.setItem(\"id_token\", tokenDetail.id_token);\r\n        localStorage.setItem(\"refresh_token\", tokenDetail.refresh_token);\r\n        localStorage.setItem(\"expires_in\", tokenDetail.expires_in);\r\n        localStorage.setItem(\"role_list\", JSON.stringify(tokenDetail.roleList));\r\n    }\r\n    setRole(roleList){\r\n        console.log('====roleList====');\r\n        console.log(roleList);\r\n        localStorage.setItem(\"role_list\", JSON.stringify(roleList));\r\n    }\r\n    setMenu(menu) {\r\n        localStorage.setItem(\"menu\", JSON.stringify(menu));\r\n    }\r\n\r\n    getIdToken() {\r\n        let id_token = \"\";\r\n        try {\r\n            id_token = localStorage.getItem(\"id_token\");\r\n            return id_token;\r\n\r\n        } catch (e) {\r\n            localStorage.setItem(\"id_token\", \"\");\r\n            return id_token;\r\n        }\r\n    }\r\n\r\n    getRolePresence(roleNames)\r\n    {\r\n        console.log('====getRolePresence(start)====');\r\n        let roleList = \"[]\";\r\n        let result = \"{}\";\r\n        try \r\n        {\r\n            roleList = localStorage.getItem(\"role_list\");\r\n            let roleArray = JSON.parse(roleList);\r\n            for (var j = 0; j < roleNames.length; j++)\r\n            {\r\n                let roleName = roleNames[j];\r\n                console.log('====getRolePresence(role)====');\r\n                console.log(roleName);\r\n                for (var i = 0; i < roleArray.length; i++)\r\n                {\r\n                    let currentRole = roleArray[i];\r\n                    if (currentRole.name === roleName)\r\n                    {\r\n                        console.log('====getRolePresence(true)====');\r\n                        console.log('true');\r\n                        return true;\r\n                    }\r\n                }\r\n            }\r\n\r\n            console.log('====getRolePresence(false)====');\r\n            console.log('false');\r\n            return result;\r\n        } \r\n        catch (e) \r\n        {\r\n            return result;\r\n        }\r\n    }\r\n\r\n    getRoleList() {\r\n        let roleList = \"[]\";\r\n        try {\r\n            roleList = localStorage.getItem(\"role_list\");\r\n            console.log('====roleList====');\r\n            console.log(roleList);\r\n            return JSON.parse(roleList);\r\n\r\n        } catch (e) {\r\n            localStorage.setItem(\"role_list\", \"\");\r\n            return roleList;\r\n        }\r\n    }\r\n\r\n    getRefreshToken() {\r\n        let refresh_token = localStorage.getItem(\"refresh_token\");\r\n        return refresh_token;\r\n    }\r\n\r\n    getExpireTime() {\r\n        let expires_in = localStorage.getItem(\"expires_in\");\r\n        return expires_in;\r\n    }\r\n\r\n    getMenu() {\r\n        let menu = \"\";\r\n        try {\r\n            menu = localStorage.getItem(\"menu\");\r\n            return JSON.parse(menu);\r\n\r\n        } catch (e) {\r\n            localStorage.setItem(\"menu\", \"\");\r\n            return menu;\r\n        }\r\n    }\r\n    isTokenValid() {\r\n        let id_token = this.getIdToken();\r\n\r\n        if (id_token === null || id_token === undefined) {\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    resetTokenDetail() {\r\n        localStorage.clear();\r\n    }\r\n}\r\n\r\nexport default new AuthUtil();","import React from 'react'\r\nimport '../../App.css'\r\nclass ButtonComponent extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"buttonComponent\">\r\n\r\n        <button\r\n          className=\"btn\"\r\n          disabled={this.props.disabled}\r\n          onClick={this.props.onClick}\r\n        >\r\n          {this.props.text}\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default ButtonComponent;","import React from 'react'\r\nimport '../../App.css'\r\nclass InputFieldComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"inputField\">\r\n                {   this.props.readOnly === true?\r\n                        <input\r\n                        className={this.props.className}\r\n                        readOnly\r\n                        type={this.props.type}\r\n                        pattern={this.props.format}\r\n                        placeholder={this.props.placeholder}\r\n                        value={this.props.value}\r\n                        onChange={(e) => this.props.onChange(e.target.value)}\r\n                    >\r\n                    </input>\r\n                :\r\n                    <input\r\n                        className={this.props.className}\r\n                        type={this.props.type}\r\n                        pattern={this.props.format}\r\n                        placeholder={this.props.placeholder}\r\n                        value={this.props.value}\r\n                        onChange={(e) => this.props.onChange? this.props.onChange(e.target.value) : {}}\r\n                        onKeyDown={(e) => this.props.onKeyDown? this.props.onKeyDown(e): {} }\r\n                    >\r\n                    </input>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default InputFieldComponent;","class GeneralConstants {\r\n\r\n    ROLE_NAME_ADMIN = \"admin\";\r\n    ROLE_NAME_MERCHANT = \"Merchant\";\r\n    \r\n    DMA_RESPONSE_SUCCESS_CODE = \"201\";\r\n    DMA_RESPONSE_SUCCESS_RESULT = \"Success\";\r\n    DMA_RESPONSE_SUCCESS_MESSAGE = \"The lifting limit is adjusted\";\r\n\r\n    DMA_RESPONSE_FAILURE_CODE = \"\";\r\n    DMA_RESPONSE_FAILURE_RESULT = \"Failure\";\r\n    DMA_RESPONSE_FAILURE_MESSAGE = \"Failed to adjust lifting limit\";\r\n\r\n    MW_RESPONSE_SUCCESS_CODE = \"201\";\r\n    MW_RESPONSE_SUCCESS_RESULT = \"Success\";\r\n    MW_RESPONSE_SUCCESS_MESSAGE = \"The wallet is added\";\r\n\r\n    MW_RESPONSE_FAILURE_CODE = \"\";\r\n    MW_RESPONSE_FAILURE_RESULT = \"Failure\";\r\n    MW_RESPONSE_FAILURE_MESSAGE = \"Failed to add wallet\";\r\n}\r\n\r\nexport default new GeneralConstants();","import React from \"react\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport \"react-notifications/lib/notifications.css\";\r\nimport \"../../App.css\";\r\nimport AuthUtil from \"../../auth/AuthUtil.js\";\r\nimport ButtonComponent from \"../widgets/ButtonComponent\";\r\nimport InputFieldComponent from \"../widgets/InputFieldComponent\";\r\nimport Constant from \"../../constants/GeneralConstants\";\r\n\r\nclass LoginForm extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            enable:\"\"\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    checkEnter(thisEvent) {\r\n        if (thisEvent.keyCode === 13)\r\n        {\r\n            this.doLogin();\r\n        }\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            username: \"\",\r\n            password: \"\"\r\n        })\r\n    }\r\n    async getMenu() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        let roleList = AuthUtil.getRoleList();\r\n        let roleId = \"\";\r\n\r\n        for (let index = 0; index < roleList.length; index++) {\r\n\r\n            if (roleList[index].name === Constant.ROLE_NAME_ADMIN) {\r\n                roleId = roleList[index].id;\r\n                break;\r\n            } else {\r\n                roleId = roleList[index].id;\r\n                break;\r\n            }\r\n        }\r\n\r\n        try {\r\n            let res = await fetch(gwUrl + \"authorization-service/endpoint/rolemenu/roleId\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: \"\",\r\n                    roleId: roleId\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            if (result.result.status === \"SUCCESS\") {\r\n                if (result.result.response[0] === null) {\r\n                    this.props.history.push(\"/home\");\r\n                    NotificationManager.info(\"No menu items served from backend for \" + this.state.username);\r\n                } else {\r\n                    AuthUtil.setMenu(result.result.response[0].menuId);\r\n                    this.props.history.push(\"/home\");\r\n                }\r\n\r\n            }\r\n\r\n            console.log(result);\r\n\r\n        } catch (e) {\r\n            NotificationManager.error(\"Error message\", \"Internal Server Error\");\r\n            this.resetForm();\r\n        }\r\n    }\r\n    async doLogin() {\r\n        this.setState({\r\n            enable:\"disable\"\r\n        });\r\n        if (!this.state.username) {\r\n            this.setState({\r\n                enable: \"\"\r\n            });\r\n            NotificationManager.warning(\"FAILURE\", \"Username field is empty\");\r\n            return\r\n        }\r\n\r\n        if (!this.state.password) {\r\n            this.setState({\r\n                enable:\"\"\r\n            });\r\n            NotificationManager.warning(\"FAILURE\", \"Password field is empty\");\r\n            return\r\n        }\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            let res = await fetch(gwUrl + \"authentication-service/endpoint/oauth/login\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\"\r\n                },\r\n                body: JSON.stringify({\r\n                    username: this.state.username,\r\n                    password: this.state.password\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            this.setState({\r\n                enable:\"\"\r\n            });\r\n            if (result.result.authResponse.id_token) {\r\n\r\n                AuthUtil.setUsername(this.state.username);\r\n                AuthUtil.setTokenDetail(result.result.authResponse);\r\n                AuthUtil.setRole(result.result.roleList);\r\n\r\n                this.getMenu();\r\n\r\n            } else {\r\n                NotificationManager.warning(result.result.message, result.result.result);\r\n            }\r\n\r\n        } catch (e) {\r\n            this.setState({\r\n                enable:\"\"\r\n            });\r\n            NotificationManager.error(\"Error message\", \"Internal Server Error\");\r\n            this.resetForm();\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"card-login\">\r\n                <div className=\"d-flex justify-content-center\">\r\n                    <img alt=\"\" src=\"/65332127.png\" />\r\n                </div>\r\n                <h3 className=\"d-flex justify-content-center\">COLLECTION PORTAL</h3>\r\n                    <div className=\"card-body\">\r\n                        <label>Username</label>\r\n                        <InputFieldComponent\r\n                            className=\"input\"\r\n                            type=\"text\"\r\n                            placeholder=\"Username\"\r\n                            value={this.state.username ? this.state.username : \"\"}\r\n                            onChange={(val) => this.setInputValue(\"username\", val)}\r\n                            onKeyDown={(e) => this.checkEnter(e) }\r\n                        />\r\n\r\n                        <label>Password</label>\r\n                        <InputFieldComponent\r\n                            className=\"input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={this.state.password ? this.state.password : \"\"}\r\n                            onChange={(val) => this.setInputValue(\"password\", val)}\r\n                            onKeyDown={(e) => this.checkEnter(e) }\r\n                        />\r\n                        <div className=\"d-flex justify-content-center\"><Link\r\n                            to={{\r\n                                pathname: \"/generate-otp\",\r\n                            }}\r\n                        >\r\n                            Forget Password? </Link>\r\n                        </div>\r\n\r\n                        <ButtonComponent\r\n                            text=\"LOGIN\"\r\n                            disabled={this.state.enable}\r\n                            onClick={() => this.doLogin()}\r\n                        />\r\n                    </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(LoginForm);","import React from 'react'\r\nimport {NotificationContainer} from 'react-notifications';\r\nimport LoginForm from './components/login/LoginForm'\r\nimport './App.css'\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <LoginForm/>\r\n        <NotificationContainer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport '../App.css';\r\nclass FooterComponent extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <span>Maxis Collection Portal</span>\r\n                </div>\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <span>&#169;</span>2021\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FooterComponent;","import React from 'react'\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport AuthUtil from '../auth/AuthUtil'\r\nimport '../App.css';\r\nclass HeaderComponent extends React.Component {\r\n\r\n    // getMockMenu() {\r\n    //     console.log(AuthUtil.getMenu());\r\n    //     let menu = [\r\n    //         {\r\n    //             \"id\": 1,\r\n    //             \"menuName\": \"home\",\r\n    //             \"displayName\": \"Home\",\r\n    //             \"route\": \"/home\",\r\n    //             \"subMenu\": []\r\n    //         },\r\n    //         {\r\n    //             \"id\": 2,\r\n    //             \"menuName\": \"other\",\r\n    //             \"displayName\": \"Other\",\r\n    //             \"subMenu\": [\r\n    //                 {\r\n    //                     \"id\": 1,\r\n    //                     \"menuName\": \"HOME-1\",\r\n    //                     \"displayName\": \"HOME-1\",\r\n    //                     \"route\": \"/home\",\r\n    //                     \"subMenu\": []\r\n    //                 },\r\n    //                 {\r\n    //                     \"id\": 2,\r\n    //                     \"menuName\": \"HOME-2\",\r\n    //                     \"displayName\": \"HOME-2\",\r\n    //                     \"route\": \"/home\",\r\n    //                     \"subMenu\": []\r\n    //                 },\r\n    //                 {\r\n    //                     \"id\": 3,\r\n    //                     \"menuName\": \"HOME-3\",\r\n    //                     \"displayName\": \"HOME-3\",\r\n    //                     \"route\": \"/home\",\r\n    //                     \"subMenu\": []\r\n    //                 }\r\n    //             ]\r\n    //         },\r\n    //         {\r\n    //             \"id\": 3,\r\n    //             \"menuName\": \"Merchant\",\r\n    //             \"displayName\": \"Merchant\",\r\n    //             \"subMenu\": [\r\n    //                 {\r\n    //                     \"id\": 1,\r\n    //                     \"menuName\": \"Merchant\",\r\n    //                     \"displayName\": \"Merchant\",\r\n    //                     \"route\": \"/merchant\",\r\n    //                     \"subMenu\": []\r\n    //                 },\r\n    //                 {\r\n    //                     \"id\": 2,\r\n    //                     \"menuName\": \"Merchant's User\",\r\n    //                     \"displayName\": \"Merchant's User\",\r\n    //                     \"route\": \"/merchant/user\",\r\n    //                     \"subMenu\": []\r\n    //                 },\r\n    //                 {\r\n    //                     \"id\": 3,\r\n    //                     \"menuName\": \"Merchant's Agent\",\r\n    //                     \"displayName\": \"Merchant's Agent\",\r\n    //                     \"route\": \"/merchant/agent\",\r\n    //                     \"subMenu\": []\r\n    //                 },\r\n    //                 {\r\n    //                     \"id\": 4,\r\n    //                     \"menuName\": \"Merchant's Customer\",\r\n    //                     \"displayName\": \"Merchant's Customer\",\r\n    //                     \"route\": \"/merchant/customer\",\r\n    //                     \"subMenu\": []\r\n    //                 },\r\n    //             ]\r\n    //         }\r\n    //     ]\r\n\r\n    //     return menu;\r\n    // }\r\n\r\n\r\n    render() {\r\n\r\n        let menu = AuthUtil.getMenu();\r\n\r\n        return (\r\n            <div className=\"d-flex justify-content-end navbar\">\r\n\r\n                <div className=\"navbar-content\">\r\n                    <div className=\"mydiv\">\r\n                        {AuthUtil.isTokenValid() &&\r\n                            <Link\r\n                                to={{\r\n                                    pathname: \"/home\",\r\n                                }}\r\n                            >\r\n                                Home\r\n                            </Link>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                {menu && menu.map((value, index) => {\r\n                    return (\r\n                        <div className=\"navbar-content\" key={index}>\r\n                            {value.name !== \"root\" &&\r\n                                <div className=\"mydiv\" key={index}>\r\n                                    <Link\r\n                                        to={{\r\n                                            pathname: value.name,\r\n                                        }}\r\n                                    >\r\n                                        {value.displayName}\r\n\r\n                                    </Link>\r\n                                </div>\r\n                            }\r\n\r\n                        </div>\r\n                    );\r\n\r\n                })}\r\n\r\n                <div className=\"navbar-content\">\r\n                    <div className=\"mydiv\">\r\n                        {AuthUtil.isTokenValid() &&\r\n                            <Link\r\n                                to={{\r\n                                    pathname: \"/update-password\",\r\n                                }}\r\n                            >\r\n                                Update Password\r\n                            </Link>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"navbar-content\">\r\n                    <div className=\"mydiv\">\r\n                        {AuthUtil.isTokenValid() &&\r\n                            <Link\r\n                                to={{\r\n                                    pathname: \"/\",\r\n                                }}\r\n                                onClick={() => AuthUtil.resetTokenDetail()}\r\n                            >\r\n                                Logout\r\n                            </Link>\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"navbar-content\">\r\n                    <div className=\"mydiv\">\r\n                        {!AuthUtil.isTokenValid() &&\r\n                            <Link\r\n                                to={{\r\n                                    pathname: \"/\",\r\n                                }}\r\n                            >\r\n                                Back To Login\r\n                            </Link>\r\n                        }\r\n                    </div>\r\n                </div>\r\n                \r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(HeaderComponent);\r\n\r\n\r\n\r\n\r\n\r\n// {value.subMenu.length === 0 &&\r\n//     <div className=\"mydiv\">\r\n//         <Link\r\n//             to={{\r\n//                 pathname: value.route,\r\n//             }}\r\n//         >\r\n//             {value.displayName}\r\n\r\n//         </Link>\r\n//     </div>\r\n\r\n// }\r\n// {value.subMenu.length > 0 &&\r\n//     <div className=\"mydiv\">\r\n\r\n\r\n//         <div className=\"dropdown\">\r\n//             {value.subMenu.length > 0 &&\r\n//                 value.displayName\r\n//             }\r\n//             <div className=\"dropdown-content\">\r\n//                 {value.subMenu.map((subMenu, i) => {\r\n//                     return (\r\n//                         <Link\r\n//                             to={\r\n//                                 {\r\n//                                     pathname: subMenu.route\r\n//                                 }\r\n//                             }\r\n//                         >\r\n//                             {subMenu.displayName}\r\n//                         </Link>\r\n//                     );\r\n//                 })}\r\n//             </div>\r\n//         </div>\r\n//     </div>\r\n// }","import React from 'react';\r\nimport '../App.css';\r\nimport { NotificationContainer } from 'react-notifications';\r\nimport FooterComponent from './FooterComponent';\r\nimport HeaderComponent from './HeaderComponent';\r\nimport AuthUtil from '../auth/AuthUtil.js'\r\nclass MainComponent extends React.Component {\r\n\r\n\r\n    getMainComponentDesign() {\r\n\r\n        let design = <div>\r\n            <HeaderComponent />\r\n\r\n            <div className=\"body\">\r\n                {this.props.component}\r\n                <NotificationContainer />\r\n            </div>\r\n\r\n            <div className=\"footer\">\r\n                <FooterComponent /> \r\n            </div>\r\n\r\n\r\n        </div>\r\n        return design;\r\n    }\r\n\r\n    getMainComponentDesign2() {\r\n        let design = <div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <HeaderComponent />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"body\">\r\n                NOT LOGGED IN\r\n            </div>\r\n\r\n            {/* <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <FooterComponent />\r\n                </div>\r\n            </div> */}\r\n\r\n        </div>\r\n        return design;\r\n    }\r\n\r\n    isforgetPasswordPage() {\r\n        let path = this.props.component._owner.pendingProps.location.pathname;\r\n        if (path === \"/submit-otp\") {\r\n            return true;\r\n        }\r\n\r\n        if (path === \"/generate-otp\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    render() {\r\n\r\n        if (this.isforgetPasswordPage()) {\r\n            return this.getMainComponentDesign();\r\n        }\r\n\r\n        if (AuthUtil.isTokenValid()) {\r\n            return this.getMainComponentDesign();\r\n        }\r\n        return this.getMainComponentDesign2();\r\n    }\r\n\r\n}\r\n\r\nexport default MainComponent;","import React from 'react'\r\nimport { NotificationManager } from 'react-notifications';\r\nimport MainComponent from '../../common/MainComponent'\r\nimport InputFieldComponent from '../widgets/InputFieldComponent'\r\nimport ButtonComponent from '../widgets/ButtonComponent'\r\nimport { withRouter } from 'react-router-dom';\r\nimport AuthUtil from '../../auth/AuthUtil.js';\r\nimport '../../App.css'\r\nclass UpdatePasswordComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n    this.state = {\r\n      userId: AuthUtil.getUsername(),\r\n      newPassword: ''\r\n    }\r\n  }\r\n\r\n  setInputValue(property, val) {\r\n    this.setState({\r\n      [property]: val\r\n    })\r\n  }\r\n\r\n  resetForm() {\r\n    this.setState({\r\n      userId: '',\r\n      newPassword: ''\r\n    })\r\n  }\r\n\r\n  async changePassword() {\r\n    if (!this.state.userId) {\r\n      return\r\n    }\r\n\r\n    if (!this.state.newPassword) {\r\n      return\r\n    }\r\n\r\n\r\n    const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n    try {\r\n      let res = await fetch(gwUrl + 'authorization-service/endpoint/user/password-update', {\r\n        method: \"POST\",\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'token': 'Bearer ' + AuthUtil.getIdToken()\r\n        },\r\n        body: JSON.stringify({\r\n          userId: this.state.userId,\r\n          newPassword: this.state.newPassword\r\n        })\r\n      });\r\n\r\n      let result = await res.json();\r\n\r\n      if (result.result.status === \"SUCCESS\") {\r\n        console.log(result);\r\n        this.props.history.push(\"/\");\r\n      } else {\r\n        NotificationManager.warning('FAILURE', 'Failed to update password');\r\n        console.log(result);\r\n      }\r\n\r\n    } catch (e) {\r\n\r\n      this.resetForm();\r\n      console.log(e);\r\n    }\r\n\r\n  }\r\n\r\n  getComponentDesign() {\r\n    let design = <div className=\"card-otp\">\r\n      <div className=\"card-body\">\r\n        <h3>Update Password</h3>\r\n        <label>Username</label>\r\n        <InputFieldComponent\r\n          className='input'\r\n          readOnly={'readOnly'}\r\n          type='text'\r\n          placeholder='Username'\r\n          value={this.state.prevPassword ? this.state.prevPassword : AuthUtil.getUsername()}\r\n          onChange={(val) => this.setInputValue('prevPassword', val)}\r\n        />\r\n        <label>New Password</label>\r\n        <InputFieldComponent\r\n          className='input'\r\n          type='password'\r\n          placeholder='Enter new password here'\r\n          value={this.state.newPassword ? this.state.newPassword : ''}\r\n          onChange={(val) => this.setInputValue('newPassword', val)}\r\n        />\r\n\r\n        <ButtonComponent\r\n          text='UPDATE'\r\n          onClick={() => this.changePassword()}\r\n        />\r\n      </div>\r\n    </div>\r\n\r\n    return design;\r\n  }\r\n\r\n  render() {\r\n    let componentDesign = this.getComponentDesign();\r\n    return <MainComponent component={componentDesign} />;\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(UpdatePasswordComponent);\r\n","import React from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport MainComponent from '../../common/MainComponent'\r\nimport InputFieldComponent from '../widgets/InputFieldComponent'\r\nimport ButtonComponent from '../widgets/ButtonComponent'\r\nimport { withRouter } from 'react-router-dom';\r\nimport '../../App.css'\r\nclass OTPSubmitComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        let data = this.props.location.state;\r\n        console.log(\"data:\", data);\r\n\r\n        if (data === undefined) {\r\n            this.state = {\r\n                otpValidationId: '',\r\n                otpValue: '',\r\n            }\r\n        } else {\r\n            this.state = {\r\n                otpValidationId: data.otpValidationId,\r\n                otpValue: '',\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            otpValidationId: '',\r\n            otpValue: ''\r\n        })\r\n    }\r\n\r\n    async submitOTP() {\r\n        if (!this.state.otpValue) {\r\n            NotificationManager.warning('FAILURE', 'OTP-Value field is empty');\r\n            return\r\n        }\r\n\r\n        if (!this.state.otpValidationId) {\r\n            NotificationManager.warning('FAILURE', 'OTP-Validation Id not found');\r\n            return\r\n        }\r\n\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            let res = await fetch(gwUrl + 'authorization-service/endpoint/submit-otp', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    otpValidationId: this.state.otpValidationId,\r\n                    otpValue: this.state.otpValue\r\n\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            if (result) {\r\n                console.log(result);\r\n                NotificationManager.warning('SUCCESS', 'Your New Password is sent to your mobile through SMS');\r\n                this.props.history.push(\"/\");\r\n            } else {\r\n                console.log(result);\r\n            }\r\n\r\n        } catch (e) {\r\n            NotificationManager.warning('FAILURE', 'Failed to send SMS');\r\n            this.resetForm();\r\n            this.props.history.push(\"/generate-otp\");\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    getComponentDesign() {\r\n\r\n        let design = <div className=\"card-otp\">\r\n            <div className=\"card-body\">\r\n                <h3>Submit OTP</h3>\r\n                <h6>An OTP is sent to your mobile through SMS.</h6>\r\n                <h6>Submit OTP here for new password.</h6>\r\n\r\n                <InputFieldComponent\r\n                    className='input'\r\n                    type='number'\r\n                    placeholder='Submit 4 digit otp'\r\n                    value={this.state.otpValue ? this.state.otpValue : ''}\r\n                    onChange={(val) => this.setInputValue('otpValue', val)}\r\n                />\r\n\r\n                <ButtonComponent\r\n                    text='NEXT'\r\n                    onClick={() => this.submitOTP()}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n\r\n        return design;\r\n    }\r\n\r\n    render() {\r\n        let componentDesign = this.getComponentDesign();\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(OTPSubmitComponent);\r\n","import React from 'react';\r\nimport { NotificationManager } from 'react-notifications';\r\nimport MainComponent from '../../common/MainComponent';\r\nimport InputFieldComponent from '../widgets/InputFieldComponent';\r\nimport ButtonComponent from '../widgets/ButtonComponent';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nimport '../../App.css';\r\n\r\nclass OTPGenerateComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(props);\r\n        this.state = {\r\n            userId: '',\r\n        }\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            userId: '',\r\n        })\r\n    }\r\n\r\n    async generateOTP() {\r\n        if (!this.state.userId) {\r\n            NotificationManager.warning('FAILURE', 'UserId field is empty');\r\n            return\r\n        }\r\n\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            let res = await fetch(gwUrl + 'authorization-service/endpoint/generate-otp', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    userId: this.state.userId,\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            if (result) {\r\n                this.props.history.push({\r\n                    pathname: '/submit-otp',\r\n                    state: { otpValidationId: result.result.otpValidationId }\r\n                });\r\n            } else {\r\n                NotificationManager.warning(result.result.result, result.result.message);\r\n                console.log(result);\r\n            }\r\n\r\n        } catch (e) {\r\n\r\n            NotificationManager.warning('FAILURE', 'Failed to send SMS');\r\n            this.resetForm();\r\n            console.log(e);\r\n        }\r\n\r\n    }\r\n\r\n    getComponentDesign() {\r\n\r\n\r\n        let design = <div className=\"card-otp\">\r\n            <div className=\"card-body\">\r\n                <h3>OTP Request</h3>\r\n\r\n                <h6>An OTP will be sent to your mobile through SMS.</h6>\r\n                <h6>Provide your correct username.</h6>\r\n                <InputFieldComponent\r\n                    className='input'\r\n                    type='text'\r\n                    placeholder='Enter your username here'\r\n                    value={this.state.userId ? this.state.userId : ''}\r\n                    onChange={(val) => this.setInputValue('userId', val)}\r\n                />\r\n\r\n                <ButtonComponent\r\n                    text='NEXT'\r\n                    onClick={() => this.generateOTP()}\r\n                />\r\n\r\n            </div>\r\n        </div>\r\n        return design;\r\n    }\r\n\r\n    render() {\r\n        let componentDesign = this.getComponentDesign();\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(OTPGenerateComponent);\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport MainComponent from '../../../common/MainComponent';\r\nimport InputFieldComponent from \"../../widgets/InputFieldComponent\"\r\nimport ButtonComponent from \"../../widgets/ButtonComponent\";\r\nimport \"../../../App.css\";\r\nimport AuthUtil from \"../../../auth/AuthUtil\";\r\nimport { Fieldset } from \"primereact/fieldset\";\r\nimport Dropdown from \"react-dropdown\";\r\nimport \"react-dropdown/style.css\";\r\nimport classNames from \"classnames\";\r\nimport { confirmAlert } from \"react-confirm-alert\"; // Import\r\nimport \"react-confirm-alert/src/react-confirm-alert.css\"; // Import css\r\nimport Searchable from \"react-searchable-dropdown\";\r\nimport Alert from \"simple-react-alert\"; // Import\r\nimport {openAlert} from \"simple-react-alert\"; // Import\r\n\r\nclass HomeComponent extends React.Component {\r\n    async prepareHomePage()\r\n    {\r\n        if (this.depositBanks.length > 0)\r\n            return;\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        //getDepositBanks\r\n        let banksListRequest = await fetch(gwUrl + \"collection-service/endpoint/wallet/banks\", {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n            }\r\n        });\r\n\r\n        let responseBankList = await banksListRequest.json();\r\n        console.log(\"responseBankList\");\r\n        console.log(responseBankList);\r\n        let bankList = responseBankList.result.data;\r\n\r\n        let banks = [];\r\n        for (let index = 0; bankList !== undefined && bankList !== null && index < bankList.length; index++)\r\n        {\r\n            let ele = bankList[index];\r\n\r\n            let bank = {\r\n                label: ele.walletId + ' (' + ele.walletAccountId.replace('COLLECTION_Maxis_', '').replace(ele.walletId, '').replace('_', ' ').replace('_', ' ') + ')',\r\n                value: index\r\n            };\r\n\r\n            banks.push(bank);\r\n        }\r\n\r\n        this.depositBanks = bankList;\r\n        this.depositBanksDropdown = banks;\r\n\r\n        //getTransferWallets\r\n        let walletsListRequest = await fetch(   gwUrl + \"collection-service/endpoint/wallet/accountId\", \r\n                                                {\r\n                                                    \"method\"    :   \"POST\"  ,\r\n                                                    \"headers\"   :   {\r\n                                                                        \"Content-Type\": \"application/json\",\r\n                                                                        \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                                                                    }       ,\r\n                                                    \"body\"      :   \"{\\\"accountId\\\": \\\"\" + AuthUtil.getUsername() + \"\\\"}\"\r\n                                                }\r\n                                            )\r\n        ;\r\n\r\n        let responseWalletList = await walletsListRequest.json();\r\n        console.log(\"responseWalletList\");\r\n        console.log(responseWalletList);\r\n        let walletListPrimary = responseWalletList.result.data;\r\n        let walletList = [];\r\n\r\n        let wallets = [];\r\n        for (let index = 0; walletListPrimary !== undefined && walletListPrimary !== null && index < walletListPrimary.length; index++)\r\n        {\r\n            let ele = walletListPrimary[index];\r\n\r\n            let wallet = {label: ele.walletId, value: ele.walletId};\r\n\r\n            if (ele.walletType === \"DSE\")\r\n            {\r\n                walletList.push(ele);\r\n                wallets.push(wallet);\r\n            }\r\n        }\r\n\r\n        console.log(\"walletList\");\r\n        console.log(walletList);\r\n        console.log(\"wallets\");\r\n        console.log(wallets);\r\n\r\n        this.transferWallets = walletList;\r\n        this.transferWalletsDropdown = wallets;\r\n\r\n        //getCollectionTypes\r\n        let collectionTypesListRequest = await fetch (   gwUrl + \"collection-service/endpoint/collection/type\", \r\n                                                        {\r\n                                                            \"method\"    :   \"GET\"  ,\r\n                                                            \"headers\"   :   {\r\n                                                                                \"Content-Type\": \"application/json\",\r\n                                                                                \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                                                                            }\r\n                                                        }\r\n                                                    )\r\n        ;\r\n\r\n        let responseCollectionTypeList = await collectionTypesListRequest.json();\r\n        console.log(\"responseCollectionTypeList\");\r\n        console.log(responseCollectionTypeList);\r\n        let collectionTypeList = responseCollectionTypeList.result.data;\r\n\r\n        let collectionTypes = [];\r\n        let collectionTypesUsable = [];\r\n        for (let index = 0; collectionTypeList !== undefined && collectionTypeList !== null && index < collectionTypeList.length; index++)\r\n        {\r\n            let ele = collectionTypeList[index];\r\n            if (ele.collectionType !== undefined && ele.collectionType !== \"\" && ele.collectionType != null)\r\n            {\r\n                let collectionType = {\r\n                    label: ele.collectionType,\r\n                    value: ele.id\r\n                };\r\n                collectionTypesUsable.push(ele);\r\n                collectionTypes.push(collectionType);\r\n            }\r\n        }\r\n\r\n        this.collectionTypes        = collectionTypesUsable ;\r\n        this.collectionTypesDropdown= collectionTypes       ;\r\n\r\n        //getMotherMerchants\r\n        let motherMerchantListRequest = await fetch (   gwUrl + \"authorization-service/endpoint/user/merchant\", \r\n                                                        {\r\n                                                            \"method\"    :   \"POST\"  ,\r\n                                                            \"headers\"   :   {\r\n                                                                                \"Content-Type\": \"application/json\",\r\n                                                                                \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                                                                            }       ,\r\n                                                            \"body\"      :   \"{\\\"accountId\\\": \\\"\" + AuthUtil.getUsername() + \"\\\"}\"\r\n                                                        }\r\n                                                    )\r\n        ;\r\n\r\n        let responseMotherMerchantList = await motherMerchantListRequest.json();\r\n        console.log(\"responseMotherMerchantList\");\r\n        console.log(responseMotherMerchantList);\r\n        let motherMerchantList = responseMotherMerchantList.result.response[0];\r\n\r\n        let motherMerchants = [];\r\n        for (let index = 0; motherMerchantList !== undefined && motherMerchantList !== null && index < motherMerchantList.length; index++)\r\n        {\r\n            let ele = motherMerchantList[index];\r\n\r\n            let motherMerchant = {\r\n                label: ele.name + ' (' + ele.userId + ')',\r\n                value: ele.userId\r\n            };\r\n\r\n            motherMerchants.push(motherMerchant);\r\n        }\r\n\r\n        this.motherMerchants        = motherMerchantList;\r\n        this.motherMerchantsDropdown= motherMerchants   ;\r\n\r\n        //getLocalMerchants\r\n        let localMerchantListRequest = await fetch (   gwUrl + \"authorization-service/endpoint/user/payee\", \r\n                                                        {\r\n                                                            \"method\"    :   \"POST\"  ,\r\n                                                            \"headers\"   :   {\r\n                                                                                \"Content-Type\": \"application/json\",\r\n                                                                                \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                                                                            }       ,\r\n                                                            \"body\"      :   \"{\\\"accountId\\\": \\\"\" + AuthUtil.getUsername() + \"\\\"}\"\r\n                                                        }\r\n                                                    )\r\n        ;\r\n\r\n        let responseLocalMerchantList = await localMerchantListRequest.json();\r\n        console.log(\"responseLocalMerchantList\");\r\n        console.log(responseLocalMerchantList);\r\n        let localMerchantList = responseLocalMerchantList.result.response[0];\r\n\r\n        let localMerchants = [];\r\n        for (let index = 0; localMerchantList !== undefined && localMerchantList !== null && index < localMerchantList.length; index++)\r\n        {\r\n            let ele = localMerchantList[index];\r\n\r\n            let localMerchant = {\r\n                label: ele.name + ' (' + ele.userId + ')',\r\n                value: ele.userId\r\n            };\r\n\r\n            localMerchants.push(localMerchant);\r\n        }\r\n\r\n        this.localMerchants        = localMerchantList;\r\n        this.localMerchantsDropdown= localMerchants   ;\r\n        this.currenctLocalMerchantsDropdown        = [];\r\n    }\r\n\r\n    getCurrencies()\r\n    {\r\n        var options = [{\"name\":\"MyCash\", \"code\":\"MyCash\", \"label\":\"MyCash\", \"value\":\"MyCash\"}, {\"name\":\"General\", \"code\":\"General\", \"label\":\"General\", \"value\":\"General\"}];\r\n        console.log(options);\r\n        return options;\r\n    }\r\n\r\n    getDepositBanks()\r\n    {\r\n        console.log(this.depositBanksDropdown);\r\n        return this.depositBanksDropdown;\r\n    }\r\n\r\n    getTransferWallets()\r\n    {\r\n        console.log(this.transferWalletsDropdown);\r\n        return this.transferWalletsDropdown;\r\n    }\r\n\r\n    getWalletTypes()\r\n    {\r\n        console.log(this.walletTypes);\r\n        return this.walletTypes;\r\n    }\r\n\r\n    getMotherMerchants()\r\n    {\r\n        console.log(this.motherMerchantsDropdown);\r\n        return this.motherMerchantsDropdown;\r\n    }\r\n\r\n    getCollectiontypes()\r\n    {\r\n        console.log(this.collectionTypesDropdown);\r\n        return this.collectionTypesDropdown;\r\n    }\r\n\r\n    getLocalMerchants()\r\n    {\r\n        console.log(\"this.currentLocalMerchantsDropdown\");\r\n        console.log(this.currentLocalMerchantsDropdown);\r\n        return this.currentLocalMerchantsDropdown;\r\n    }\r\n\r\n    setInputValue(property1, property2, val) \r\n    {\r\n        let setValue = val;\r\n\r\n        if (property2)\r\n        {   \r\n            let p1 = this.state[property1];\r\n\r\n            if ((property1 === \"collection\" && property2 === \"amount\") || (property1 === \"deposit\" && property2 === \"amount\") || (property1 === \"transfer\" && property2 === \"transferAmount\") || (property1 === \"transfer\" && property2 === \"walletPin\"))\r\n            {\r\n                if (isNaN(val))\r\n                    return;\r\n            }\r\n            else if (property1 === \"deposit\" && property2 === \"bankDetails\")\r\n            {\r\n                setValue = this.depositBanks[val];\r\n            }\r\n            else if (property1 === \"collection\" && property2 === \"merchantId\")\r\n            {\r\n                let clmd = [];\r\n\r\n                for (let index = 0; index < this.localMerchantsDropdown.length; index++)\r\n                {\r\n                    let lm = this.localMerchants[index];\r\n                    for (let lmIndex = 0; lmIndex < lm.taggedMerchantIds.length; lmIndex++)\r\n                    {\r\n                        if (lm.taggedMerchantIds[lmIndex].merchantId === setValue)\r\n                        {\r\n                            clmd.push(this.localMerchantsDropdown[index]);\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                this.currentLocalMerchantsDropdown = clmd;\r\n                console.log(this.currentLocalMerchantsDropdown);\r\n                p1.payeeId = \"\";\r\n            }\r\n\r\n            p1[property2] = setValue;\r\n            this.setState({[property1]: p1});\r\n        }\r\n        else\r\n            this.setState({[property1]: setValue});\r\n    }\r\n\r\n    async deposit()\r\n    {\r\n        if (this.state.deposit.amount < 1 || this.state.deposit.currency === \"\" || this.state.deposit.bankDetails.domainId === undefined)\r\n        {   \r\n            console.log(\"this.state not submittable\");\r\n            this.setState({\"disableDepositButton\": false});\r\n            return;\r\n        }\r\n\r\n        if (this.state.disableDepositButton)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let depositRequest = this.state.deposit;\r\n        depositRequest.cashpointId = AuthUtil.getUsername();\r\n\r\n        console.log(\"this.state submittable\");\r\n        console.log(depositRequest);\r\n        let res = await fetch(process.env.REACT_APP_API_GW_HOST + \"collection-service/endpoint/lifting\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n            },\r\n            body: JSON.stringify(depositRequest)\r\n        });\r\n\r\n        let response = await res.json();\r\n        console.log(response);\r\n        this.setState({\"disableDepositButton\": false});\r\n\r\n        let messagetype = \"warning\";\r\n        let message = \"Please check manually\";\r\n        if ((response.result !== undefined && response.result.message !== undefined && response.result.message.toLowerCase().includes(\"fail\")))\r\n        {    \r\n            messagetype = \"danger\";\r\n            message = response.result.message;\r\n        }\r\n        else if ((response.result !== undefined && response.result.message !== undefined && response.result.message.toLowerCase().includes(\"success\")))\r\n        {    \r\n            messagetype = \"success\";\r\n            message = response.result.message;\r\n        }\r\n        else if (response.result === undefined)\r\n        {    \r\n            messagetype = \"danger\";\r\n            message = response.message;\r\n        }\r\n        openAlert({\"message\": message, \"type\": messagetype, \"duration\":\"2500\"});\r\n    }\r\n\r\n    async transfer()\r\n    {\r\n        if (this.state.transfer.transferAmount < 1 || this.state.transfer.walletPin === \"\" || this.state.transfer.transferWalletId === \"\")\r\n        {   \r\n            console.log(\"this.transfer not submittable\");\r\n            this.setState({\"disableTransferButton\": false});\r\n            return;\r\n        }\r\n\r\n        if (this.state.disableTransferButton)\r\n        {\r\n            return;\r\n        }\r\n\r\n        let transferRequest = this.state.transfer;\r\n        transferRequest.userId = AuthUtil.getUsername();\r\n\r\n        console.log(\"this.transfer submittable\");\r\n        console.log(transferRequest);\r\n        let res = await fetch(process.env.REACT_APP_API_GW_HOST + \"collection-service/endpoint/wallet/transfer/main-dse\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n            },\r\n            body: JSON.stringify(transferRequest)\r\n        });\r\n\r\n        let response = await res.json();\r\n        console.log(response);\r\n\r\n        this.setState({\"disableTransferButton\": false});\r\n        let messagetype = \"warning\";\r\n        let message = \"Please check manually\";\r\n        if ((response.result !== undefined && response.result.message !== undefined && response.result.message.toLowerCase().includes(\"fail\")))\r\n        {    \r\n            messagetype = \"danger\";\r\n            message = response.result.message;\r\n        }\r\n        else if ((response.result !== undefined && response.result.message !== undefined && response.result.message.toLowerCase().includes(\"success\")))\r\n        {    \r\n            messagetype = \"success\";\r\n            message = response.result.message;\r\n        }\r\n        else if (response.result === undefined)\r\n        {    \r\n            messagetype = \"danger\";\r\n            message = response.message;\r\n        }\r\n        openAlert({\"message\": message, \"type\": messagetype, \"duration\":\"2500\"});\r\n    }\r\n\r\n    async collect()\r\n    {\r\n        console.log(\"inside collect\");\r\n        console.log(this.state.collection);\r\n\r\n        if  (   \r\n                this.state.collection.amount        === undefined || this.state.collection.amount           === \"\" || this.state.collection.amount < 10 || \r\n                this.state.collection.currency      === undefined || this.state.collection.currency         === \"\" || \r\n                this.state.collection.collectionType=== undefined || this.state.collection.collectionType   === \"\" ||\r\n                this.state.collection.payeeId       === undefined || this.state.collection.payeeId          === \"\" || \r\n                this.state.collection.cashPointId   === undefined || this.state.collection.cashPointId      === \"\" || \r\n                this.state.collection.merchantId    === undefined || this.state.collection.merchantId       === \"\"\r\n            )\r\n        {   \r\n            console.log(\"this.state not submittable\");\r\n            this.setState({\"disableCollectButton\": false});\r\n            return;\r\n        }\r\n\r\n        if (this.state.disableCollectButton)\r\n        {\r\n            return;\r\n        }\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        let collectionRequest = await fetch (   gwUrl + \"collection-service/endpoint/collection\", \r\n                                                        {\r\n                                                            \"method\"    :   \"POST\"  ,\r\n                                                            \"headers\"   :   {\r\n                                                                                \"Content-Type\": \"application/json\",\r\n                                                                                \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                                                                            }       ,\r\n                                                            \"body\"      :   JSON.stringify(this.state.collection)\r\n                                                        }\r\n                                                    )\r\n        ;\r\n        let response = await collectionRequest.json();\r\n        console.log(\"collection response\");\r\n        console.log(response);\r\n        this.setState({\"disableCollectButton\": false});\r\n        let messagetype = \"warning\";\r\n        let message = \"Please check manually\";\r\n        if ((response.result !== undefined && response.result.message !== undefined && response.result.message.toLowerCase().includes(\"fail\")))\r\n        {    \r\n            messagetype = \"danger\";\r\n            message = response.result.message;\r\n        }\r\n        else if ((response.result !== undefined && response.result.message !== undefined && response.result.message.toLowerCase().includes(\"success\")))\r\n        {    \r\n            messagetype = \"success\";\r\n            message = response.result.message;\r\n        }\r\n        else if (response.result === undefined)\r\n        {    \r\n            messagetype = \"danger\";\r\n            message = response.message;\r\n        }\r\n        openAlert({\"message\": message, \"type\": messagetype, \"duration\":\"2500\"});\r\n    }\r\n\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n        this.fieldSetLegendClassName= classNames(\"maxisFieldset1 maxisFieldset2\");\r\n        this.depositBanks           = [];\r\n        this.depositBanksDropdown   = [];\r\n        this.transferWallets        = [];\r\n        this.transferWalletsDropdown= [];\r\n        this.motherMerchants        = [];\r\n        this.motherMerchantsDropdown= [];\r\n        this.localMerchants         = [];\r\n        this.localMerchantsDropdown = [];\r\n        this.collectionTypes        = [];\r\n        this.collectionTypesDropdown= [];\r\n        this.walletTypes = [{\"label\":\"MyCash\", \"value\":\"MyCash\"}, {\"label\":\"General\", \"value\":\"General\"}];\r\n\r\n        this.currentLocalMerchantsDropdown = [];\r\n\r\n        this.state ={   \r\n                        \"deposit\"   :   {   \"amount\"            : 0, \r\n                                            \"currencyType\"      : \"MFS\" , \r\n                                            \"currency\"          : \"\"    , \r\n                                            \"cashpointId\"       : \"\"    ,\r\n                                            \"bankDetails\"       :   {   \"domainId\"              : \"\",\r\n                                                                        \"walletId\"              : \"\",\r\n                                                                        \"walletName\"            : \"\",\r\n                                                                        \"walletAccountId\"       : \"\",\r\n                                                                        \"ownerId\"               : \"\",\r\n                                                                        \"walletPin\"             : \"\",\r\n                                                                        \"walletOTP\"             : \"\",\r\n                                                                        \"balance\"               : 0 ,\r\n                                                                        \"transactionAccountId\"  : \"\",\r\n                                                                        \"walletType\"            : \"\",\r\n                                                                        \"status\"                : \"\"\r\n                                                                    }\r\n                                            , \r\n                                            \"depositeSlipImage\" : \"\",\r\n                                            \"reference\"         : \"\", \r\n                                            \"comments\"          : \"\",\r\n                                            \"approvalDetails\"   :   {   \"approvalDecision\"      : \"\"    ,\r\n                                                                        \"decisionTime\"          : null  ,\r\n                                                                        \"approvalTransactionId\" : \"\"    ,\r\n                                                                        \"liftingAccountId\"      : \"\"    ,\r\n                                                                        \"liftingWalletId\"       : \"\"\r\n                                                                    }\r\n                                        }\r\n                        ,\r\n                        \"transfer\"  :   {\r\n                                            \"transferAmount\"    : 0 , \r\n                                            \"walletPin\"         : \"\", \r\n                                            \"transferWalletId\"  : \"\",\r\n                                            \"userId\"            : \"\"\r\n                                        }\r\n                        , \r\n                        \"collection\":   {\r\n                                            \"cashPointId\"   : AuthUtil.getUsername(),\r\n                                            \"merchantId\"    : \"\",\r\n                                            \"payeeId\"       : \"\",\r\n                                            \"amount\"        : \"\",\r\n                                            \"collectionType\": \"\",\r\n                                            \"currency\"      : \"\",\r\n                                            \"collectionPin\" : \"\",\r\n                                            \"payeePin\"      : \"\",\r\n                                            \"invoiceNo\" : \"\"    ,\r\n                                            \"reference1\": \"\"    ,\r\n                                            \"reference2\": \"\"    ,\r\n                                            \"reference3\": \"\"    ,\r\n                                            \"document\"  : \"n/a\" ,\r\n                                            \"decision\"              : \"pending\" ,\r\n                                            \"transactionEngineId\"   : \"\"        ,\r\n                                            \"transactionEngineReply\": \"\"\r\n                                        }\r\n                        ,\r\n\r\n                        \"disableTransferButton\" : false,\r\n                        \"disableDepositButton\"  : false,\r\n                        \"disableCollectButton\"  : false\r\n                    }\r\n        ;\r\n    }\r\n\r\n    getComponentDesign() {\r\n        let componentDesign = <div className=\"home\">\r\n                            <Alert>\r\n                            </Alert>\r\n                    {   (AuthUtil.getRolePresence([\"Cashpoint\"]) === true)?\r\n                            <div className=\"card-form-body\">\r\n                                <div className=\"row\" style={{\"borderStyle\": \"solid\", \"margin\": \"2px\"}}>\r\n                                    <div className=\"col-sm-12\">\r\n                                        <Fieldset legend=\"Deposit\" toggleable collapsed={true} className={this.fieldSetLegendClassName}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Amount</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Deposit amount\"\r\n                                                        value={this.state.deposit.amount}\r\n                                                        onChange={(val) => this.setInputValue(\"deposit\", \"amount\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Currency</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <Dropdown\r\n                                                        inputId=\"depositCurrency\" \r\n                                                        options={this.getCurrencies()} \r\n                                                        optionLabel=\"name\" \r\n                                                        optionValue=\"code\" \r\n                                                        onChange={(e) => { this.setInputValue(\"deposit\", \"currency\", e.value) }}  \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Currency Type</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Currency type\"\r\n                                                        readOnly={true}\r\n                                                        value={this.state.deposit.currencyType}\r\n                                                        onChange={(val) => this.setInputValue(\"deposit\", \"currencyType\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Bank</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <Dropdown\r\n                                                        inputId=\"bank\" \r\n                                                        options={this.getDepositBanks()} \r\n                                                        optionLabel=\"label\" \r\n                                                        optionValue=\"value\" \r\n                                                        onChange={(e) => { this.setInputValue(\"deposit\", \"bankDetails\", e.value) }}  \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Reference / Cheque</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Referencec\"\r\n                                                        value={this.state.deposit.reference}\r\n                                                        onChange={(val) => this.setInputValue(\"deposit\", \"reference\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Comments</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Referencec\"\r\n                                                        value={this.state.deposit.comments}\r\n                                                        onChange={(val) => this.setInputValue(\"deposit\", \"comments\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <ButtonComponent\r\n                                                        text=\"Deposit\"\r\n                                                        onClick={() => {this.setState({\"disableDepositButton\": true}); this.deposit();}}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fieldset>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\"> &nbsp;\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\" style={{\"borderStyle\": \"solid\", \"margin\": \"2px\"}}>\r\n                                    <div className=\"col-sm-12\">\r\n                                        <Fieldset legend=\"Transfer\" toggleable collapsed={true} className={this.fieldSetLegendClassName}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Amount</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Transfer amount\"\r\n                                                        value={this.state.transfer.transferAmount}\r\n                                                        onChange={(val) => this.setInputValue(\"transfer\", \"transferAmount\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Wallet</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <Dropdown\r\n                                                        inputId=\"transferWalletId\" \r\n                                                        options={this.getTransferWallets()} \r\n                                                        optionLabel=\"label\" \r\n                                                        optionValue=\"value\" \r\n                                                        onChange={(e) => { this.setInputValue(\"transfer\", \"transferWalletId\", e.value) }}  \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>PIN</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"PIN\"\r\n                                                        value={this.state.transfer.walletPin}\r\n                                                        onChange={(val) => this.setInputValue(\"transfer\", \"walletPin\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <ButtonComponent\r\n                                                        text=\"Transfer\"\r\n                                                        onClick={() => {this.setState({\"disableTransferButton\": true}); this.transfer();}}\r\n                                                        disabled={this.state.disableTransferButton}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fieldset>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\">\r\n                                    <div className=\"col-sm-12\"> &nbsp;\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className=\"row\" style={{\"borderStyle\": \"solid\", \"margin\": \"2px\"}}>\r\n                                    <div className=\"col-sm-12\">\r\n                                        <Fieldset legend=\"Collection\" toggleable collapsed={true} className={this.fieldSetLegendClassName}>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Amount</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"collection amount\"\r\n                                                        value={this.state.collection.amount}\r\n                                                        onChange={(val) => this.setInputValue(\"collection\", \"amount\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Merchant</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <Searchable \r\n                                                        value=\"\" \r\n                                                        placeholder=\"Select\"\r\n                                                        options={this.getMotherMerchants()} \r\n                                                        onSelect={(value) => { this.setInputValue(\"collection\", \"merchantId\", value) }}  \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Payee</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <Dropdown\r\n                                                        inputId=\"userId\" \r\n                                                        options={this.getLocalMerchants()} \r\n                                                        optionLabel=\"label\" \r\n                                                        optionValue=\"value\" \r\n                                                        onChange={(e) => { this.setInputValue(\"collection\", \"payeeId\", e.value) }}  \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Collection type</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <Dropdown\r\n                                                        inputId=\"collectionType\" \r\n                                                        options={this.getCollectiontypes()} \r\n                                                        optionLabel=\"label\" \r\n                                                        optionValue=\"value\" \r\n                                                        onChange={(e) => { this.setInputValue(\"collection\", \"collectionType\", e.value) }}  \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Wallet</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <Dropdown\r\n                                                        inputId=\"currency\" \r\n                                                        options={this.getWalletTypes()} \r\n                                                        optionLabel=\"label\" \r\n                                                        optionValue=\"value\" \r\n                                                        onChange={(e) => { this.setInputValue(\"collection\", \"currency\", e.value) }}  \r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Invoice</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Invoice\"\r\n                                                        value={this.state.collection.invoiceNo}\r\n                                                        onChange={(val) => this.setInputValue(\"collection\", \"invoiceNo\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Reference 1</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Reference 1\"\r\n                                                        value={this.state.collection.reference1}\r\n                                                        onChange={(val) => this.setInputValue(\"collection\", \"reference1\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Reference 2</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Reference 2\"\r\n                                                        value={this.state.collection.reference2}\r\n                                                        onChange={(val) => this.setInputValue(\"collection\", \"reference2\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Reference 3</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"text\"\r\n                                                        placeholder=\"Reference 3\"\r\n                                                        value={this.state.collection.reference3}\r\n                                                        onChange={(val) => this.setInputValue(\"collection\", \"reference3\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Collection PIN</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"password\"\r\n                                                        placeholder=\"Collection PIN\"\r\n                                                        value={this.state.collection.collectionPin}\r\n                                                        onChange={(val) => this.setInputValue(\"collection\", \"collectionPin\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-3\">\r\n                                                    <div className=\"form-input-label\"><b>Payee PIN</b></div>\r\n                                                </div>\r\n                                                <div className=\"col-sm-9\">\r\n                                                    <InputFieldComponent\r\n                                                        className=\"form-input\"\r\n                                                        type=\"password\"\r\n                                                        placeholder=\"Payee PIN\"\r\n                                                        value={this.state.collection.payeePin}\r\n                                                        onChange={(val) => this.setInputValue(\"collection\", \"payeePin\", val)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"row\">\r\n                                                <div className=\"col-sm-12\">\r\n                                                    <ButtonComponent\r\n                                                        text=\"Collect\"\r\n                                                        onClick={() => {this.setState({\"disableCollectButton\": true}); this.collect();}}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                        </Fieldset>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            :\r\n                            <div>Welcome</div>\r\n                    }\r\n        </div>\r\n        return componentDesign;\r\n    }\r\n\r\n    render() {\r\n        this.prepareHomePage();\r\n\r\n\r\n        let componentDesign = this.getComponentDesign();\r\n\r\n\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(HomeComponent);","import React from 'react'\r\nimport InputFieldComponent from '../../widgets/InputFieldComponent'\r\nimport ButtonComponent from '../../widgets/ButtonComponent'\r\nimport MainComponent from '../../../common/MainComponent'\r\nimport DatePicker from 'react-datepicker'\r\n\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\nimport '../../../App.css'\r\nclass DetailPageComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let data = this.props.location.state;\r\n\r\n        if (data === undefined) {\r\n            this.props.history.push(\"/home\");\r\n        }\r\n\r\n\r\n        this.state = {\r\n            id: data.row._original.id,\r\n            name: data.row._original.name,\r\n            occupation: data.row._original.occupation,\r\n            date: new Date(\"12-21-2020\")\r\n        }\r\n\r\n        console.log(\"received: \", data.row._original);\r\n    }\r\n    handleDateSelect(value) {\r\n        console.log(\"handleDateSelect \", value.toString())\r\n        this.setState({\r\n            date: value\r\n        })\r\n    }\r\n    handleDateChange(value) {\r\n\r\n        let date = value.getDate();\r\n        let month = value.getMonth() + 1;\r\n        let year = value.getFullYear();\r\n\r\n        let fullDate = date + \"-\" + month + \"-\" + year;\r\n\r\n        console.log(fullDate);\r\n\r\n        this.setState({\r\n            date: value\r\n        })\r\n\r\n\r\n    }\r\n    getComponentDesign() {\r\n\r\n        let design = <div className=\"detail\">\r\n            <div className=\"card\">\r\n                <div className=\"card-body\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Id\r\n            </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <InputFieldComponent\r\n                                type='text'\r\n                                placeholder='input value here'\r\n                                value={this.state.id ? this.state.id : ''}\r\n                                onChange={(val) => this.setInputValue('id', val)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Name\r\n            </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <InputFieldComponent\r\n                                type='text'\r\n                                placeholder='input value here'\r\n                                value={this.state.name ? this.state.name : ''}\r\n                                onChange={(val) => this.setInputValue('name', val)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Occupation\r\n            </div>\r\n                        <div className=\"col-sm-4\">\r\n                            <InputFieldComponent\r\n                                type='text'\r\n                                placeholder='input value here'\r\n                                value={this.state.occupation ? this.state.occupation : ''}\r\n                                onChange={(val) => this.setInputValue('occupation', val)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                            Date\r\n            </div>\r\n                        <div className=\"col-sm-4\">\r\n\r\n                            <DatePicker\r\n                                dateFormat='dd-MM-yyyy'\r\n                                selected={this.state.date}\r\n                                onChange={e => this.handleDateChange(e)}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-4\">\r\n                        </div>\r\n                        <div className=\"col-sm-2\">\r\n                            <ButtonComponent\r\n                                text='Save'\r\n                                onClick={() => this.save()}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n        return design;\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    save() {\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        let componentDesign = this.getComponentDesign();\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n\r\n}\r\n\r\nexport default DetailPageComponent;","import React from 'react';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport InputFieldComponent from '../../../widgets/InputFieldComponent'\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\nimport ButtonComponent from '../../../widgets/ButtonComponent';\r\nimport MainComponent from '../../../../common/MainComponent'\r\nimport AuthUtil from '../../../../auth/AuthUtil';\r\nimport '../../../../App.css'\r\n\r\nclass ManageWalletComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            filterValue: ''\r\n        }\r\n    }\r\n\r\n    getMockData() {\r\n        let mockData = [{\r\n            id: 1,\r\n            name: \"Mukit\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Ratul\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Emon\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Fahim\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        }\r\n        ];\r\n        return mockData;\r\n    }\r\n\r\n    getColumns() {\r\n        let columns = [\r\n            {\r\n                Header: 'Wallet Id',\r\n                accessor: 'walletId',\r\n                width: 150,\r\n            }, {\r\n                Header: 'Wallet Name',\r\n                accessor: 'walletName',\r\n                width: 150,\r\n            },\r\n            {\r\n                Header: 'Wallet Account Id',\r\n                accessor: 'walletAccountId',\r\n                width: 300,\r\n            },\r\n            {\r\n                Header: 'Wallet Type',\r\n                accessor: 'walletType', \r\n                width: 200,\r\n            },\r\n            {\r\n                fixed: \"right\",\r\n                columns: [{\r\n                    Header: \"Action\",\r\n                    accessor: \"name\",\r\n                    width: 150,\r\n                    Cell: ({ row }) => {\r\n                        return (\r\n                            <div>\r\n                                <ButtonComponent\r\n                                    text='View'\r\n                                    onClick={(e) => { this.handleClick(row) }}\r\n                                />\r\n                            </div>\r\n                        )\r\n                    }\r\n                }]\r\n\r\n            }\r\n        ];\r\n\r\n        return columns;\r\n    }\r\n\r\n    handleClick(row) {\r\n        this.props.history.push({\r\n            pathname: '/add-wallet',\r\n            state: { row }\r\n        });\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            fetch(gwUrl + 'collection-service/endpoint/wallet/accountId', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    accountId: AuthUtil.getUsername()\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => json.result)\r\n                .then(result => {\r\n                    try {\r\n                        this.setState({\r\n                            'data': result.data\r\n                        });\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        this.setState({\r\n                            'data': []\r\n                        });\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    getComponentDesign() {\r\n        let columns = this.getColumns();\r\n        let data = this.state.data;\r\n        let tmpData = data;\r\n        let context = this;\r\n\r\n        if (this.state.filterValue === undefined || this.state.filterValue === null || this.state.filterValue === '') {\r\n\r\n        }\r\n\r\n        else if (data === undefined || data === null || data.length === 0) {\r\n\r\n        }\r\n\r\n        else {\r\n            tmpData = data.filter(function (data1) {\r\n                return data1.walletAccountId.includes(context.state.filterValue);\r\n            });\r\n        }\r\n\r\n        let componentDesign = <div className=\"home\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-8\">\r\n                    <h5>Wallet Management</h5>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-3\">\r\n                    <div>\r\n                        <ButtonComponent\r\n                            text='Add Wallet'\r\n                            onClick={() => this.props.history.push({\r\n                                pathname: '/add-wallet',\r\n                            })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-5\">\r\n                    <InputFieldComponent\r\n                        className='form-input'\r\n                        type='text'\r\n                        placeholder='search here'\r\n                        value={this.state.filterValue ? this.state.filterValue : ''}\r\n                        onChange={(val) => this.setInputValue('filterValue', val)}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <br></br>\r\n                <div className=\"col-lg-12\">\r\n                    <ReactTable\r\n                        data={tmpData}\r\n                        columns={columns}\r\n                        defaultPageSize={10}\r\n                        pageSizeOptions={\r\n                            [10, 20, 40]\r\n                        }\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        return componentDesign;\r\n    }\r\n\r\n    render() {\r\n\r\n        let componentDesign = this.getComponentDesign()\r\n\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n}\r\n\r\nexport default withRouter(ManageWalletComponent);","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport InputFieldComponent from \"../../../widgets/InputFieldComponent\"\r\nimport ButtonComponent from \"../../../widgets/ButtonComponent\";\r\nimport MainComponent from \"../../../../common/MainComponent\";\r\nimport '../../../../App.css'\r\nimport AuthUtil from \"../../../../auth/AuthUtil\";\r\nimport Constant from \"../../../../constants/GeneralConstants\";\r\n\r\nclass WalletAddComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        let data = this.props.location.state;\r\n        if (data === undefined) {\r\n            this.state = {\r\n                balance: 0,\r\n                ownerId: \"\",\r\n                domainId: null,\r\n                status: \"\",\r\n                transactionAccountId: \"\",\r\n                walletAccountId: \"\",\r\n                walletId: \"\",\r\n                walletName: \"\",\r\n                walletPin: \"\",\r\n                walletOTP: \"\",\r\n                walletType: \"\",\r\n                readOnlyFieldValue: \"\",\r\n                enable: \"\"\r\n            }\r\n        } \r\n        else \r\n        {\r\n            this.state = {\r\n                balance: data.row._original.balance,\r\n                domainId: data.row._original.domainId,\r\n                ownerId: data.row._original.ownerId,\r\n                status: data.row._original.status,\r\n                transactionAccountId: data.row._original.transactionAccountId,\r\n                walletAccountId: data.row._original.walletAccountId,\r\n                walletId: data.row._original.walletId,\r\n                walletName: data.row._original.walletName,\r\n                walletPin: data.row._original.walletPin,\r\n                walletOTP: data.row._original.walletOTP,\r\n                walletType: data.row._original.walletType,\r\n                enable: \"disable\"\r\n            }\r\n        }\r\n    }\r\n\r\n    async balanceCheck() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            let res = await fetch(gwUrl + \"collection-service/endpoint/wallet/balance\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    transactionAccountId: this.state.transactionAccountId,\r\n                    walletPin: this.state.walletPin\r\n                })\r\n            });\r\n\r\n            let response = await res.json();\r\n\r\n            this.setInputValue(\"readOnlyFieldValue\", response.result.message);\r\n\r\n\r\n            console.log(response);\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async enCash() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            let res = await fetch(gwUrl + \"collection-service/endpoint/wallet/balance\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    transactionAccountId: this.state.transactionAccountId,\r\n                    walletPin: this.state.walletPin\r\n                })\r\n            });\r\n\r\n            let response = await res.json();\r\n\r\n            this.setInputValue(\"readOnlyFieldValue\", response.result.message);\r\n\r\n            console.log(response);\r\n//////////////////////////The Balance is 478\r\n            let encashableBalanceString = 0;\r\n            if (!response.result.message.includes(\"The Balance is \"))\r\n            {\r\n                return;\r\n            }\r\n\r\n            encashableBalanceString = response.result.message.replace(\"The Balance is \", \"\");\r\n\r\n            let encashableBalance = parseInt(encashableBalanceString, 10);\r\n\r\n            if (encashableBalance === undefined || encashableBalance === null || isNaN(encashableBalance))\r\n            {\r\n                return;\r\n            }\r\n\r\n            let encashmentRequest = {};\r\n            encashmentRequest.walletAccountId\t= this.state.walletId\t;\r\n            encashmentRequest.merchantId\t\t= this.state.ownerId\t;\r\n            encashmentRequest.digitalMoney\t\t= this.state.walletName\t;\r\n            encashmentRequest.encashmentAmount  = encashableBalance;    \r\n\r\n            encashmentRequest.encashmentFeeRateForMerchant\t= 0.0; \r\n            encashmentRequest.maxisVATRate\t= 0.0; \r\n            encashmentRequest.maxisAITRate\t= 0.0; \r\n            encashmentRequest.bankFeeRatio\t= 0.0; \r\n            encashmentRequest.maxisFeeRatio\t= 0.0       ; \r\n            encashmentRequest.decision\t\t= \"pending\"\t;\r\n            encashmentRequest.merchantName\t= \"\"        ;\r\n            encashmentRequest.feeAmount\t\t\t    = 0.0;\r\n            encashmentRequest.bankAmount\t\t    = 0.0;\r\n            encashmentRequest.maxisAmount\t\t    = 0.0;\r\n            encashmentRequest.maxisVATAmount\t\t= 0.0; \r\n            encashmentRequest.maxisAmountAfterVAT\t= 0.0; \r\n            encashmentRequest.maxisAITAmount\t\t= 0.0; \r\n            encashmentRequest.maxisAmountAfterAIT\t= 0.0; \r\n\r\n            let resEncash = await fetch(gwUrl + \"collection-service/endpoint/encashment\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify(encashmentRequest)\r\n            });\r\n\r\n            let responseEncash = await resEncash.json();\r\n\r\n            this.setInputValue(\"readOnlyFieldValue\", responseEncash.result.message);\r\n\r\n            console.log(response);\r\n//////////////////////////\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async collect() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            let res = await fetch(gwUrl + \"collection-service/endpoint/wallet/balance\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    transactionAccountId: this.state.transactionAccountId,\r\n                    walletPin: this.state.walletPin\r\n                })\r\n            });\r\n\r\n            let response = await res.json();\r\n\r\n            this.setInputValue(\"readOnlyFieldValue\", response.result.message);\r\n\r\n            console.log(response);\r\n//////////////////////////The Balance is 478\r\n            let encashableBalanceString = 0;\r\n            if (!response.result.message.includes(\"The Balance is \"))\r\n            {\r\n                return;\r\n            }\r\n\r\n            encashableBalanceString = response.result.message.replace(\"The Balance is \", \"\");\r\n\r\n            let encashableBalance = parseInt(encashableBalanceString, 10);\r\n\r\n            if (encashableBalance === undefined || encashableBalance === null || isNaN(encashableBalance))\r\n            {\r\n                return;\r\n            }\r\n\r\n            let encashmentRequest = {};\r\n            encashmentRequest.walletAccountId\t= this.state.walletId\t;\r\n            encashmentRequest.merchantId\t\t= this.state.ownerId\t;\r\n            encashmentRequest.digitalMoney\t\t= this.state.walletName\t;\r\n            encashmentRequest.encashmentAmount  = encashableBalance;    \r\n\r\n            encashmentRequest.encashmentFeeRateForMerchant\t= 0.0; \r\n            encashmentRequest.maxisVATRate\t= 0.0; \r\n            encashmentRequest.maxisAITRate\t= 0.0; \r\n            encashmentRequest.bankFeeRatio\t= 0.0; \r\n            encashmentRequest.maxisFeeRatio\t= 0.0       ; \r\n            encashmentRequest.decision\t\t= \"pending\"\t;\r\n            encashmentRequest.merchantName\t= \"\"        ;\r\n            encashmentRequest.feeAmount\t\t\t    = 0.0;\r\n            encashmentRequest.bankAmount\t\t    = 0.0;\r\n            encashmentRequest.maxisAmount\t\t    = 0.0;\r\n            encashmentRequest.maxisVATAmount\t\t= 0.0; \r\n            encashmentRequest.maxisAmountAfterVAT\t= 0.0; \r\n            encashmentRequest.maxisAITAmount\t\t= 0.0; \r\n            encashmentRequest.maxisAmountAfterAIT\t= 0.0; \r\n\r\n            let resEncash = await fetch(gwUrl + \"collection-service/endpoint/encashment\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify(encashmentRequest)\r\n            });\r\n\r\n            let responseEncash = await resEncash.json();\r\n\r\n            this.setInputValue(\"readOnlyFieldValue\", responseEncash.result.message);\r\n\r\n            console.log(response);\r\n//////////////////////////\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    async otpReset() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            let res = await fetch(gwUrl + \"collection-service/endpoint/wallet/otp-reset\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    walletId: this.state.walletId,\r\n                    walletAccountId: this.state.walletAccountId,\r\n                    transactionAccountId: this.state.transactionAccountId,\r\n                    walletPin: this.state.walletPin\r\n                })\r\n            });\r\n\r\n            let response = await res.json();\r\n\r\n            this.setInputValue(\"readOnlyFieldValue\", response.result.data);\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    getComponentDesign() \r\n    {\r\n        let design = <div className=\"card-form-body\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <div align=\"center\"><h3>Wallet Add Form</h3></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\">\r\n                        <div className=\"form-input-label\">Wallet Id</div>\r\n                </div>\r\n                <div className=\"col-sm-8\">\r\n                        <InputFieldComponent\r\n                            className=\"form-input\"\r\n                            type=\"text\"\r\n                            placeholder=\"input value here\"\r\n                            value={this.state.walletId ? this.state.walletId : \"\"}\r\n                            onChange={(val) => this.setInputValue(\"walletId\", val)}\r\n                            readOnly={AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"])}\r\n                        />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\">\r\n                        <div className=\"form-input-label\">Wallet Name</div>\r\n                </div>\r\n                <div className=\"col-sm-8\">\r\n                        <InputFieldComponent\r\n                            className=\"form-input\"\r\n                            type=\"text\"\r\n                            placeholder=\"input value here\"\r\n                            value={this.state.walletName ? this.state.walletName : \"\"}\r\n                            onChange={(val) => this.setInputValue(\"walletName\", val)}\r\n                            readOnly={AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"])}\r\n                        />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\">\r\n                        <div className=\"form-input-label\">Wallet Owner Id</div>\r\n                </div>\r\n                <div className=\"col-sm-8\">\r\n                        <InputFieldComponent\r\n                            className=\"form-input\"\r\n                            type=\"text\"\r\n                            placeholder=\"input value here\"\r\n                            value={this.state.ownerId ? this.state.ownerId : \"\"}\r\n                            onChange={(val) => this.setInputValue(\"ownerId\", val)}\r\n                            readOnly={AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"])}\r\n                        />\r\n                </div>\r\n            </div>\r\n            {   (AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"]) === true)?\r\n                    <div>{}</div>\r\n                :\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 form-input-labe\">\r\n                            <div className=\"l\">Wallet Account Id</div>\r\n                        </div>\r\n                        <div className=\"col-sm-8\">\r\n                            <InputFieldComponent\r\n                                className=\"form-input\"\r\n                                type=\"text\"\r\n                                placeholder=\"input value here\"\r\n                                value={this.state.walletAccountId ? this.state.walletAccountId : \"\"}\r\n                                onChange={(val) => this.setInputValue(\"walletAccountId\", val)}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n            }\r\n            {   (AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"]) === true)?\r\n                    <div>{}</div>\r\n                :\r\n                    <div className=\"row\">\r\n                    <div className=\"col-sm-2 form-input-label\">\r\n                            <div className=\"\">Transaction Account Id</div>\r\n                    </div>\r\n                    <div className=\"col-sm-8\">\r\n                            <InputFieldComponent\r\n                                className=\"form-input\"\r\n                                type=\"text\"\r\n                                placeholder=\"input value here\"\r\n                                value={this.state.transactionAccountId ? this.state.transactionAccountId : \"\"}\r\n                                onChange={(val) => this.setInputValue(\"transactionAccountId\", val)}\r\n                            />\r\n                    </div>\r\n                </div>\r\n            }\r\n            <div className=\"row\">\r\n                        <div className=\"col-sm-2 form-input-label\">Wallet Pin</div>\r\n                        <div className=\"col-sm-8\">\r\n                            <InputFieldComponent\r\n                                className=\"form-input\"\r\n                                type=\"text\"\r\n                                placeholder=\"input value here\"\r\n                                value={this.state.walletPin ? this.state.walletPin : \"\"}\r\n                                onChange={(val) => this.setInputValue(\"walletPin\", val)}\r\n                                readOnly={AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"])}\r\n                            />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2 form-input-label\">Wallet OTP</div>\r\n                <div className=\"col-sm-8\">\r\n                        <InputFieldComponent\r\n                            className=\"form-input\"\r\n                            type=\"text\"\r\n                            placeholder=\"input value here\"\r\n                            value={this.state.walletOTP ? this.state.walletOTP : \"\"}\r\n                            onChange={(val) => this.setInputValue(\"walletOTP\", val)}\r\n                            readOnly={AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"])}\r\n                        />\r\n                </div>\r\n            </div>\r\n            {   (AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"]) === true)?\r\n                    <div>{}</div>\r\n                :\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2 form-input-label\">Wallet Type</div>\r\n                        <div className=\"col-sm-8\">\r\n                                <InputFieldComponent\r\n                                    className=\"form-input\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"input value here\"\r\n                                    value={this.state.walletType ? this.state.walletType : \"\"}\r\n                                    onChange={(val) => this.setInputValue(\"walletType\", val)}\r\n                                />\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2 form-input-label\">Wallet Status</div>\r\n                <div className=\"col-sm-8\">\r\n                        <InputFieldComponent\r\n                            className=\"form-input\"\r\n                            readOnly={AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"])}\r\n                            type=\"text\"\r\n                            placeholder=\"input value here\"\r\n                            value={this.state.status ? this.state.status : \"\"}\r\n                            onChange={(val) => this.setInputValue(\"status\", val)}\r\n                        />\r\n                </div>\r\n            </div>\r\n            {   (AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"]) === true)?\r\n                    <div>{}</div>\r\n                :\r\n                    <div className=\"row\">\r\n                        <div className=\"col-sm-2\">\r\n                        </div>\r\n                        <div className=\"col-sm-8\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <ButtonComponent\r\n                                    text=\"Save\"\r\n                                    onClick={() => this.save()}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            }\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2 form-input-label\">Date {AuthUtil.getAuthCurrentDateTime()}</div>\r\n                <div className=\"col-sm-8\">\r\n                        <InputFieldComponent\r\n                            className=\"form-input\"\r\n                            readOnly=\"readOnly\"\r\n                            type=\"text\"\r\n                            placeholder=\"\"\r\n                            value={this.state.readOnlyFieldValue ? this.state.readOnlyFieldValue : \"\"}\r\n                            onChange={(val) => this.setInputValue(\"readOnlyFieldValue\", val)}\r\n                        />\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\">\r\n                </div>\r\n                <div className=\"col-sm-8\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <div className=\"justify-content-end\">\r\n                            <ButtonComponent\r\n                                text=\"Balance Check\"\r\n                                onClick={() => this.balanceCheck()}\r\n                            />\r\n                        </div>\r\n\r\n                        {   (AuthUtil.getRolePresence([\"Merchant\", \"Cashpoint\", \"Payee\"]) === true)?\r\n                            <div>{}</div>\r\n                            :\r\n                                <div className=\"justify-content-start\" style={{ paddingLeft: \"10px\" }}>\r\n                                    <ButtonComponent\r\n                                        text=\"OTP Reset\"\r\n                                        onClick={() => this.otpReset()}\r\n                                    />\r\n                                </div>\r\n                        }\r\n\r\n                        {   ((AuthUtil.getRolePresence([\"account_head\"]) === true && this.state.walletType === \"Mother Merchant\") || AuthUtil.getRolePresence([\"Merchant\"]) === true)?\r\n                                <div className=\"justify-content-start\" style={{ paddingLeft: \"10px\" }}>\r\n                                    <ButtonComponent\r\n                                        text=\"Encash\"\r\n                                        onClick={() => this.enCash()}\r\n                                    />\r\n                                </div>\r\n                            :\r\n                            <div>{}</div>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        return design;\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    async save() {\r\n        this.setState({\r\n            enable: \"disable\"\r\n        });\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            let res = await fetch(gwUrl + \"collection-service/endpoint/wallet\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    id: this.state.domainId,\r\n                    walletId: this.state.walletId,\r\n                    walletName: this.state.walletName,\r\n                    walletAccountId: this.state.walletAccountId,\r\n                    ownerId: this.state.ownerId,\r\n                    walletPin: this.state.walletPin,\r\n                    walletOTP: this.state.walletOTP,\r\n                    balance: this.state.balance,\r\n                    transactionAccountId: this.state.transactionAccountId,\r\n                    walletType: this.state.walletType,\r\n                    status: this.state.status\r\n                })\r\n            });\r\n\r\n            let response = await res.json();\r\n            this.setState({\r\n                enable: \"\"\r\n            });\r\n            if (response.result.code === Constant.MW_RESPONSE_SUCCESS_CODE) {\r\n                this.props.history.push({\r\n                    pathname: \"/manage-wallet\"\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            this.setState({\r\n                enable: \"\"\r\n            });\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let componentDesign = this.getComponentDesign();\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(WalletAddComponent);","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ButtonComponent from '../../../widgets/ButtonComponent'\r\nimport MainComponent from '../../../../common/MainComponent'\r\nimport '../../../../App.css'\r\nimport AuthUtil from '../../../../auth/AuthUtil';\r\nimport Constant from '../../../../constants/GeneralConstants';\r\n\r\nclass WalletOTPResetComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedData: {},\r\n            data: []\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            fetch(gwUrl + 'collection-service/endpoint/wallet', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => json.result)\r\n                .then(result => {\r\n                    try {\r\n                        this.setState({\r\n                            'data': []\r\n                        });\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        this.setState({\r\n                            'data': []\r\n                        });\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    getComponentDesign() {\r\n\r\n        let design = <div className=\"card-form-body\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"d-flex justify-content-end\"><h3>Reset Wallet OTP</h3></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <div className=\"form-input-label\">Choose Wallet</div>\r\n                        <div className=\"form-dropdown\">\r\n                            <select className=\"form-dropdown-select\" value={this.value} onChange={(e) => { this.setInputValue('selectedData', e.target.value) }}>\r\n                                <option key={\"1\"} value={\"wallet\"}>{\"Select Wallet Account Number\"}</option>)\r\n                                {this.state.data.map((item) => <option key={item.domainId} value={JSON.stringify(item)}>{item.walletAccountId}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <ButtonComponent\r\n                            text='Reset'\r\n                            onClick={() => this.save()}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        return design;\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    async save() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        let walletInfo = JSON.parse(this.state.selectedData);\r\n        try {\r\n            let res = await fetch(gwUrl + 'collection-service/endpoint/wallet/otp-reset', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    walletId: walletInfo.walletId,\r\n                    transactionAccountId: walletInfo.transactionAccountId,\r\n                    walletPin: walletInfo.walletPin\r\n                })\r\n            });\r\n\r\n            let response = await res.json();\r\n            if (response.result.code === Constant.MW_RESPONSE_SUCCESS_CODE) {\r\n                this.props.history.push({\r\n                    pathname: '/home'\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        let componentDesign = this.getComponentDesign();\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(WalletOTPResetComponent);","import React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\nimport ButtonComponent from '../../../widgets/ButtonComponent';\r\nimport MainComponent from '../../../../common/MainComponent'\r\nimport AuthUtil from '../../../../auth/AuthUtil';\r\nimport '../../../../App.css'\r\n\r\nclass DigitalMoneyAcquisitionComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    getMockData() {\r\n        let mockData = [{\r\n            id: 1,\r\n            name: \"Mukit\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Ratul\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Emon\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Fahim\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        }\r\n        ];\r\n        return mockData;\r\n    }\r\n\r\n    getColumns() {\r\n        let columns = [\r\n            {\r\n                Header: 'Date',\r\n                id: 'localDateTime',\r\n                width:200,\r\n                accessor: data => {return data.localDateTime? data.localDateTime.replace(\"T\", \" \").substring(0, 19): \"\"}\r\n            },\r\n            {\r\n                Header: \"Wallet\",\r\n                id: \"wallet\",\r\n                accessor: data => {return data.wallet === \"5ee20671-b381-464b-b2cf-c12de23060af\"? \"MyCash\": (data.wallet === \"6cacff8c-8f0b-4fd1-aa3c-6819d3261624\"? \"Citi\": (data.wallet === \"f9a969a7-679e-4701-a1dc-0eff10d0c31e\"? \"General\": \"UCash\"))},\r\n                width: 100\r\n            },\r\n            {\r\n                Header: 'Amount',\r\n                accessor: 'amount'\r\n            },\r\n            {\r\n                Header: 'Reference',\r\n                accessor: 'referenceDetails'\r\n            }\r\n        ];\r\n\r\n        return columns;\r\n    }\r\n\r\n    handleClick(row) {\r\n        this.props.history.push({\r\n            pathname: '/add-digital-money-acquisition-request',\r\n            state: { row }\r\n        });\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            fetch(gwUrl + 'collection-service/endpoint/digital-money-acquisition', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => json.result)\r\n                .then(result => {\r\n                    try {\r\n                        this.setState({\r\n                            'data': result.data\r\n                        });\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        this.setState({\r\n                            'data': []\r\n                        });\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    getComponentDesign() {\r\n        let columns = this.getColumns();\r\n        let componentDesign = <div className=\"home\">\r\n            <br></br>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <h5>Digital Money Acquisition Management</h5>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\">\r\n                    <div>\r\n                        <ButtonComponent\r\n                            text='Acquisition'\r\n                            onClick={() => this.props.history.push({\r\n                                pathname: '/add-digital-money-acquisition-request',\r\n                            })}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row\">\r\n                <br></br>\r\n                <div className=\"col-lg-12\">\r\n                    <ReactTable\r\n                        data={this.state.data}\r\n                        columns={columns}\r\n                        defaultPageSize={10}\r\n                        pageSizeOptions={\r\n                            [10, 20, 40]\r\n                        }\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        return componentDesign;\r\n    }\r\n\r\n    render() {\r\n\r\n        let componentDesign = this.getComponentDesign()\r\n\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n}\r\n\r\nexport default withRouter(DigitalMoneyAcquisitionComponent);","\r\nimport React from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport InputFieldComponent from '../../../widgets/InputFieldComponent'\r\nimport ButtonComponent from '../../../widgets/ButtonComponent'\r\nimport MainComponent from '../../../../common/MainComponent'\r\nimport '../../../../App.css'\r\nimport AuthUtil from '../../../../auth/AuthUtil';\r\nimport Constant from '../../../../constants/GeneralConstants';\r\nclass DigitalMoneyAcquisitionRequestComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        let data = this.props.location.state;\r\n\r\n        if (data === undefined) {\r\n            this.state = {\r\n                wallet: '',\r\n                amount: '',\r\n                b64Image: '',\r\n                bankName: '',\r\n                bankBranch: '',\r\n                bankAccountType: '',\r\n                bankAccountName: '',\r\n                bankAccountNumber: '',\r\n                rerenceDetails: '',\r\n                bank: '',\r\n                walletList: [],\r\n                mdWallet: [],\r\n                enable: '',\r\n                pushed: 'no'\r\n            }\r\n        } else {\r\n            this.state = {\r\n                wallet: data.row._original.wallet,\r\n                amount: data.row._original.amount,\r\n                b64Image: data.row._original.b64Image,\r\n                bankName: data.row._original.reference.bankName,\r\n                bankBranch: data.row._original.reference.bankBranch,\r\n                bankAccountType: data.row._original.reference.bankAccountType,\r\n                bankAccountName: data.row._original.reference.bankAccountName,\r\n                bankAccountNumber: data.row._original.reference.bankAccountNumber,\r\n                rerenceDetails: data.row._original.referenceDetails,\r\n                bank: data.row._original.bank,\r\n                walletList: [],\r\n                mdWallet: [],\r\n                enable: 'disable',\r\n                pushed: 'yes'\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    getMockData() {\r\n        let mockData = [\r\n            {\r\n                id: 1,\r\n                name: \"Choose Option\",\r\n                path: \"/\"\r\n            },\r\n            {\r\n                id: 2,\r\n                name: \"CV Bank\",\r\n                path: \"/cv-bank\"\r\n            }\r\n\r\n        ];\r\n        return mockData;\r\n    }\r\n    componentDidMount() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        let tmpWallet = []\r\n        try {\r\n            fetch(gwUrl + 'collection-service/endpoint/wallet', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => json.result)\r\n                .then(result => {\r\n                    tmpWallet = result.data.filter(function (d) {\r\n                        return d.walletType === \"Master Distributor\";\r\n                    });\r\n                    console.log(tmpWallet);\r\n                    this.setState({ 'mdWallet': tmpWallet });\r\n                    this.setState({ 'walletList': result.data });\r\n                });\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    getComponentDesign() {\r\n        this.state.walletList.filter(function (w) {\r\n\r\n            if (w.walletId === \"054-2101-000003995\" || w.walletId === \"3677901027521\" || w.walletId === \"054-2101-000003995\" || w.walletId === \"114.120.3432\" || w.walletId === \"0105702000532\" || w.walletId === \"Commission\" || w.walletId === \"111311130973714\") {\r\n                return w;\r\n            }\r\n\r\n            return null;\r\n        });\r\n\r\n        let design = <div className=\"card-form-body\">\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <div className=\"d-flex justify-content-end\"><h3>Digital Money Acquisition</h3></div>\r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <div className=\"form-input-label\">Choose Wallet</div>\r\n                        <div className=\"form-dropdown\">\r\n                            <select className=\"form-dropdown-select\" value={this.value} onChange={(e) => { this.setInputValue('wallet', JSON.parse(e.target.value).transactionAccountId); console.log(e.target.value) }}>\r\n                                <option value=\"#\">Choose Wallet</option>\r\n                                {this.state.mdWallet.map((item) => <option key={item.domainId} value={JSON.stringify(item)}>{item.walletName}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <div className=\"form-input-label\">Amount</div>\r\n\r\n                        <InputFieldComponent\r\n                            className='form-input'\r\n                            type='number'\r\n                            placeholder='input value here'\r\n                            value={this.state.amount ? this.state.amount : ''}\r\n                            onChange={(val) => this.setInputValue('amount', val)}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <div className=\"form-input-label\">Reference Details</div>\r\n\r\n                        <InputFieldComponent\r\n                            className='form-input'\r\n                            type='text'\r\n                            placeholder='input value here'\r\n                            value={this.state.rerenceDetails ? this.state.rerenceDetails : ''}\r\n                            onChange={(val) => this.setInputValue('rerenceDetails', val)}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <ButtonComponent\r\n                            text='Save'\r\n                            disabled={this.state.enable}\r\n                            onClick={() => this.save()}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                <div className=\"col-sm-12\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        return design;\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    async save() {\r\n        this.setState({\r\n            enable: 'disable'\r\n        });\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            let res = await fetch(gwUrl + 'collection-service/endpoint/digital-money-acquisition', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    wallet: this.state.wallet,\r\n                    amount: this.state.amount,\r\n                    b64Image: this.state.b64Image,\r\n                    reference: {\r\n                        bankName: this.state.bankName,\r\n                        bankBranch: this.state.bankBranch,\r\n                        bankAccountType: this.state.bankAccountType,\r\n                        bankAccountName: this.state.bankAccountName,\r\n                        bankAccountNumber: this.state.bankAccountNumber,\r\n                        refenceDetails: this.state.rerenceDetails\r\n                    },\r\n                    refenceDetails: this.state.rerenceDetails,\r\n                    bank: this.state.bank\r\n\r\n                })\r\n            });\r\n\r\n            let response = await res.json();\r\n\r\n            this.setState({\r\n                enable: ''\r\n            });\r\n\r\n            if (response.result.code === Constant.DMA_RESPONSE_SUCCESS_CODE) {\r\n                this.props.history.push({\r\n                    pathname: '/digital-money-acquire'\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            this.setState({\r\n                enable: ''\r\n            });\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let componentDesign = this.getComponentDesign();\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n\r\n}\r\n\r\nexport default withRouter(DigitalMoneyAcquisitionRequestComponent);","import React from 'react';\r\n\r\nimport { withRouter }   from \"react-router-dom\"                         ;\r\nimport ReactTable       from \"react-table-6\"                            ;\r\nimport ButtonComponent  from \"../../../widgets/ButtonComponent\"         ;\r\nimport MainComponent    from \"../../../../common/MainComponent\"         ;\r\nimport AuthUtil         from \"../../../../auth/AuthUtil\"                ;\r\nimport DatePicker       from \"react-datepicker\"                         ;\r\nimport {CSVLink}        from \"react-csv\"                                ;\r\nimport \"../../../../App.css\"                                            ;\r\nimport \"react-table-6/react-table.css\"                                  ;\r\nimport \"react-datepicker/dist/react-datepicker.css\"                     ;\r\n\r\nclass ManageEncashComponent extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n        \r\n        this.state = {\r\n            \"data\"          : []        ,\r\n            \"fromDate\"      : new Date(),\r\n            \"toDate\"        : new Date(),\r\n            \"dataToDownload\": []\r\n        };\r\n\r\n        this.handleFromDateChange   = this.handleFromDateChange.bind(this)  ;\r\n        this.handleToDateChange     = this.handleToDateChange.bind(this)    ;\r\n        this.getSearchResult        = this.getSearchResult.bind(this)       ;\r\n        this.downloadData           = this.downloadData.bind(this)          ;\r\n        this.prepareDownload        = this.prepareDownload.bind(this)       ;\r\n    }\r\n\r\n    prepareDownload(source)\r\n    {\r\n        console.log(\"prepareDownload\");\r\n        console.log(source);\r\n        const columns = this.getColumns();\r\n        const currentRecords = this.state.data;\r\n\r\n        let dataToDownload = [];\r\n\r\n        let headerArray = [];\r\n        for (var i = 0; i < columns.length; i++)\r\n        {\r\n            headerArray[i] = columns[i].Header;\r\n        }\r\n        dataToDownload[0] = headerArray;\r\n\r\n        console.log(\"====currentRecords====\");\r\n        console.log(currentRecords);\r\n        for(var j = 0; j < currentRecords.length; j++)\r\n        {\r\n            console.log(\"currentRecords[j]\");\r\n            console.log(currentRecords[j]);\r\n            let dataArray = [];\r\n\r\n            dataArray[0] = currentRecords[j].generateTime.replace(\"T\", \" \").substring(0, 19);\r\n            dataArray[1] = currentRecords[j].merchantId;\r\n            dataArray[2] = currentRecords[j].merchantName;\r\n            dataArray[3] = currentRecords[j].walletAccountId;\r\n            dataArray[4] = currentRecords[j].encashmentAmount;\r\n            dataArray[5] = currentRecords[j].decision;\r\n\r\n            dataToDownload[j + 1] = dataArray;\r\n        }\r\n\r\n        this.setState({\"dataToDownload\": dataToDownload});\r\n    }\r\n\r\n    handleFromDateChange(date)\r\n    {\r\n        this.setState({fromDate: date});\r\n    }\r\n\r\n    handleToDateChange(date)\r\n    {\r\n        this.setState({toDate: date});\r\n    }\r\n\r\n    getMockData() \r\n    {\r\n        let mockData = [{id: 1, name: \"Mukit\", occupation: \"SE\", address: \"Dhaka\"}];\r\n        return mockData;\r\n    }\r\n\r\n    getColumns() \r\n    {\r\n        let columns =   [\r\n                            {\r\n                                \"Header\"    : \"Date\"        ,\r\n                                \"id\"        : \"generateTime\",\r\n                                \"width\"     : 200           ,\r\n                                \"accessor\"  : data => {return data.generateTime? data.generateTime.replace(\"T\", \" \").substring(0, 19): \"\"}\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Merchant Id\" ,\r\n                                \"width\"     : 150           ,\r\n                                \"accessor\"  : \"merchantId\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Merchant Name\"   ,\r\n                                \"width\"     : 300               ,\r\n                                \"accessor\"  : \"merchantName\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Merchant Wallet\" ,\r\n                                \"width\"     : 150               ,\r\n                                \"accessor\"  : \"walletAccountId\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Amount\"          ,\r\n                                \"width\"     : 100               ,\r\n                                \"accessor\"  : \"encashmentAmount\",\r\n                                \"Cell\"      : ({ row }) => {return (<div align=\"right\">{row.encashmentAmount}</div>)}\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Decision\",\r\n                                \"width\"     : 150       ,\r\n                                \"accessor\"  : \"decision\"\r\n                            }\r\n                        ]\r\n        ;\r\n\r\n        return columns;\r\n    }\r\n\r\n    handleClick(row, decision) \r\n    {\r\n        let data =  {\r\n                        \"approverId\"    : AuthUtil.getUsername(),\r\n                        \"encashmentId\"  : row.domainId,\r\n                        \"comment\"       : \"na\",\r\n                        \"decision\"      : decision\r\n                    }\r\n        ;\r\n        this.updateApproval(data);\r\n        console.log(\"decision: \", decision, \" Lifting: \", row._original);\r\n    }\r\n\r\n    async updateApproval(data) \r\n    {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try \r\n        {\r\n            let res = await fetch   (   gwUrl + \"collection-service/endpoint/encashment/decision-update\", \r\n                                        {   \"method\"    :   \"POST\",\r\n                                            \"headers\"   :   {\r\n                                                                \"Content-Type\"  : \"application/json\",\r\n                                                                \"token\"         : \"Bearer \" + AuthUtil.getIdToken()\r\n                                                            }\r\n                                            ,\r\n                                            \"body\"      :   JSON.stringify  (   {   \"approverId\"    : data.approverId   ,\r\n                                                                                    \"encashmentId\"  : data.encashmentId ,\r\n                                                                                    \"comment\"       : data.comment      ,\r\n                                                                                    \"decision\"      : data.decision\r\n                                                                                }\r\n                                                                            )\r\n                                        }\r\n                                    )\r\n            ;\r\n\r\n            let result = await res.json();\r\n\r\n            console.log(result);\r\n        } \r\n        catch (e) \r\n        {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount() \r\n    {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try \r\n        {\r\n            fetch   (   gwUrl + \"collection-service/endpoint/encashment/accountId\", \r\n                        {   \"method\"    :   \"POST\",\r\n                            \"headers\"   :   {   \"Content-Type\"  : \"application/json\",\r\n                                                \"token\"         : \"Bearer \" + AuthUtil.getIdToken()\r\n                                            }\r\n                            ,\r\n                            \"body\"      : JSON.stringify(   {   \"accountId\" : AuthUtil.getUsername(),\r\n                                                                \"fromDate\"  : this.state.fromDate,\r\n                                                                \"toDate\"    : this.state.toDate                                                            \r\n                                                            }\r\n                                                        )\r\n                        }\r\n                    )\r\n                    .then(res => res.json())\r\n                    .then(json => json.result)\r\n                    .then   (result =>  {\r\n                                            try \r\n                                            {\r\n                                                this.setState({\"data\": result.data});\r\n                                                this.prepareDownload(\"componentDidMount\");\r\n                                            } \r\n                                            catch (error) \r\n                                            {\r\n                                                console.log(error);\r\n                                                this.setState({\"data\": []});\r\n                                            }\r\n                                        }\r\n                            )\r\n            ;\r\n        }\r\n        catch (e) \r\n        {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    getSearchResult() \r\n    {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try \r\n        {\r\n            fetch   (   gwUrl + \"collection-service/endpoint/encashment/accountId\", \r\n                        {   \"method\"    :   \"POST\",\r\n                            \"headers\"   :   {   \"Content-Type\"  : \"application/json\",\r\n                                                \"token\"         : \"Bearer \" + AuthUtil.getIdToken()\r\n                                            }\r\n                            ,\r\n                            \"body\"      : JSON.stringify(   {   \"accountId\" : AuthUtil.getUsername(),\r\n                                                                \"fromDate\"  : this.state.fromDate,\r\n                                                                \"toDate\"    : this.state.toDate                                                            \r\n                                                            }\r\n                                                        )\r\n                        }\r\n                    )\r\n                    .then(res => res.json())\r\n                    .then(json => json.result)\r\n                    .then   (result =>  {\r\n                                            try \r\n                                            {\r\n                                                this.setState({\"data\": result.data});\r\n                                                this.prepareDownload(\"getSearchResult\");\r\n                                            } \r\n                                            catch (error) \r\n                                            {\r\n                                                console.log(error);\r\n                                                this.setState({\"data\": []});\r\n                                            }\r\n                                        }\r\n                            )\r\n            ;\r\n        }\r\n        catch (e) \r\n        {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    downloadData() \r\n    {\r\n        try \r\n        {   this.csvLink.link.click();\r\n        }\r\n        catch (e) \r\n        {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    getComponentDesign() {\r\n        let columns = this.getColumns();\r\n        let data = this.state.data;\r\n        let filterCaseInsensitive = (filter, row, column) =>    {\r\n                                                                    const id = filter.pivotId || filter.id\r\n                                                                    return row[id] !== undefined ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase()) : true\r\n                                                                }\r\n        ;\r\n        let componentDesign = <div className=\"home\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <h5>Encashment Management</h5>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\"><b>Date range</b></div>\r\n                <div className=\"col-sm-6\">From: &nbsp;\r\n                    <DatePicker dateFormat=\"yyyy-MMM-dd\" selected={this.state.fromDate} onChange={this.handleFromDateChange} />\r\n                    &nbsp;To: &nbsp;\r\n                <DatePicker dateFormat=\"yyyy-MMM-dd\" selected={this.state.toDate} onChange={this.handleToDateChange} />\r\n                </div>\r\n                <div className=\"col-sm-2\">\r\n                    <ButtonComponent\r\n                        text=\"Search\"\r\n                        onClick={() => this.getSearchResult()}\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-2\">\r\n                    <ButtonComponent\r\n                        text=\"Download\"\r\n                        onClick={() => this.downloadData()}\r\n                    />\r\n                    <div>\r\n                        <CSVLink\r\n                            data={this.state.dataToDownload}\r\n                            filename=\"encashment.csv\"\r\n                            className=\"hidden\"\r\n                            ref={(r) => this.csvLink = r}\r\n                            target=\"_blank\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n\r\n            <div className=\"row\">\r\n                <br></br>\r\n                <div className=\"col-sm-12\">\r\n                    <ReactTable\r\n                        data={data}\r\n                        columns={columns}\r\n                        defaultPageSize={20}\r\n                        pageSizeOptions={[20, 30, 40]}\r\n                        filterable={true}\r\n                        defaultFilterMethod = {filterCaseInsensitive}\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        return componentDesign;\r\n    }\r\n\r\n    render() {\r\n\r\n        let componentDesign = this.getComponentDesign()\r\n\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n}\r\n\r\nexport default withRouter(ManageEncashComponent);","import React from \"react\";\r\n\r\nimport { withRouter }   from \"react-router-dom\";\r\nimport ReactTable       from \"react-table-6\";\r\nimport ButtonComponent  from \"../../../widgets/ButtonComponent\";\r\nimport MainComponent    from \"../../../../common/MainComponent\";\r\nimport AuthUtil         from \"../../../../auth/AuthUtil\";\r\nimport DatePicker       from \"react-datepicker\";\r\nimport {CSVLink}        from \"react-csv\";\r\nimport Constant         from \"../../../../constants/GeneralConstants\";\r\nimport \"../../../../App.css\";\r\nimport \"react-table-6/react-table.css\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass ManageCollectionComponent extends React.Component \r\n{\r\n    constructor(props) \r\n    {\r\n        super(props);\r\n\r\n        this.state =    {   \"data\"            : []          ,\r\n                            \"fromDate\"        : new Date()  ,\r\n                            \"toDate\"          : new Date()  ,\r\n                            \"dataToDownload\"  : []\r\n                        }\r\n        ;\r\n\r\n        this.handleFromDateChange   = this.handleFromDateChange.bind(this)  ;\r\n        this.handleToDateChange     = this.handleToDateChange.bind(this)    ;\r\n        this.getSearchResult        = this.getSearchResult.bind(this)       ;\r\n        this.downloadData           = this.downloadData.bind(this)          ;\r\n        this.prepareDownload        = this.prepareDownload.bind(this)       ;\r\n    }\r\n\r\n    prepareDownload(source)\r\n    {\r\n        console.log(\"prepareDownload\");\r\n        console.log(source);\r\n        const columns = this.getColumns();\r\n        const currentRecords = this.state.data;\r\n\r\n        let dataToDownload = [];\r\n\r\n        let headerArray = [];\r\n        for (var i = 0; i < columns.length; i++)\r\n        {\r\n            headerArray[i] = columns[i].Header;\r\n        }\r\n        dataToDownload[0] = headerArray;\r\n\r\n        for(var j = 0; j < currentRecords.length; j++)\r\n        {\r\n            console.log(\"currentRecords[j]\");\r\n            console.log(currentRecords[j]);\r\n            let dataArray = [];\r\n\r\n            dataArray[0] = currentRecords[j].dateTime.replace(\"T\", \" \").substring(0, 19);\r\n            dataArray[1] = currentRecords[j].amount;\r\n            dataArray[2] = currentRecords[j].decision;\r\n\r\n            dataArray[3] = currentRecords[j].merchantId;\r\n            dataArray[4] = currentRecords[j].merchantName;\r\n            dataArray[5] = currentRecords[j].merchantWallet?currentRecords[j].merchantWallet.walletId:\"\";\r\n\r\n            dataArray[6] = currentRecords[j].payeeId;\r\n            dataArray[7] = currentRecords[j].payeeName;\r\n            dataArray[8] = currentRecords[j].payeeWallet?currentRecords[j].payeeWallet.walletId:\"\";\r\n\r\n            dataArray[9] = currentRecords[j].cashPointId;\r\n            dataArray[10] = currentRecords[j].cpName;\r\n            dataArray[11] = currentRecords[j].cashpointWallet?currentRecords[j].cashpointWallet.walletId:\"\";\r\n\r\n            dataArray[12] = currentRecords[j].collectionTypeName;\r\n            dataArray[13] = currentRecords[j].invoiceNo;\r\n            dataArray[14] = currentRecords[j].reference1;\r\n            dataArray[15] = currentRecords[j].reference2;\r\n            dataArray[16] = currentRecords[j].reference3;\r\n\r\n            dataToDownload[j + 1] = dataArray;\r\n        }\r\n\r\n        this.setState({dataToDownload: dataToDownload});\r\n    }\r\n\r\n    handleFromDateChange(date)\r\n    {\r\n        this.setState({fromDate: date});\r\n    }\r\n\r\n    handleToDateChange(date)\r\n    {\r\n        this.setState({toDate: date});\r\n    }\r\n\r\n    getMockData() \r\n    {\r\n        let mockData = [{\r\n            id: 1,\r\n            name: \"Mukit\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        }\r\n        ];\r\n        return mockData;\r\n    }\r\n\r\n    getColumns() {\r\n\r\n        let roleList = AuthUtil.getRoleList();\r\n        let roleId = roleList[0].name;\r\n\r\n        let columns = [\r\n            {\r\n                id: \"dateTime\",\r\n                Header: \"Date\",\r\n                width:200,\r\n                accessor: data => {return data.dateTime? data.dateTime.replace(\"T\", \" \").substring(0, 19): \"\"}\r\n            },\r\n            {\r\n                id: \"amount\",\r\n                Header: \"Amount\",\r\n                accessor: \"amount\",\r\n                Cell: ({ row }) => {return (<div align=\"right\">{row.amount}</div>)}\r\n            },\r\n            {\r\n                Header: \"Status\",\r\n                accessor: \"decision\"\r\n            },\r\n            {\r\n                Header: \"Merchant Id\",\r\n                width: 150,\r\n                accessor: \"merchantId\"\r\n            },\r\n            {\r\n                Header: \"Merchant Name\",\r\n                width: 250,\r\n                accessor: \"merchantName\"\r\n            },\r\n            {\r\n                Header: \"Merchant Wallet\",\r\n                width: 150,\r\n                accessor: \"merchantWallet.walletId\"\r\n            },\r\n            {\r\n                Header: \"Payee Name\",\r\n                width: 250,\r\n                accessor: \"payeeName\"\r\n            },\r\n            {\r\n                Header: \"Payee Wallet\",\r\n                width: 150,\r\n                accessor: \"payeeWallet.walletId\"\r\n            },\r\n            {\r\n                Header: \"Cashpoint Id\",\r\n                width: 150,\r\n                accessor: \"cashPointId\"\r\n            },\r\n            {\r\n                Header: \"Cashpoint Name\",\r\n                width: 250,\r\n                accessor: \"cpName\"\r\n            },\r\n            {\r\n                Header: \"Cashpoint Wallet\",\r\n                width: 150,\r\n                accessor: \"cashpointWallet.walletId\"\r\n            },\r\n            {\r\n                Header: \"Collection Type\",\r\n                width: 250,\r\n                accessor: \"collectionTypeName\"\r\n            },\r\n            {\r\n                Header: \"Invoice\",\r\n                width: 150,\r\n                accessor: \"invoiceNo\"\r\n            },\r\n            {\r\n                Header: \"Ref1\",\r\n                width: 150,\r\n                accessor: \"reference1\"\r\n            },\r\n            {\r\n                Header: \"Ref2\",\r\n                width: 150,\r\n                accessor: \"reference2\"\r\n            },\r\n            {\r\n                Header: \"Ref3\",\r\n                width: 150,\r\n                accessor: \"reference3\"\r\n            }\r\n        ];\r\n\r\n        let columnsMerchant = [\r\n            {\r\n                id: \"dateTime\",\r\n                Header: \"Date\",\r\n                width:200,\r\n                accessor: data => {return data.dateTime? data.dateTime.replace(\"T\", \" \").substring(0, 19): \"\"}\r\n            },\r\n            {\r\n                id: \"amount\",\r\n                Header: \"Amount\",\r\n                accessor: \"amount\",\r\n                Cell: ({ row }) => {return (<div align=\"right\">{row.amount}</div>)}\r\n            },\r\n            {\r\n                Header: \"Status\",\r\n                accessor: \"decision\"\r\n            },\r\n            {\r\n                Header: \"Payee Name\",\r\n                width: 200,\r\n                accessor: \"payeeName\"\r\n            },\r\n            {\r\n                Header: \"Payee Wallet\",\r\n                width: 120,\r\n                accessor: \"payeeWallet.walletId\"\r\n            },\r\n            {\r\n                Header: \"CP Wallet\",\r\n                width: 120,\r\n                accessor: \"cashpointWallet.walletId\"\r\n            },\r\n            {\r\n                Header: \"Collection Type\",\r\n                width: 150,\r\n                accessor: \"collectionTypeName\"\r\n            },\r\n            {\r\n                Header: \"Invoice\",\r\n                width: 150,\r\n                accessor: \"invoiceNo\"\r\n            }\r\n        ];\r\n\r\n        if (roleId === Constant.ROLE_NAME_MERCHANT)\r\n            return columnsMerchant;\r\n        else\r\n            return columns;\r\n    }\r\n\r\n    handleClick(row) {\r\n        console.log(\"Encash: \", row._original);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            fetch(gwUrl + \"collection-service/endpoint/collection/accountId\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    accountId: AuthUtil.getUsername(),\r\n                    fromDate: new Date(),\r\n                    toDate: new Date()\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => json.result)\r\n                .then(result => {\r\n                    try \r\n                    {\r\n                        this.setState({\"data\": result.data});\r\n                        this.prepareDownload(\"componentDidMount\");\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        this.setState({\r\n                            \"data\": []\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    getSearchResult() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        try {\r\n            fetch(gwUrl + \"collection-service/endpoint/collection/accountId\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                    \"token\": \"Bearer \" + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    accountId: AuthUtil.getUsername(),\r\n                    fromDate: this.state.fromDate,\r\n                    toDate: this.state.toDate\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => json.result)\r\n                .then(result => {\r\n                    try \r\n                    {\r\n                        this.setState({\"data\": result.data});\r\n                        this.prepareDownload(\"getSearchResult\");\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        this.setState({\r\n                            \"data\": []\r\n                        });\r\n                    }\r\n                })\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    downloadData() \r\n    {\r\n        try \r\n        {   this.csvLink.link.click();\r\n        }\r\n        catch (e) \r\n        {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    getComponentDesign() {\r\n        let columns = this.getColumns();\r\n        let data = this.state.data;\r\n        let filterCaseInsensitive = (filter, row, column) => {\r\n            const id = filter.pivotId || filter.id\r\n            return row[id] !== undefined ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase()) : true\r\n          };\r\n\r\n        let componentDesign = <div className=\"home\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <h5>Collection Management</h5>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\"><b>Date range</b></div>\r\n                <div className=\"col-sm-6\">From: &nbsp;\r\n                    <DatePicker dateFormat=\"yyyy-MMM-dd\" selected={this.state.fromDate} onChange={this.handleFromDateChange} />\r\n                    &nbsp;To: &nbsp;\r\n                <DatePicker dateFormat=\"yyyy-MMM-dd\" selected={this.state.toDate} onChange={this.handleToDateChange} />\r\n                </div>\r\n                <div className=\"col-sm-2\">\r\n                    <ButtonComponent\r\n                        text=\"Search\"\r\n                        onClick={() => this.getSearchResult()}\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-2\">\r\n                    <ButtonComponent\r\n                        text=\"Download\"\r\n                        onClick={() => this.downloadData()}\r\n                    />\r\n                    <div>\r\n                        <CSVLink\r\n                            data={this.state.dataToDownload}\r\n                            filename=\"collection.csv\"\r\n                            className=\"hidden\"\r\n                            ref={(r) => this.csvLink = r}\r\n                            target=\"_blank\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n\r\n            <div className=\"row\">\r\n                <br></br>\r\n                <div className=\"col-sm-12\">\r\n                    <ReactTable\r\n                        data={data}\r\n                        columns={columns}\r\n                        defaultPageSize={10}\r\n                        pageSizeOptions={[10, 20, 40]}\r\n                        filterable={true}\r\n                        defaultFilterMethod = {filterCaseInsensitive}\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-0\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        return componentDesign;\r\n    }\r\n\r\n    render() {\r\n        let componentDesign = this.getComponentDesign()\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n}\r\n\r\nexport default withRouter(ManageCollectionComponent);","import React from 'react';\r\n\r\nimport { withRouter }   from \"react-router-dom\"                         ;\r\nimport ReactTable       from \"react-table-6\"                            ;\r\nimport ButtonComponent  from \"../../../widgets/ButtonComponent\"         ;\r\nimport MainComponent    from \"../../../../common/MainComponent\"         ;\r\nimport AuthUtil         from \"../../../../auth/AuthUtil\"                ;\r\nimport DatePicker       from \"react-datepicker\"                         ;\r\nimport {CSVLink}        from \"react-csv\"                                ;\r\nimport \"../../../../App.css\"                                            ;\r\nimport \"react-table-6/react-table.css\"                                  ;\r\nimport \"react-datepicker/dist/react-datepicker.css\"                     ;\r\n\r\nclass ManageLiftingComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            \"data\"          : []        ,\r\n            \"fromDate\"      : new Date(),\r\n            \"toDate\"        : new Date(),\r\n            \"dataToDownload\": []\r\n        }\r\n\r\n        this.handleFromDateChange   = this.handleFromDateChange.bind(this)  ;\r\n        this.handleToDateChange     = this.handleToDateChange.bind(this)    ;\r\n        this.getSearchResult        = this.getSearchResult.bind(this)       ;\r\n        this.downloadData           = this.downloadData.bind(this)          ;\r\n        this.prepareDownload        = this.prepareDownload.bind(this)       ;\r\n    }\r\n\r\n    prepareDownload(source)\r\n    {\r\n        console.log(\"prepareDownload\");\r\n        console.log(source);\r\n        const columns = this.getColumns();\r\n        const currentRecords = this.state.data;\r\n\r\n        let dataToDownload = [];\r\n\r\n        let headerArray = [];\r\n        for (var i = 0; i < columns.length - 1; i++)\r\n        {\r\n            headerArray[i] = columns[i].Header;\r\n        }\r\n        dataToDownload[0] = headerArray;\r\n\r\n        console.log(\"====currentRecords====\");\r\n        console.log(currentRecords);\r\n        for(var j = 0; j < currentRecords.length; j++)\r\n        {\r\n            console.log(\"currentRecords[j]\");\r\n            console.log(currentRecords[j]);\r\n            let dataArray = [];\r\n\r\n            dataArray[0] = currentRecords[j].createDateTime.replace(\"T\", \" \").substring(0, 19);\r\n            dataArray[1] = currentRecords[j].cashpointId;\r\n            dataArray[2] = currentRecords[j].cashpoint?currentRecords[j].cashpoint.name: \"\";\r\n            dataArray[3] = currentRecords[j].wallet?currentRecords[j].wallet.walletId: \"\";\r\n            dataArray[4] = currentRecords[j].cashpoint == null? \"\" : (currentRecords[j].cashpoint.teritory? currentRecords[j].cashpoint.teritory.replace(\"Territory\", \"\"): \"\");\r\n            dataArray[5] = currentRecords[j].currency;\r\n            dataArray[6] = currentRecords[j].amount;\r\n            dataArray[7] = currentRecords[j].approvalDetails?currentRecords[j].approvalDetails.approvalDecision: \"\";\r\n           \r\n            dataToDownload[j + 1] = dataArray;\r\n        }\r\n\r\n        this.setState({\"dataToDownload\": dataToDownload});\r\n    }\r\n\r\n    handleFromDateChange(date)\r\n    {\r\n        this.setState({\"fromDate\": date});\r\n    }\r\n\r\n    handleToDateChange(date)\r\n    {\r\n        this.setState({\"toDate\": date});\r\n    }\r\n\r\n    getMockData() {\r\n        let mockData = [{\r\n            id: 1,\r\n            name: \"Mukit\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        }\r\n        ];\r\n        return mockData;\r\n    }\r\n\r\n    getColumns() {\r\n        let columns = [{\r\n            Header: 'Date',\r\n            id: 'createDateTime',\r\n            width:180,\r\n            accessor: data => {return data.createDateTime? data.createDateTime.replace(\"T\", \" \").substring(0, 19): \"\"}\r\n        }, \r\n        {\r\n            Header: 'Cashpoint Id',\r\n            width:120,\r\n            accessor: 'cashpointId'\r\n        },\r\n        {\r\n            Header: 'Name',\r\n            width:200,\r\n            accessor: 'cashpoint.name'\r\n        },\r\n        {\r\n            Header: 'Wallet',\r\n            width:120,\r\n            accessor: 'wallet.walletId'\r\n        }, \r\n        {\r\n            Header: 'Teritory',\r\n            id: 'cashpoint',\r\n            width:150,\r\n            accessor: data => {return data.cashpoint ==null? \"\" : (data.cashpoint.teritory? data.cashpoint.teritory.replace(\"Territory\", \"\"): \"\")}\r\n        }, \r\n        {\r\n            Header: 'Currency',\r\n            width:100,\r\n            accessor: 'currency'\r\n        },\r\n        {\r\n            Header: 'Amount',\r\n            width:100,\r\n            accessor: 'amount',\r\n            Cell: ({ row }) => {return (<div align=\"right\">{row.amount}</div>)}\r\n        },\r\n        {\r\n            Header: 'Status',\r\n            width:100,\r\n            accessor: 'approvalDetails.approvalDecision'\r\n        },\r\n        {\r\n            Header: \"Action\",\r\n            accessor: \"name\",\r\n            width: 200,\r\n            Cell: ({ row }) => {\r\n\r\n                if (row._original.approvalDetails.approvalDecision === '' || row._original.approvalDetails.approvalDecision === 'pending' || row._original.approvalDetails.approvalDecision === 'Pending' || row._original.approvalDetails.approvalDecision === 'PENDING') {\r\n                    return (\r\n                        <table align=\"center\"><tbody><tr><td>\r\n                            <ButtonComponent\r\n                                text=' Reject '\r\n                                onClick={(e) => { this.handleClick(row, 'Reject') }}\r\n                            /></td><td>\r\n                            <ButtonComponent\r\n                                text='Approve'\r\n                                onClick={(e) => { this.handleClick(row, 'Approve') }}\r\n                            /></td></tr></tbody>\r\n                        </table>\r\n                    )\r\n                }\r\n\r\n            }\r\n        }\r\n        ];\r\n\r\n        return columns;\r\n    }\r\n\r\n    handleClick(row, decision) {\r\n        let data = {\r\n            accountUserId: AuthUtil.getUsername(),\r\n            requestId: row._original.domainId,\r\n            decision: decision,\r\n            commentOne: \"n\",\r\n            commentTwo: \"n\"\r\n        }\r\n        this.updateApproval(data);\r\n        console.log(\"decision: \", decision, \" Lifting: \", row._original);\r\n    }\r\n\r\n    async updateApproval(data) {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            let res = await fetch(gwUrl + 'collection-service/endpoint/lifting/decision-update', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    accountUserId: data.accountUserId,\r\n                    requestId: data.requestId,\r\n                    decision: data.decision,\r\n                    commentOne: data.commentOne,\r\n                    commentTwo: data.commentTwo,\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            if (result.result.result === \"Success\") {\r\n                this.componentDidMount();\r\n            }\r\n\r\n            console.log(result);\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount() \r\n    {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try \r\n        {\r\n            fetch   (   gwUrl + \"collection-service/endpoint/lifting/accountId\", \r\n                        {   \"method\"    :   \"POST\",\r\n                            \"headers\"   :   {   \"Content-Type\"  : \"application/json\",\r\n                                                \"token\"         : \"Bearer \" + AuthUtil.getIdToken()\r\n                                            }\r\n                            ,\r\n                            \"body\"      : JSON.stringify(   {   \"accountId\" : AuthUtil.getUsername(),\r\n                                                                \"fromDate\"  : this.state.fromDate,\r\n                                                                \"toDate\"    : this.state.toDate                                                            \r\n                                                            }\r\n                                                        )\r\n                        }\r\n                    )\r\n                    .then(res => res.json())\r\n                    .then(json => json.result)\r\n                    .then   (result =>  {\r\n                                            try \r\n                                            {\r\n                                                this.setState({\"data\": result.data});\r\n                                                this.prepareDownload(\"componentDidMount\");\r\n                                            } \r\n                                            catch (error) \r\n                                            {\r\n                                                console.log(error);\r\n                                                this.setState({\"data\": []});\r\n                                            }\r\n                                        }\r\n                            )\r\n            ;\r\n        }\r\n        catch (e) \r\n        {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    downloadData() \r\n    {\r\n        try \r\n        {   this.csvLink.link.click();\r\n        }\r\n        catch (e) \r\n        {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    getSearchResult() \r\n    {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try \r\n        {\r\n            fetch   (   gwUrl + \"collection-service/endpoint/lifting/accountId\", \r\n                        {   \"method\"    :   \"POST\",\r\n                            \"headers\"   :   {   \"Content-Type\"  : \"application/json\",\r\n                                                \"token\"         : \"Bearer \" + AuthUtil.getIdToken()\r\n                                            }\r\n                            ,\r\n                            \"body\"      : JSON.stringify(   {   \"accountId\" : AuthUtil.getUsername(),\r\n                                                                \"fromDate\"  : this.state.fromDate,\r\n                                                                \"toDate\"    : this.state.toDate                                                            \r\n                                                            }\r\n                                                        )\r\n                        }\r\n                    )\r\n                    .then(res => res.json())\r\n                    .then(json => json.result)\r\n                    .then   (result =>  {\r\n                                            try \r\n                                            {\r\n                                                this.setState({\"data\": result.data});\r\n                                                this.prepareDownload(\"componentDidMount\");\r\n                                            } \r\n                                            catch (error) \r\n                                            {\r\n                                                console.log(error);\r\n                                                this.setState({\"data\": []});\r\n                                            }\r\n                                        }\r\n                            )\r\n            ;\r\n        }\r\n        catch (e) \r\n        {\r\n            console.log(e)\r\n        }\r\n    }\r\n\r\n    getComponentDesign() {\r\n        let columns = this.getColumns();\r\n        let data = this.state.data;\r\n        let filterCaseInsensitive = (filter, row, column) =>    {\r\n                                                                    const id = filter.pivotId || filter.id\r\n                                                                    return row[id] !== undefined ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase()) : true\r\n                                                                }\r\n        ;\r\n        let componentDesign = <div className=\"home\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <h5>Lifting Management</h5>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-2\"><b>Date range</b></div>\r\n                <div className=\"col-sm-6\">From: &nbsp;\r\n                    <DatePicker dateFormat=\"yyyy-MMM-dd\" selected={this.state.fromDate} onChange={this.handleFromDateChange} />\r\n                    &nbsp;To: &nbsp;\r\n                <DatePicker dateFormat=\"yyyy-MMM-dd\" selected={this.state.toDate} onChange={this.handleToDateChange} />\r\n                </div>\r\n                <div className=\"col-sm-2\">\r\n                    <ButtonComponent\r\n                        text=\"Search\"\r\n                        onClick={() => this.getSearchResult()}\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-2\">\r\n                    <ButtonComponent\r\n                        text=\"Download\"\r\n                        onClick={() => this.downloadData()}\r\n                    />\r\n                    <div>\r\n                        <CSVLink\r\n                            data={this.state.dataToDownload}\r\n                            filename=\"lifting.csv\"\r\n                            className=\"hidden\"\r\n                            ref={(r) => this.csvLink = r}\r\n                            target=\"_blank\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"row\">\r\n                <br></br>\r\n                <div className=\"col-lg-12\">\r\n                    <ReactTable\r\n                        data={data}\r\n                        columns={columns}\r\n                        defaultPageSize={20}\r\n                        pageSizeOptions={[20, 30, 40]}\r\n                        filterable={true}\r\n                        defaultFilterMethod = {filterCaseInsensitive}\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        return componentDesign;\r\n    }\r\n\r\n    render() {\r\n\r\n        let componentDesign = this.getComponentDesign()\r\n\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n}\r\n\r\nexport default withRouter(ManageLiftingComponent);","import React from 'react';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\nimport MainComponent from '../../../../common/MainComponent';\r\nimport AuthUtil from '../../../../auth/AuthUtil';\r\nimport '../../../../App.css'\r\nimport ButtonComponent from '../../../widgets/ButtonComponent';\r\n\r\nclass ApproverMyCash extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    getMockData() {\r\n        let mockData = [{\r\n            id: 1,\r\n            name: \"Mukit\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Ratul\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Emon\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Fahim\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        }\r\n        ];\r\n        return mockData;\r\n    }\r\n\r\n    getColumns() \r\n    {\r\n        let columns =   [\r\n                            {\r\n                                \"Header\"    : \"Date\"        ,\r\n                                \"id\"        : \"generateTime\",\r\n                                \"width\"     : 200           ,\r\n                                \"accessor\"  : data => {return data.generateTime? data.generateTime.replace(\"T\", \" \").substring(0, 19): \"\"}\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Merchant Id\" ,\r\n                                \"width\"     : 150           ,\r\n                                \"accessor\"  : \"merchantId\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Merchant Name\"   ,\r\n                                \"width\"     : 300               ,\r\n                                \"accessor\"  : \"merchantName\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Merchant Wallet\" ,\r\n                                \"width\"     : 150               ,\r\n                                \"accessor\"  : \"walletAccountId\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Amount\"          ,\r\n                                \"width\"     : 100               ,\r\n                                \"accessor\"  : \"encashmentAmount\",\r\n                                \"Cell\"      : ({ row }) => {return (<div align=\"right\">{row.encashmentAmount}</div>)}\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Decision\",\r\n                                \"width\"     : 150       ,\r\n                                \"accessor\"  : \"decision\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Action\",\r\n                                \"accessor\"  : \"name\",\r\n                                \"width\"     : 200,\r\n                                \"Cell\"      : ({ row }) =>  {\r\n                                                                return  (   <table align=\"center\"><tbody><tr><td>\r\n                                                                                <ButtonComponent\r\n                                                                                    text=\"Reject\"\r\n                                                                                    onClick={(e) => { this.handleClick(row, \"Reject\"); }}\r\n                                                                                /></td><td>\r\n                                                                                <ButtonComponent\r\n                                                                                    text=\"Approve\"\r\n                                                                                    onClick={(e) => { this.handleClick(row, \"Approve\"); }}\r\n                                                                                /></td></tr></tbody>\r\n                                                                            </table>\r\n                                                                        )\r\n                                                            }\r\n                            }\r\n        ];\r\n\r\n        return columns;\r\n    }\r\n\r\n    handleClick(row, decision) {\r\n        console.log(\"row:\", row)\r\n        let data = {\r\n            approverId: AuthUtil.getUsername(),\r\n            encashmentId: row._original.domainId,\r\n            comment: \"na\",\r\n            decision: decision\r\n        }\r\n        console.log(\"data:\", data)\r\n        this.updateApproval(data);\r\n        console.log(\"decision: \", decision, \" Lifting: \", row._original);\r\n    }\r\n\r\n    async updateApproval(data) {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            let res = await fetch(gwUrl + 'collection-service/endpoint/encashment/decision-update', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    approverId: data.approverId,\r\n                    encashmentId: data.encashmentId,\r\n                    comment: data.comment,\r\n                    decision: data.decision\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            // if (result.result.status === \"SUCCESS\") {\r\n            //     AuthUtil.setMenu(result.result.response[0].menuId);\r\n            //     this.props.history.push(\"/home\");\r\n            // }\r\n            this.componentDidMount();\r\n\r\n            console.log(result);\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            fetch(gwUrl + 'collection-service/endpoint/encashment/pending', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    accountId: AuthUtil.getUsername()\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => json.result)\r\n                .then(result => {\r\n                    try {\r\n                        this.setState({\r\n                            'data': result.data\r\n                        });\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        this.setState({\r\n                            'data': []\r\n                        });\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    getComponentDesign() {\r\n        let columns = this.getColumns();\r\n        let data = this.state.data;\r\n        let filterCaseInsensitive = (filter, row, column) =>    {\r\n                                                                    const id = filter.pivotId || filter.id\r\n                                                                    return row[id] !== undefined ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase()) : true\r\n                                                                }\r\n        ;\r\n        let componentDesign = <div className=\"home\">\r\n            <br></br>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <h5>Bank Encashment MyCash</h5>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"row\">\r\n            </div>\r\n            <div className=\"row\">\r\n                <br></br>\r\n                <div className=\"col-lg-12\">\r\n                    <ReactTable\r\n                        data={data}\r\n                        columns={columns}\r\n                        defaultPageSize={20}\r\n                        pageSizeOptions={[20, 30, 40]}\r\n                        filterable={true}\r\n                        defaultFilterMethod = {filterCaseInsensitive}\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        return componentDesign;\r\n    }\r\n\r\n    render() {\r\n\r\n        let componentDesign = this.getComponentDesign()\r\n\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n}\r\n\r\nexport default withRouter(ApproverMyCash);","import React from 'react';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport ReactTable from \"react-table-6\";\r\nimport \"react-table-6/react-table.css\";\r\nimport MainComponent from '../../../../common/MainComponent';\r\nimport AuthUtil from '../../../../auth/AuthUtil';\r\nimport '../../../../App.css'\r\n\r\nclass ApproverMyCashHistory extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: []\r\n        }\r\n    }\r\n\r\n    getMockData() {\r\n        let mockData = [{\r\n            id: 1,\r\n            name: \"Mukit\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 2,\r\n            name: \"Ratul\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 3,\r\n            name: \"Emon\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        },\r\n        {\r\n            id: 4,\r\n            name: \"Fahim\",\r\n            occupation: \"SE\",\r\n            address: \"Dhaka\"\r\n        }\r\n        ];\r\n        return mockData;\r\n    }\r\n\r\n    getColumns() \r\n    {\r\n        let columns =   [\r\n                            {\r\n                                \"Header\"    : \"Date\"        ,\r\n                                \"id\"        : \"generateTime\",\r\n                                \"width\"     : 200           ,\r\n                                \"accessor\"  : data => {return data.generateTime? data.generateTime.replace(\"T\", \" \").substring(0, 19): \"\"}\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Merchant Id\" ,\r\n                                \"width\"     : 150           ,\r\n                                \"accessor\"  : \"merchantId\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Merchant Name\"   ,\r\n                                \"width\"     : 300               ,\r\n                                \"accessor\"  : \"merchantName\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Merchant Wallet\" ,\r\n                                \"width\"     : 150               ,\r\n                                \"accessor\"  : \"walletAccountId\"\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Amount\"          ,\r\n                                \"width\"     : 100               ,\r\n                                \"accessor\"  : \"encashmentAmount\",\r\n                                \"Cell\"      : ({ row }) => {return (<div align=\"right\">{row.encashmentAmount}</div>)}\r\n                            },\r\n                            {\r\n                                \"Header\"    : \"Decision\",\r\n                                \"width\"     : 150       ,\r\n                                \"accessor\"  : \"decision\"\r\n                            }\r\n                        ]\r\n        ;\r\n\r\n        return columns;\r\n    }\r\n\r\n    handleClick(row, decision) {\r\n        let data = {\r\n            approverId: AuthUtil.getUsername(),\r\n            encashmentId: row.domainId,\r\n            comment: \"na\",\r\n            decision: decision\r\n        }\r\n        this.updateApproval(data);\r\n        console.log(\"decision: \", decision, \" Lifting: \", row._original);\r\n    }\r\n\r\n    async updateApproval(data) {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            let res = await fetch(gwUrl + 'collection-service/endpoint/encashment/decision-update', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    approverId: data.approverId,\r\n                    encashmentId: data.encashmentId,\r\n                    comment: data.comment,\r\n                    decision: data.decision\r\n                })\r\n            });\r\n\r\n            let result = await res.json();\r\n\r\n            // if (result.result.status === \"SUCCESS\") {\r\n            //     AuthUtil.setMenu(result.result.response[0].menuId);\r\n            //     this.props.history.push(\"/home\");\r\n            // }\r\n\r\n            console.log(result);\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            fetch(gwUrl + 'collection-service/endpoint/encashment/accountId', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    accountId: AuthUtil.getUsername()\r\n                })\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => json.result)\r\n                .then(result => {\r\n                    try {\r\n                        this.setState({\r\n                            'data': result.data\r\n                        });\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        this.setState({\r\n                            'data': []\r\n                        });\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n\r\n    getComponentDesign() {\r\n        let columns = this.getColumns();\r\n        let data = this.state.data;\r\n        let filterCaseInsensitive = (filter, row, column) =>    {\r\n                                                                    const id = filter.pivotId || filter.id\r\n                                                                    return row[id] !== undefined ? String(row[id].toLowerCase()).startsWith(filter.value.toLowerCase()) : true\r\n                                                                }\r\n        ;\r\n        let componentDesign = <div className=\"home\">\r\n            <br></br>\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <h5>Bank Encashment MyCash History</h5>\r\n                </div>\r\n            </div>\r\n            <br></br>\r\n            <div className=\"row\">\r\n            </div>\r\n            <div className=\"row\">\r\n                <br></br>\r\n                <div className=\"col-sm-12\">\r\n                    <ReactTable\r\n                        data={data}\r\n                        columns={columns}\r\n                        defaultPageSize={20}\r\n                        pageSizeOptions={[20, 30, 40]}\r\n                        filterable={true}\r\n                        defaultFilterMethod = {filterCaseInsensitive}\r\n                    />\r\n                </div>\r\n                <div className=\"col-sm-4\">\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        return componentDesign;\r\n    }\r\n\r\n    render() {\r\n\r\n        let componentDesign = this.getComponentDesign()\r\n\r\n        return <MainComponent component={componentDesign} />;\r\n    }\r\n}\r\n\r\nexport default withRouter(ApproverMyCashHistory);","import React from 'react'\r\nimport ButtonComponent from './widgets/ButtonComponent'\r\nimport AuthUtil from '../auth/AuthUtil';\r\nimport Constant from '../constants/GeneralConstants';\r\nimport '../App.css'\r\nclass LabComponent extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedData: {},\r\n            data: []\r\n        }\r\n\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n\r\n        try {\r\n            fetch(gwUrl + 'collection-service/endpoint/wallet', {\r\n                method: 'GET',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                }\r\n            })\r\n                .then(res => res.json())\r\n                .then(json => json.result)\r\n                .then(result => {\r\n                    try {\r\n                        this.setState({\r\n                            'data': []\r\n                        });\r\n                    } catch (error) {\r\n                        console.log(error);\r\n                        this.setState({\r\n                            'data': []\r\n                        });\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n        catch (e) {\r\n            console.log(e)\r\n        }\r\n\r\n    }\r\n    getComponentDesign() {\r\n\r\n        let design = <div className=\"card-form-body\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"d-flex justify-content-end\"><h3>Wallet Add Form</h3></div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"d-flex justify-content-start\">\r\n                        <div className=\"form-input-label\">Choose Wallet</div>\r\n                        <div className=\"form-dropdown\">\r\n                            <select className=\"form-dropdown-select\" value={this.value} onChange={(e) => { this.setInputValue('selectedData', e.target.value) }}>\r\n                                <option key={\"1\"} value={\"wallet\"}>{\"Select Wallet Account Number\"}</option>)\r\n                                {this.state.data.map((item) => <option key={item.domainId} value={JSON.stringify(item)}>{item.walletAccountId}</option>)}\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <ButtonComponent\r\n                            text='Reset'\r\n                            onClick={() => this.save()}\r\n                        />\r\n                    </div>\r\n\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n        return design;\r\n    }\r\n\r\n    setInputValue(property, val) {\r\n        this.setState({\r\n            [property]: val\r\n        })\r\n    }\r\n\r\n    async save() {\r\n        const gwUrl = process.env.REACT_APP_API_GW_HOST;\r\n        let walletInfo = JSON.parse(this.state.selectedData);\r\n        try {\r\n            let res = await fetch(gwUrl + 'collection-service/endpoint/wallet/otp-reset', {\r\n                method: \"POST\",\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'token': 'Bearer ' + AuthUtil.getIdToken()\r\n                },\r\n                body: JSON.stringify({\r\n                    walletId: walletInfo.walletId,\r\n                    transactionAccountId: walletInfo.transactionAccountId,\r\n                    walletPin: walletInfo.walletPin\r\n                })\r\n            });\r\n\r\n            let response = await res.json();\r\n            if (response.result.code === Constant.MW_RESPONSE_SUCCESS_CODE) {\r\n                this.props.history.push({\r\n                    pathname: '/home'\r\n                });\r\n            }\r\n\r\n        } catch (e) {\r\n            console.log(e);\r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    render() {\r\n        let componentDesign = this.getComponentDesign();\r\n        //return <MainComponent component={componentDesign} />;\r\n        return componentDesign;\r\n    }\r\n\r\n}\r\n\r\nexport default LabComponent;","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-notifications/lib/notifications.css';\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n  BrowserRouter as Router, Route, Switch\r\n} from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport UpdatePassword from \"./components/password/UpdatePasswordComponent\";\r\nimport SubmitOTP from \"./components/password/OTPSubmitComponent\";\r\nimport GenerateOTP from \"./components/password/OTPGenerateComponent\";\r\nimport HomeComponent from \"./components/collection-portal/home/HomeComponent\";\r\nimport DetailComponent from \"./components/collection-portal/home/DetailPageComponent\";\r\nimport ManageWallet from \"./components/collection-portal/account-head/wallet-management/ManageWalletComponent\";\r\nimport AddWallet from \"./components/collection-portal/account-head/wallet-management/WalletAddComponent\";\r\nimport WalletOTPResetComponent from \"./components/collection-portal/account/wallet-otp-reset/WalletOTPResetComponent\";\r\nimport DigitalMoneyAcquisition from \"./components/collection-portal/account-head/digital-money-acquisition/DigitalMoneyAcquisitionComponent\";\r\nimport AddDigitalMoneyAcquisitionRequest from \"./components/collection-portal/account-head/digital-money-acquisition/DigitalMoneyAcquisitionRequestComponent\";\r\nimport ManageEncashComponent from \"./components/collection-portal/account-head/encashment/ManageEncashComponent\";\r\nimport ManageCollectionComponent from \"./components/collection-portal/account-head/collection/ManageCollectionComponent\";\r\nimport ManageLiftingComponent from \"./components/collection-portal/account-head/lifting/ManageLiftingComponent\";\r\n\r\n\r\nimport ApproverMyCash from \"./components/collection-portal/account-head/encashment/ApproverMyCash\";\r\nimport ApproverMyCashHistory from \"./components/collection-portal/account-head/encashment/ApproverMyCashHistory\";\r\n\r\nimport Lab from \"./components/Lab\";\r\nimport \"./index.css\";\r\nconst routing = (\r\n  <Router>\r\n    <Switch>\r\n      <Route exact path=\"/\" component={App} />\r\n      <Route exact path=\"/home\" component={HomeComponent} />\r\n      <Route exact path=\"/home/detail\" component={DetailComponent} />\r\n      <Route exact path=\"/manage-wallet\" component={ManageWallet} />\r\n      <Route exact path=\"/add-wallet\" component={AddWallet} />\r\n      <Route exact path=\"/reset-wallet-otp\" component={WalletOTPResetComponent} />\r\n      <Route exact path=\"/digital-money-acquire\" component={DigitalMoneyAcquisition} />\r\n      <Route exact path=\"/add-digital-money-acquisition-request\" component={AddDigitalMoneyAcquisitionRequest} />\r\n\r\n      <Route exact path=\"/manage-encashment\" component={ManageEncashComponent} />\r\n      <Route exact path=\"/manage-encashment-mycash\" component={ApproverMyCash} />\r\n      <Route exact path=\"/manage-encashment-mycash-history\" component={ApproverMyCashHistory} />\r\n\r\n\r\n      <Route exact path=\"/manage-collection\" component={ManageCollectionComponent} />\r\n      <Route exact path=\"/manage-lifting\" component={ManageLiftingComponent} />\r\n\r\n      <Route exact path=\"/update-password\" component={UpdatePassword} />\r\n      <Route exact path=\"/submit-otp\" component={SubmitOTP} />\r\n      <Route exact path=\"/generate-otp\" component={GenerateOTP} />\r\n      <Route exact path=\"/lab\" component={Lab} />\r\n    </Switch>\r\n  </Router>\r\n);\r\nReactDOM.render(routing, document.getElementById(\"root\"));"],"sourceRoot":""}